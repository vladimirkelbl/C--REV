

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 10 23:23:34 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 2.05
    35                           ; Generated 20/12/2018 GMT
    36                           ; 
    37                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F46K22 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     _ANSELDbits	set	3899
    69  0000                     _CCPTMRS0bits	set	3913
    70  0000                     _ANSELE	set	3900
    71  0000                     _ANSELAbits	set	3896
    72  0000                     _ANSELC	set	3898
    73  0000                     _ANSELA	set	3896
    74  0000                     _TMR1	set	4046
    75  0000                     _SSP2STATbits	set	3949
    76  0000                     _SSP2BUF	set	3951
    77  0000                     _SSP2CON2bits	set	3947
    78  0000                     _SSP2ADD	set	3950
    79  0000                     _SSP2CON1bits	set	3948
    80  0000                     _LATAbits	set	3977
    81  0000                     _TX1REG	set	4013
    82  0000                     _PORTCbits	set	3970
    83  0000                     _PORTAbits	set	3968
    84  0000                     _T2CONbits	set	4026
    85  0000                     _CCPR1L	set	4030
    86  0000                     _CCP1CONbits	set	4029
    87  0000                     _PR2	set	4027
    88  0000                     _PSTR1CON	set	4025
    89  0000                     _ADCON0bits	set	4034
    90  0000                     _ADCON1bits	set	4033
    91  0000                     _ADCON2bits	set	4032
    92  0000                     _T1CONbits	set	4045
    93  0000                     _TRISD	set	3989
    94  0000                     _RCSTA1bits	set	4011
    95  0000                     _TXSTA1bits	set	4012
    96  0000                     _SPBRG1	set	4015
    97  0000                     _TRISAbits	set	3986
    98  0000                     _TRISCbits	set	3988
    99  0000                     _TRISDbits	set	3989
   100  0000                     _TXREG1	set	4013
   101  0000                     _RCREG1	set	4014
   102  0000                     _ADRESL	set	4035
   103  0000                     _ADRESH	set	4036
   104  0000                     _SSP2IF	set	32039
   105  0000                     _GODONE	set	32273
   106  0000                     _TMR2ON	set	32210
   107  0000                     _TMR2IF	set	31985
   108  0000                     _GIE	set	32663
   109  0000                     _PEIE	set	32662
   110  0000                     _LATD6	set	31846
   111  0000                     _LATD5	set	31845
   112  0000                     _LATD4	set	31844
   113  0000                     _LATC4	set	31836
   114  0000                     _LATD3	set	31843
   115  0000                     _LATD2	set	31842
   116  0000                     _TX1IF	set	31988
   117  0000                     _TX1IE	set	31980
   118  0000                     _RC1IF	set	31989
   119  0000                     _RC1IE	set	31981
   120  0000                     _ADIF	set	31990
   121  0000                     _ADIE	set	31982
   122  0000                     _TMR1IF	set	31984
   123  0000                     _TMR1IE	set	31976
   124                           
   125                           	psect	mediumconst
   126  00FD42                     __pmediumconst:
   127                           	opt callstack 0
   128  00FD42  00                 	db	0
   129  00FD43                     STR_11:
   130  00FD43  53                 	db	83	;'S'
   131  00FD44  74                 	db	116	;'t'
   132  00FD45  61                 	db	97	;'a'
   133  00FD46  74                 	db	116	;'t'
   134  00FD47  65                 	db	101	;'e'
   135  00FD48  3A                 	db	58	;':'
   136  00FD49  20                 	db	32
   137  00FD4A  54                 	db	84	;'T'
   138  00FD4B  65                 	db	101	;'e'
   139  00FD4C  74                 	db	116	;'t'
   140  00FD4D  72                 	db	114	;'r'
   141  00FD4E  69                 	db	105	;'i'
   142  00FD4F  73                 	db	115	;'s'
   143  00FD50  20                 	db	32
   144  00FD51  20                 	db	32
   145  00FD52  20                 	db	32
   146  00FD53  20                 	db	32
   147  00FD54  20                 	db	32
   148  00FD55  20                 	db	32
   149  00FD56  00                 	db	0
   150  00FD57                     STR_10:
   151  00FD57  20                 	db	32
   152  00FD58  20                 	db	32
   153  00FD59  20                 	db	32
   154  00FD5A  20                 	db	32
   155  00FD5B  20                 	db	32
   156  00FD5C  20                 	db	32
   157  00FD5D  20                 	db	32
   158  00FD5E  20                 	db	32
   159  00FD5F  20                 	db	32
   160  00FD60  20                 	db	32
   161  00FD61  20                 	db	32
   162  00FD62  20                 	db	32
   163  00FD63  20                 	db	32
   164  00FD64  20                 	db	32
   165  00FD65  20                 	db	32
   166  00FD66  20                 	db	32
   167  00FD67  00                 	db	0
   168  00FD68                     STR_17:
   169  00FD68  53                 	db	83	;'S'
   170  00FD69  74                 	db	116	;'t'
   171  00FD6A  61                 	db	97	;'a'
   172  00FD6B  74                 	db	116	;'t'
   173  00FD6C  65                 	db	101	;'e'
   174  00FD6D  3A                 	db	58	;':'
   175  00FD6E  20                 	db	32
   176  00FD6F  41                 	db	65	;'A'
   177  00FD70  44                 	db	68	;'D'
   178  00FD71  43                 	db	67	;'C'
   179  00FD72  20                 	db	32
   180  00FD73  20                 	db	32
   181  00FD74  20                 	db	32
   182  00FD75  20                 	db	32
   183  00FD76  20                 	db	32
   184  00FD77  20                 	db	32
   185  00FD78  00                 	db	0
   186  00FD79                     STR_3:
   187  00FD79  20                 	db	32
   188  00FD7A  30                 	db	48	;'0'
   189  00FD7B  2E                 	db	46
   190  00FD7C  20                 	db	32
   191  00FD7D  54                 	db	84	;'T'
   192  00FD7E  65                 	db	101	;'e'
   193  00FD7F  74                 	db	116	;'t'
   194  00FD80  72                 	db	114	;'r'
   195  00FD81  69                 	db	105	;'i'
   196  00FD82  73                 	db	115	;'s'
   197  00FD83  20                 	db	32
   198  00FD84  20                 	db	32
   199  00FD85  20                 	db	32
   200  00FD86  20                 	db	32
   201  00FD87  20                 	db	32
   202  00FD88  20                 	db	32
   203  00FD89  00                 	db	0
   204  00FD8A                     STR_1:
   205  00FD8A  2D                 	db	45
   206  00FD8B  30                 	db	48	;'0'
   207  00FD8C  2E                 	db	46
   208  00FD8D  20                 	db	32
   209  00FD8E  54                 	db	84	;'T'
   210  00FD8F  65                 	db	101	;'e'
   211  00FD90  74                 	db	116	;'t'
   212  00FD91  72                 	db	114	;'r'
   213  00FD92  69                 	db	105	;'i'
   214  00FD93  73                 	db	115	;'s'
   215  00FD94  20                 	db	32
   216  00FD95  20                 	db	32
   217  00FD96  20                 	db	32
   218  00FD97  20                 	db	32
   219  00FD98  20                 	db	32
   220  00FD99  20                 	db	32
   221  00FD9A  00                 	db	0
   222  00FD9B                     STR_9:
   223  00FD9B  2D                 	db	45
   224  00FD9C  34                 	db	52	;'4'
   225  00FD9D  3A                 	db	58	;':'
   226  00FD9E  20                 	db	32
   227  00FD9F  31                 	db	49	;'1'
   228  00FDA0  44                 	db	68	;'D'
   229  00FDA1  20                 	db	32
   230  00FDA2  50                 	db	80	;'P'
   231  00FDA3  6F                 	db	111	;'o'
   232  00FDA4  6E                 	db	110	;'n'
   233  00FDA5  67                 	db	103	;'g'
   234  00FDA6  20                 	db	32
   235  00FDA7  20                 	db	32
   236  00FDA8  20                 	db	32
   237  00FDA9  20                 	db	32
   238  00FDAA  20                 	db	32
   239  00FDAB  00                 	db	0
   240  00FDAC                     STR_22:
   241  00FDAC  20                 	db	32
   242  00FDAD  20                 	db	32
   243  00FDAE  20                 	db	32
   244  00FDAF  47                 	db	71	;'G'
   245  00FDB0  41                 	db	65	;'A'
   246  00FDB1  4D                 	db	77	;'M'
   247  00FDB2  45                 	db	69	;'E'
   248  00FDB3  20                 	db	32
   249  00FDB4  4F                 	db	79	;'O'
   250  00FDB5  56                 	db	86	;'V'
   251  00FDB6  45                 	db	69	;'E'
   252  00FDB7  52                 	db	82	;'R'
   253  00FDB8  21                 	db	33
   254  00FDB9  20                 	db	32
   255  00FDBA  20                 	db	32
   256  00FDBB  20                 	db	32
   257  00FDBC  00                 	db	0
   258  00FDBD                     STR_7:
   259  00FDBD  20                 	db	32
   260  00FDBE  32                 	db	50	;'2'
   261  00FDBF  3A                 	db	58	;':'
   262  00FDC0  20                 	db	32
   263  00FDC1  50                 	db	80	;'P'
   264  00FDC2  57                 	db	87	;'W'
   265  00FDC3  4D                 	db	77	;'M'
   266  00FDC4  20                 	db	32
   267  00FDC5  6D                 	db	109	;'m'
   268  00FDC6  6F                 	db	111	;'o'
   269  00FDC7  74                 	db	116	;'t'
   270  00FDC8  6F                 	db	111	;'o'
   271  00FDC9  72                 	db	114	;'r'
   272  00FDCA  20                 	db	32
   273  00FDCB  20                 	db	32
   274  00FDCC  20                 	db	32
   275  00FDCD  00                 	db	0
   276  00FDCE                     STR_5:
   277  00FDCE  2D                 	db	45
   278  00FDCF  32                 	db	50	;'2'
   279  00FDD0  3A                 	db	58	;':'
   280  00FDD1  20                 	db	32
   281  00FDD2  50                 	db	80	;'P'
   282  00FDD3  57                 	db	87	;'W'
   283  00FDD4  4D                 	db	77	;'M'
   284  00FDD5  20                 	db	32
   285  00FDD6  6D                 	db	109	;'m'
   286  00FDD7  6F                 	db	111	;'o'
   287  00FDD8  74                 	db	116	;'t'
   288  00FDD9  6F                 	db	111	;'o'
   289  00FDDA  72                 	db	114	;'r'
   290  00FDDB  20                 	db	32
   291  00FDDC  20                 	db	32
   292  00FDDD  20                 	db	32
   293  00FDDE  00                 	db	0
   294  00FDDF                     STR_2:
   295  00FDDF  20                 	db	32
   296  00FDE0  31                 	db	49	;'1'
   297  00FDE1  2E                 	db	46
   298  00FDE2  20                 	db	32
   299  00FDE3  4B                 	db	75	;'K'
   300  00FDE4  61                 	db	97	;'a'
   301  00FDE5  6C                 	db	108	;'l'
   302  00FDE6  6B                 	db	107	;'k'
   303  00FDE7  75                 	db	117	;'u'
   304  00FDE8  6C                 	db	108	;'l'
   305  00FDE9  61                 	db	97	;'a'
   306  00FDEA  63                 	db	99	;'c'
   307  00FDEB  6B                 	db	107	;'k'
   308  00FDEC  61                 	db	97	;'a'
   309  00FDED  20                 	db	32
   310  00FDEE  20                 	db	32
   311  00FDEF  00                 	db	0
   312  00FDF0                     STR_4:
   313  00FDF0  2D                 	db	45
   314  00FDF1  31                 	db	49	;'1'
   315  00FDF2  2E                 	db	46
   316  00FDF3  20                 	db	32
   317  00FDF4  4B                 	db	75	;'K'
   318  00FDF5  61                 	db	97	;'a'
   319  00FDF6  6C                 	db	108	;'l'
   320  00FDF7  6B                 	db	107	;'k'
   321  00FDF8  75                 	db	117	;'u'
   322  00FDF9  6C                 	db	108	;'l'
   323  00FDFA  61                 	db	97	;'a'
   324  00FDFB  63                 	db	99	;'c'
   325  00FDFC  6B                 	db	107	;'k'
   326  00FDFD  61                 	db	97	;'a'
   327  00FDFE  20                 	db	32
   328  00FDFF  20                 	db	32
   329  00FE00  00                 	db	0
   330  00FE01                     STR_23:
   331  00FE01  20                 	db	32
   332  00FE02  20                 	db	32
   333  00FE03  50                 	db	80	;'P'
   334  00FE04  6C                 	db	108	;'l'
   335  00FE05  61                 	db	97	;'a'
   336  00FE06  79                 	db	121	;'y'
   337  00FE07  65                 	db	101	;'e'
   338  00FE08  72                 	db	114	;'r'
   339  00FE09  20                 	db	32
   340  00FE0A  31                 	db	49	;'1'
   341  00FE0B  20                 	db	32
   342  00FE0C  77                 	db	119	;'w'
   343  00FE0D  6F                 	db	111	;'o'
   344  00FE0E  6E                 	db	110	;'n'
   345  00FE0F  20                 	db	32
   346  00FE10  20                 	db	32
   347  00FE11  00                 	db	0
   348  00FE12                     STR_35:
   349  00FE12  20                 	db	32
   350  00FE13  20                 	db	32
   351  00FE14  50                 	db	80	;'P'
   352  00FE15  6C                 	db	108	;'l'
   353  00FE16  61                 	db	97	;'a'
   354  00FE17  79                 	db	121	;'y'
   355  00FE18  65                 	db	101	;'e'
   356  00FE19  72                 	db	114	;'r'
   357  00FE1A  20                 	db	32
   358  00FE1B  32                 	db	50	;'2'
   359  00FE1C  20                 	db	32
   360  00FE1D  77                 	db	119	;'w'
   361  00FE1E  6F                 	db	111	;'o'
   362  00FE1F  6E                 	db	110	;'n'
   363  00FE20  20                 	db	32
   364  00FE21  20                 	db	32
   365  00FE22  00                 	db	0
   366  00FE23                     STR_18:
   367  00FE23  20                 	db	32
   368  00FE24  20                 	db	32
   369  00FE25  20                 	db	32
   370  00FE26  20                 	db	32
   371  00FE27  20                 	db	32
   372  00FE28  20                 	db	32
   373  00FE29  20                 	db	32
   374  00FE2A  62                 	db	98	;'b'
   375  00FE2B  61                 	db	97	;'a'
   376  00FE2C  72                 	db	114	;'r'
   377  00FE2D  67                 	db	103	;'g'
   378  00FE2E  72                 	db	114	;'r'
   379  00FE2F  61                 	db	97	;'a'
   380  00FE30  70                 	db	112	;'p'
   381  00FE31  68                 	db	104	;'h'
   382  00FE32  20                 	db	32
   383  00FE33  00                 	db	0
   384  00FE34                     STR_31:
   385  00FE34  5A                 	db	90	;'Z'
   386  00FE35  69                 	db	105	;'i'
   387  00FE36  76                 	db	118	;'v'
   388  00FE37  6F                 	db	111	;'o'
   389  00FE38  74                 	db	116	;'t'
   390  00FE39  79                 	db	121	;'y'
   391  00FE3A  3A                 	db	58	;':'
   392  00FE3B  20                 	db	32
   393  00FE3C  2B                 	db	43
   394  00FE3D  20                 	db	32
   395  00FE3E  20                 	db	32
   396  00FE3F  20                 	db	32
   397  00FE40  20                 	db	32
   398  00FE41  20                 	db	32
   399  00FE42  20                 	db	32
   400  00FE43  2B                 	db	43
   401  00FE44  00                 	db	0
   402  00FE45                     STR_26:
   403  00FE45  5A                 	db	90	;'Z'
   404  00FE46  69                 	db	105	;'i'
   405  00FE47  76                 	db	118	;'v'
   406  00FE48  6F                 	db	111	;'o'
   407  00FE49  74                 	db	116	;'t'
   408  00FE4A  79                 	db	121	;'y'
   409  00FE4B  3A                 	db	58	;':'
   410  00FE4C  20                 	db	32
   411  00FE4D  2B                 	db	43
   412  00FE4E  2B                 	db	43
   413  00FE4F  20                 	db	32
   414  00FE50  20                 	db	32
   415  00FE51  20                 	db	32
   416  00FE52  20                 	db	32
   417  00FE53  20                 	db	32
   418  00FE54  2B                 	db	43
   419  00FE55  00                 	db	0
   420  00FE56                     STR_21:
   421  00FE56  5A                 	db	90	;'Z'
   422  00FE57  69                 	db	105	;'i'
   423  00FE58  76                 	db	118	;'v'
   424  00FE59  6F                 	db	111	;'o'
   425  00FE5A  74                 	db	116	;'t'
   426  00FE5B  79                 	db	121	;'y'
   427  00FE5C  3A                 	db	58	;':'
   428  00FE5D  20                 	db	32
   429  00FE5E  2B                 	db	43
   430  00FE5F  2B                 	db	43
   431  00FE60  2B                 	db	43
   432  00FE61  20                 	db	32
   433  00FE62  20                 	db	32
   434  00FE63  20                 	db	32
   435  00FE64  20                 	db	32
   436  00FE65  2B                 	db	43
   437  00FE66  00                 	db	0
   438  00FE67                     STR_30:
   439  00FE67  5A                 	db	90	;'Z'
   440  00FE68  69                 	db	105	;'i'
   441  00FE69  76                 	db	118	;'v'
   442  00FE6A  6F                 	db	111	;'o'
   443  00FE6B  74                 	db	116	;'t'
   444  00FE6C  79                 	db	121	;'y'
   445  00FE6D  3A                 	db	58	;':'
   446  00FE6E  20                 	db	32
   447  00FE6F  2B                 	db	43
   448  00FE70  20                 	db	32
   449  00FE71  20                 	db	32
   450  00FE72  20                 	db	32
   451  00FE73  20                 	db	32
   452  00FE74  20                 	db	32
   453  00FE75  2B                 	db	43
   454  00FE76  2B                 	db	43
   455  00FE77  00                 	db	0
   456  00FE78                     STR_25:
   457  00FE78  5A                 	db	90	;'Z'
   458  00FE79  69                 	db	105	;'i'
   459  00FE7A  76                 	db	118	;'v'
   460  00FE7B  6F                 	db	111	;'o'
   461  00FE7C  74                 	db	116	;'t'
   462  00FE7D  79                 	db	121	;'y'
   463  00FE7E  3A                 	db	58	;':'
   464  00FE7F  20                 	db	32
   465  00FE80  2B                 	db	43
   466  00FE81  2B                 	db	43
   467  00FE82  20                 	db	32
   468  00FE83  20                 	db	32
   469  00FE84  20                 	db	32
   470  00FE85  20                 	db	32
   471  00FE86  2B                 	db	43
   472  00FE87  2B                 	db	43
   473  00FE88  00                 	db	0
   474  00FE89                     STR_20:
   475  00FE89  5A                 	db	90	;'Z'
   476  00FE8A  69                 	db	105	;'i'
   477  00FE8B  76                 	db	118	;'v'
   478  00FE8C  6F                 	db	111	;'o'
   479  00FE8D  74                 	db	116	;'t'
   480  00FE8E  79                 	db	121	;'y'
   481  00FE8F  3A                 	db	58	;':'
   482  00FE90  20                 	db	32
   483  00FE91  2B                 	db	43
   484  00FE92  2B                 	db	43
   485  00FE93  2B                 	db	43
   486  00FE94  20                 	db	32
   487  00FE95  20                 	db	32
   488  00FE96  20                 	db	32
   489  00FE97  2B                 	db	43
   490  00FE98  2B                 	db	43
   491  00FE99  00                 	db	0
   492  00FE9A                     STR_29:
   493  00FE9A  5A                 	db	90	;'Z'
   494  00FE9B  69                 	db	105	;'i'
   495  00FE9C  76                 	db	118	;'v'
   496  00FE9D  6F                 	db	111	;'o'
   497  00FE9E  74                 	db	116	;'t'
   498  00FE9F  79                 	db	121	;'y'
   499  00FEA0  3A                 	db	58	;':'
   500  00FEA1  20                 	db	32
   501  00FEA2  2B                 	db	43
   502  00FEA3  20                 	db	32
   503  00FEA4  20                 	db	32
   504  00FEA5  20                 	db	32
   505  00FEA6  20                 	db	32
   506  00FEA7  2B                 	db	43
   507  00FEA8  2B                 	db	43
   508  00FEA9  2B                 	db	43
   509  00FEAA  00                 	db	0
   510  00FEAB                     STR_24:
   511  00FEAB  5A                 	db	90	;'Z'
   512  00FEAC  69                 	db	105	;'i'
   513  00FEAD  76                 	db	118	;'v'
   514  00FEAE  6F                 	db	111	;'o'
   515  00FEAF  74                 	db	116	;'t'
   516  00FEB0  79                 	db	121	;'y'
   517  00FEB1  3A                 	db	58	;':'
   518  00FEB2  20                 	db	32
   519  00FEB3  2B                 	db	43
   520  00FEB4  2B                 	db	43
   521  00FEB5  20                 	db	32
   522  00FEB6  20                 	db	32
   523  00FEB7  20                 	db	32
   524  00FEB8  2B                 	db	43
   525  00FEB9  2B                 	db	43
   526  00FEBA  2B                 	db	43
   527  00FEBB  00                 	db	0
   528  00FEBC                     STR_19:
   529  00FEBC  5A                 	db	90	;'Z'
   530  00FEBD  69                 	db	105	;'i'
   531  00FEBE  76                 	db	118	;'v'
   532  00FEBF  6F                 	db	111	;'o'
   533  00FEC0  74                 	db	116	;'t'
   534  00FEC1  79                 	db	121	;'y'
   535  00FEC2  3A                 	db	58	;':'
   536  00FEC3  20                 	db	32
   537  00FEC4  2B                 	db	43
   538  00FEC5  2B                 	db	43
   539  00FEC6  2B                 	db	43
   540  00FEC7  20                 	db	32
   541  00FEC8  20                 	db	32
   542  00FEC9  2B                 	db	43
   543  00FECA  2B                 	db	43
   544  00FECB  2B                 	db	43
   545  00FECC  00                 	db	0
   546  00FECD                     STR_78:
   547  00FECD  4D                 	db	77	;'M'
   548  00FECE  6F                 	db	111	;'o'
   549  00FECF  20                 	db	32
   550  00FED0  20                 	db	32
   551  00FED1  20                 	db	32
   552  00FED2  20                 	db	32
   553  00FED3  20                 	db	32
   554  00FED4  20                 	db	32
   555  00FED5  20                 	db	32
   556  00FED6  20                 	db	32
   557  00FED7  20                 	db	32
   558  00FED8  20                 	db	32
   559  00FED9  20                 	db	32
   560  00FEDA  20                 	db	32
   561  00FEDB  20                 	db	32
   562  00FEDC  4D                 	db	77	;'M'
   563  00FEDD  00                 	db	0
   564  00FEDE                     STR_36:
   565  00FEDE  4D                 	db	77	;'M'
   566  00FEDF  20                 	db	32
   567  00FEE0  6F                 	db	111	;'o'
   568  00FEE1  20                 	db	32
   569  00FEE2  20                 	db	32
   570  00FEE3  20                 	db	32
   571  00FEE4  20                 	db	32
   572  00FEE5  20                 	db	32
   573  00FEE6  20                 	db	32
   574  00FEE7  20                 	db	32
   575  00FEE8  20                 	db	32
   576  00FEE9  20                 	db	32
   577  00FEEA  20                 	db	32
   578  00FEEB  20                 	db	32
   579  00FEEC  20                 	db	32
   580  00FEED  4D                 	db	77	;'M'
   581  00FEEE  00                 	db	0
   582  00FEEF                     STR_37:
   583  00FEEF  4D                 	db	77	;'M'
   584  00FEF0  20                 	db	32
   585  00FEF1  20                 	db	32
   586  00FEF2  6F                 	db	111	;'o'
   587  00FEF3  20                 	db	32
   588  00FEF4  20                 	db	32
   589  00FEF5  20                 	db	32
   590  00FEF6  20                 	db	32
   591  00FEF7  20                 	db	32
   592  00FEF8  20                 	db	32
   593  00FEF9  20                 	db	32
   594  00FEFA  20                 	db	32
   595  00FEFB  20                 	db	32
   596  00FEFC  20                 	db	32
   597  00FEFD  20                 	db	32
   598  00FEFE  4D                 	db	77	;'M'
   599  00FEFF  00                 	db	0
   600  00FF00                     STR_38:
   601  00FF00  4D                 	db	77	;'M'
   602  00FF01  20                 	db	32
   603  00FF02  20                 	db	32
   604  00FF03  20                 	db	32
   605  00FF04  6F                 	db	111	;'o'
   606  00FF05  20                 	db	32
   607  00FF06  20                 	db	32
   608  00FF07  20                 	db	32
   609  00FF08  20                 	db	32
   610  00FF09  20                 	db	32
   611  00FF0A  20                 	db	32
   612  00FF0B  20                 	db	32
   613  00FF0C  20                 	db	32
   614  00FF0D  20                 	db	32
   615  00FF0E  20                 	db	32
   616  00FF0F  4D                 	db	77	;'M'
   617  00FF10  00                 	db	0
   618  00FF11                     STR_39:
   619  00FF11  4D                 	db	77	;'M'
   620  00FF12  20                 	db	32
   621  00FF13  20                 	db	32
   622  00FF14  20                 	db	32
   623  00FF15  20                 	db	32
   624  00FF16  6F                 	db	111	;'o'
   625  00FF17  20                 	db	32
   626  00FF18  20                 	db	32
   627  00FF19  20                 	db	32
   628  00FF1A  20                 	db	32
   629  00FF1B  20                 	db	32
   630  00FF1C  20                 	db	32
   631  00FF1D  20                 	db	32
   632  00FF1E  20                 	db	32
   633  00FF1F  20                 	db	32
   634  00FF20  4D                 	db	77	;'M'
   635  00FF21  00                 	db	0
   636  00FF22                     STR_40:
   637  00FF22  4D                 	db	77	;'M'
   638  00FF23  20                 	db	32
   639  00FF24  20                 	db	32
   640  00FF25  20                 	db	32
   641  00FF26  20                 	db	32
   642  00FF27  20                 	db	32
   643  00FF28  6F                 	db	111	;'o'
   644  00FF29  20                 	db	32
   645  00FF2A  20                 	db	32
   646  00FF2B  20                 	db	32
   647  00FF2C  20                 	db	32
   648  00FF2D  20                 	db	32
   649  00FF2E  20                 	db	32
   650  00FF2F  20                 	db	32
   651  00FF30  20                 	db	32
   652  00FF31  4D                 	db	77	;'M'
   653  00FF32  00                 	db	0
   654  00FF33                     STR_41:
   655  00FF33  4D                 	db	77	;'M'
   656  00FF34  20                 	db	32
   657  00FF35  20                 	db	32
   658  00FF36  20                 	db	32
   659  00FF37  20                 	db	32
   660  00FF38  20                 	db	32
   661  00FF39  20                 	db	32
   662  00FF3A  6F                 	db	111	;'o'
   663  00FF3B  20                 	db	32
   664  00FF3C  20                 	db	32
   665  00FF3D  20                 	db	32
   666  00FF3E  20                 	db	32
   667  00FF3F  20                 	db	32
   668  00FF40  20                 	db	32
   669  00FF41  20                 	db	32
   670  00FF42  4D                 	db	77	;'M'
   671  00FF43  00                 	db	0
   672  00FF44                     STR_42:
   673  00FF44  4D                 	db	77	;'M'
   674  00FF45  20                 	db	32
   675  00FF46  20                 	db	32
   676  00FF47  20                 	db	32
   677  00FF48  20                 	db	32
   678  00FF49  20                 	db	32
   679  00FF4A  20                 	db	32
   680  00FF4B  20                 	db	32
   681  00FF4C  6F                 	db	111	;'o'
   682  00FF4D  20                 	db	32
   683  00FF4E  20                 	db	32
   684  00FF4F  20                 	db	32
   685  00FF50  20                 	db	32
   686  00FF51  20                 	db	32
   687  00FF52  20                 	db	32
   688  00FF53  4D                 	db	77	;'M'
   689  00FF54  00                 	db	0
   690  00FF55                     STR_43:
   691  00FF55  4D                 	db	77	;'M'
   692  00FF56  20                 	db	32
   693  00FF57  20                 	db	32
   694  00FF58  20                 	db	32
   695  00FF59  20                 	db	32
   696  00FF5A  20                 	db	32
   697  00FF5B  20                 	db	32
   698  00FF5C  20                 	db	32
   699  00FF5D  20                 	db	32
   700  00FF5E  6F                 	db	111	;'o'
   701  00FF5F  20                 	db	32
   702  00FF60  20                 	db	32
   703  00FF61  20                 	db	32
   704  00FF62  20                 	db	32
   705  00FF63  20                 	db	32
   706  00FF64  4D                 	db	77	;'M'
   707  00FF65  00                 	db	0
   708  00FF66                     STR_44:
   709  00FF66  4D                 	db	77	;'M'
   710  00FF67  20                 	db	32
   711  00FF68  20                 	db	32
   712  00FF69  20                 	db	32
   713  00FF6A  20                 	db	32
   714  00FF6B  20                 	db	32
   715  00FF6C  20                 	db	32
   716  00FF6D  20                 	db	32
   717  00FF6E  20                 	db	32
   718  00FF6F  20                 	db	32
   719  00FF70  6F                 	db	111	;'o'
   720  00FF71  20                 	db	32
   721  00FF72  20                 	db	32
   722  00FF73  20                 	db	32
   723  00FF74  20                 	db	32
   724  00FF75  4D                 	db	77	;'M'
   725  00FF76  00                 	db	0
   726  00FF77                     STR_45:
   727  00FF77  4D                 	db	77	;'M'
   728  00FF78  20                 	db	32
   729  00FF79  20                 	db	32
   730  00FF7A  20                 	db	32
   731  00FF7B  20                 	db	32
   732  00FF7C  20                 	db	32
   733  00FF7D  20                 	db	32
   734  00FF7E  20                 	db	32
   735  00FF7F  20                 	db	32
   736  00FF80  20                 	db	32
   737  00FF81  20                 	db	32
   738  00FF82  6F                 	db	111	;'o'
   739  00FF83  20                 	db	32
   740  00FF84  20                 	db	32
   741  00FF85  20                 	db	32
   742  00FF86  4D                 	db	77	;'M'
   743  00FF87  00                 	db	0
   744  00FF88                     STR_46:
   745  00FF88  4D                 	db	77	;'M'
   746  00FF89  20                 	db	32
   747  00FF8A  20                 	db	32
   748  00FF8B  20                 	db	32
   749  00FF8C  20                 	db	32
   750  00FF8D  20                 	db	32
   751  00FF8E  20                 	db	32
   752  00FF8F  20                 	db	32
   753  00FF90  20                 	db	32
   754  00FF91  20                 	db	32
   755  00FF92  20                 	db	32
   756  00FF93  20                 	db	32
   757  00FF94  6F                 	db	111	;'o'
   758  00FF95  20                 	db	32
   759  00FF96  20                 	db	32
   760  00FF97  4D                 	db	77	;'M'
   761  00FF98  00                 	db	0
   762  00FF99                     STR_47:
   763  00FF99  4D                 	db	77	;'M'
   764  00FF9A  20                 	db	32
   765  00FF9B  20                 	db	32
   766  00FF9C  20                 	db	32
   767  00FF9D  20                 	db	32
   768  00FF9E  20                 	db	32
   769  00FF9F  20                 	db	32
   770  00FFA0  20                 	db	32
   771  00FFA1  20                 	db	32
   772  00FFA2  20                 	db	32
   773  00FFA3  20                 	db	32
   774  00FFA4  20                 	db	32
   775  00FFA5  20                 	db	32
   776  00FFA6  6F                 	db	111	;'o'
   777  00FFA7  20                 	db	32
   778  00FFA8  4D                 	db	77	;'M'
   779  00FFA9  00                 	db	0
   780  00FFAA                     STR_48:
   781  00FFAA  4D                 	db	77	;'M'
   782  00FFAB  20                 	db	32
   783  00FFAC  20                 	db	32
   784  00FFAD  20                 	db	32
   785  00FFAE  20                 	db	32
   786  00FFAF  20                 	db	32
   787  00FFB0  20                 	db	32
   788  00FFB1  20                 	db	32
   789  00FFB2  20                 	db	32
   790  00FFB3  20                 	db	32
   791  00FFB4  20                 	db	32
   792  00FFB5  20                 	db	32
   793  00FFB6  20                 	db	32
   794  00FFB7  20                 	db	32
   795  00FFB8  6F                 	db	111	;'o'
   796  00FFB9  4D                 	db	77	;'M'
   797  00FFBA  00                 	db	0
   798  00FFBB                     STR_13:
   799  00FFBB  53                 	db	83	;'S'
   800  00FFBC  74                 	db	116	;'t'
   801  00FFBD  61                 	db	97	;'a'
   802  00FFBE  74                 	db	116	;'t'
   803  00FFBF  65                 	db	101	;'e'
   804  00FFC0  3A                 	db	58	;':'
   805  00FFC1  6B                 	db	107	;'k'
   806  00FFC2  61                 	db	97	;'a'
   807  00FFC3  6C                 	db	108	;'l'
   808  00FFC4  6B                 	db	107	;'k'
   809  00FFC5  75                 	db	117	;'u'
   810  00FFC6  6C                 	db	108	;'l'
   811  00FFC7  61                 	db	97	;'a'
   812  00FFC8  63                 	db	99	;'c'
   813  00FFC9  6B                 	db	107	;'k'
   814  00FFCA  61                 	db	97	;'a'
   815  00FFCB  00                 	db	0
   816  00FFCC                     STR_15:
   817  00FFCC  53                 	db	83	;'S'
   818  00FFCD  74                 	db	116	;'t'
   819  00FFCE  61                 	db	97	;'a'
   820  00FFCF  74                 	db	116	;'t'
   821  00FFD0  65                 	db	101	;'e'
   822  00FFD1  3A                 	db	58	;':'
   823  00FFD2  6D                 	db	109	;'m'
   824  00FFD3  6F                 	db	111	;'o'
   825  00FFD4  74                 	db	116	;'t'
   826  00FFD5  6F                 	db	111	;'o'
   827  00FFD6  72                 	db	114	;'r'
   828  00FFD7  53                 	db	83	;'S'
   829  00FFD8  70                 	db	112	;'p'
   830  00FFD9  65                 	db	101	;'e'
   831  00FFDA  65                 	db	101	;'e'
   832  00FFDB  64                 	db	100	;'d'
   833  00FFDC  00                 	db	0
   834  00FFDD                     STR_6:
   835  00FFDD  20                 	db	32
   836  00FFDE  33                 	db	51	;'3'
   837  00FFDF  3A                 	db	58	;':'
   838  00FFE0  20                 	db	32
   839  00FFE1  41                 	db	65	;'A'
   840  00FFE2  44                 	db	68	;'D'
   841  00FFE3  43                 	db	67	;'C'
   842  00FFE4  20                 	db	32
   843  00FFE5  62                 	db	98	;'b'
   844  00FFE6  61                 	db	97	;'a'
   845  00FFE7  72                 	db	114	;'r'
   846  00FFE8  67                 	db	103	;'g'
   847  00FFE9  72                 	db	114	;'r'
   848  00FFEA  61                 	db	97	;'a'
   849  00FFEB  70                 	db	112	;'p'
   850  00FFEC  68                 	db	104	;'h'
   851  00FFED  00                 	db	0
   852  00FFEE                     STR_8:
   853  00FFEE  2D                 	db	45
   854  00FFEF  33                 	db	51	;'3'
   855  00FFF0  3A                 	db	58	;':'
   856  00FFF1  20                 	db	32
   857  00FFF2  41                 	db	65	;'A'
   858  00FFF3  44                 	db	68	;'D'
   859  00FFF4  43                 	db	67	;'C'
   860  00FFF5  20                 	db	32
   861  00FFF6  62                 	db	98	;'b'
   862  00FFF7  61                 	db	97	;'a'
   863  00FFF8  72                 	db	114	;'r'
   864  00FFF9  67                 	db	103	;'g'
   865  00FFFA  72                 	db	114	;'r'
   866  00FFFB  61                 	db	97	;'a'
   867  00FFFC  70                 	db	112	;'p'
   868  00FFFD  68                 	db	104	;'h'
   869  00FFFE  00                 	db	0
   870  0000                     
   871                           ; #config settings
   872  00FFFF  00                 	db	0	; dummy byte at the end
   873  0000                     
   874                           	psect	cinit
   875  0012B6                     __pcinit:
   876                           	opt callstack 0
   877  0012B6                     start_initialization:
   878                           	opt callstack 0
   879  0012B6                     __initialization:
   880                           	opt callstack 0
   881                           
   882                           ; Clear objects allocated to BANK0 (84 bytes)
   883  0012B6  EE00  F060         	lfsr	0,__pbssBANK0
   884  0012BA  0E54               	movlw	84
   885  0012BC                     clear_0:
   886  0012BC  6AEE               	clrf	postinc0,c
   887  0012BE  06E8               	decf	wreg,f,c
   888  0012C0  E1FD               	bnz	clear_0
   889                           
   890                           ; Clear objects allocated to COMRAM (5 bytes)
   891  0012C2  6A24               	clrf	(__pbssCOMRAM+4)& (0+255),c
   892  0012C4  6A23               	clrf	(__pbssCOMRAM+3)& (0+255),c
   893  0012C6  6A22               	clrf	(__pbssCOMRAM+2)& (0+255),c
   894  0012C8  6A21               	clrf	(__pbssCOMRAM+1)& (0+255),c
   895  0012CA  6A20               	clrf	__pbssCOMRAM& (0+255),c
   896  0012CC                     end_of_initialization:
   897                           	opt callstack 0
   898  0012CC                     __end_of__initialization:
   899                           	opt callstack 0
   900  0012CC  9025               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   901  0012CE  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   902  0012D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   903  0012D2  6EF8               	movwf	tblptru,c
   904  0012D4  0100               	movlb	0
   905  0012D6  EFB8  F009         	goto	_main	;jump to C main() function
   906                           
   907                           	psect	bssCOMRAM
   908  000020                     __pbssCOMRAM:
   909                           	opt callstack 0
   910  000020                     _pot1_val:
   911                           	opt callstack 0
   912  000020                     	ds	2
   913  000022                     FSM@state:
   914                           	opt callstack 0
   915  000022                     	ds	1
   916  000023                     ISR@rx_i:
   917                           	opt callstack 0
   918  000023                     	ds	1
   919  000024                     _gFlag:
   920                           	opt callstack 0
   921  000024                     	ds	1
   922                           
   923                           	psect	bssBANK0
   924  000060                     __pbssBANK0:
   925                           	opt callstack 0
   926  000060                     _message:
   927                           	opt callstack 0
   928  000060                     	ds	84
   929                           
   930                           	psect	cstackCOMRAM
   931  000001                     __pcstackCOMRAM:
   932                           	opt callstack 0
   933  000001                     ??_ISR:
   934  000001                     
   935                           ; 1 bytes @ 0x0
   936  000001                     	ds	4
   937  000005                     ISR@aktualni:
   938                           	opt callstack 0
   939                           
   940                           ; 1 bytes @ 0x4
   941  000005                     	ds	1
   942  000006                     ?___wmul:
   943                           	opt callstack 0
   944  000006                     ?___awdiv:
   945                           	opt callstack 0
   946  000006                     driveLED@in:
   947                           	opt callstack 0
   948  000006                     LCD_Send@data:
   949                           	opt callstack 0
   950  000006                     ___wmul@multiplier:
   951                           	opt callstack 0
   952  000006                     ___awdiv@dividend:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x5
   956  000006                     	ds	1
   957  000007                     ??_LCD_Init:
   958  000007                     LCD_ShowString@textData:
   959                           	opt callstack 0
   960                           
   961                           ; 2 bytes @ 0x6
   962  000007                     	ds	1
   963  000008                     ___wmul@multiplicand:
   964                           	opt callstack 0
   965  000008                     ___awdiv@divisor:
   966                           	opt callstack 0
   967                           
   968                           ; 2 bytes @ 0x7
   969  000008                     	ds	1
   970  000009                     ??_LCD_ShowString:
   971                           
   972                           ; 1 bytes @ 0x8
   973  000009                     	ds	1
   974  00000A                     ___awdiv@counter:
   975                           	opt callstack 0
   976  00000A                     ___wmul@product:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x9
   980  00000A                     	ds	1
   981  00000B                     LCD_ShowString@lineNum:
   982                           	opt callstack 0
   983  00000B                     ___awdiv@sign:
   984                           	opt callstack 0
   985                           
   986                           ; 1 bytes @ 0xA
   987  00000B                     	ds	1
   988  00000C                     LCD_ShowString@i:
   989                           	opt callstack 0
   990  00000C                     ___awdiv@quotient:
   991                           	opt callstack 0
   992                           
   993                           ; 2 bytes @ 0xB
   994  00000C                     	ds	1
   995  00000D                     ??_state5tet:
   996  00000D                     ??_state8adc:
   997  00000D                     ?_state9hra:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0xC
  1001  00000D                     	ds	1
  1002  00000E                     ??_state6kal:
  1003  00000E                     state8adc@led_state:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 1 bytes @ 0xD
  1007  00000E                     	ds	1
  1008  00000F                     ??_state9hra:
  1009  00000F                     state5tet@i:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 2 bytes @ 0xE
  1013  00000F                     	ds	1
  1014  000010                     state6kal@operace:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 1 bytes @ 0xF
  1018  000010                     	ds	1
  1019  000011                     state6kal@zacatekPrvniho:
  1020                           	opt callstack 0
  1021  000011                     state9hra@player1:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x10
  1025  000011                     	ds	2
  1026  000013                     state6kal@i:
  1027                           	opt callstack 0
  1028  000013                     state9hra@konec:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x12
  1032  000013                     	ds	2
  1033  000015                     state6kal@i_1093:
  1034                           	opt callstack 0
  1035  000015                     state9hra@player2:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x14
  1039  000015                     	ds	2
  1040  000017                     state6kal@prvni:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x16
  1044  000017                     	ds	2
  1045  000019                     state6kal@druhy:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x18
  1049  000019                     	ds	2
  1050  00001B                     state6kal@dekadicky:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x1A
  1054  00001B                     	ds	2
  1055  00001D                     state6kal@aktualni:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x1C
  1059  00001D                     	ds	1
  1060  00001E                     ??_FSM:
  1061                           
  1062                           ; 1 bytes @ 0x1D
  1063  00001E                     	ds	2
  1064  000020                     
  1065                           ; 1 bytes @ 0x1F
  1066 ;;
  1067 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1068 ;;
  1069 ;; *************** function _main *****************
  1070 ;; Defined at:
  1071 ;;		line 235 in file "newmain.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;		None
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;Total ram usage:        0 bytes
  1090 ;; Hardware stack levels required when called:    5
  1091 ;; This function calls:
  1092 ;;		_FSM
  1093 ;;		_LCD_Init
  1094 ;;		_init
  1095 ;; This function is called by:
  1096 ;;		Startup code after reset
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text0
  1101  001370                     __ptext0:
  1102                           	opt callstack 0
  1103  001370                     _main:
  1104                           	opt callstack 26
  1105                           
  1106                           ;newmain.c: 237:     init();
  1107                           
  1108                           ;incstack = 0
  1109  001370  EC47  F008         	call	_init	;wreg free
  1110                           
  1111                           ;newmain.c: 238:     LCD_Init();
  1112  001374  ECE4  F007         	call	_LCD_Init	;wreg free
  1113  001378                     l2997:
  1114                           
  1115                           ;newmain.c: 241:     {;newmain.c: 242:         if (gFlag)
  1116  001378  5024               	movf	_gFlag,w,c	;volatile
  1117  00137A  B4D8               	btfsc	status,2,c
  1118  00137C  D7FD               	goto	l2997
  1119                           
  1120                           ;newmain.c: 243:         {;newmain.c: 244:             FSM();
  1121  00137E  EC43  F004         	call	_FSM	;wreg free
  1122                           
  1123                           ;newmain.c: 245:             gFlag = 0;
  1124  001382  0E00               	movlw	0
  1125  001384  6E24               	movwf	_gFlag,c	;volatile
  1126  001386  D7F8               	goto	l2997
  1127  001388                     __end_of_main:
  1128                           	opt callstack 0
  1129                           
  1130 ;; *************** function _init *****************
  1131 ;; Defined at:
  1132 ;;		line 146 in file "newmain.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    1
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text1
  1161  00108E                     __ptext1:
  1162                           	opt callstack 0
  1163  00108E                     _init:
  1164                           	opt callstack 29
  1165                           
  1166                           ;newmain.c: 149:     ANSELA = 0x00;
  1167                           
  1168                           ;incstack = 0
  1169  00108E  0E00               	movlw	0
  1170  001090  010F               	movlb	15	; () banked
  1171  001092  6F38               	movwf	56,b	;volatile
  1172                           
  1173                           ;newmain.c: 150:     ANSELC = 0x00;
  1174  001094  0E00               	movlw	0
  1175  001096  6F3A               	movwf	58,b	;volatile
  1176                           
  1177                           ; BSR set to: 15
  1178                           ;newmain.c: 153:     TRISDbits.TRISD2 = 0;
  1179  001098  9495               	bcf	3989,2,c	;volatile
  1180                           
  1181                           ; BSR set to: 15
  1182                           ;newmain.c: 154:     TRISDbits.TRISD3 = 0;
  1183  00109A  9695               	bcf	3989,3,c	;volatile
  1184                           
  1185                           ; BSR set to: 15
  1186                           ;newmain.c: 155:     TRISCbits.TRISC4 = 0;
  1187  00109C  9894               	bcf	3988,4,c	;volatile
  1188                           
  1189                           ; BSR set to: 15
  1190                           ;newmain.c: 156:     TRISDbits.TRISD4 = 0;
  1191  00109E  9895               	bcf	3989,4,c	;volatile
  1192                           
  1193                           ; BSR set to: 15
  1194                           ;newmain.c: 157:     TRISDbits.TRISD5 = 0;
  1195  0010A0  9A95               	bcf	3989,5,c	;volatile
  1196                           
  1197                           ; BSR set to: 15
  1198                           ;newmain.c: 158:     TRISDbits.TRISD6 = 0;
  1199  0010A2  9C95               	bcf	3989,6,c	;volatile
  1200                           
  1201                           ; BSR set to: 15
  1202                           ;newmain.c: 161:     LATD2 = 1;
  1203  0010A4  848C               	bsf	3980,2,c	;volatile
  1204                           
  1205                           ; BSR set to: 15
  1206                           ;newmain.c: 162:     LATD3 = 1;
  1207  0010A6  868C               	bsf	3980,3,c	;volatile
  1208                           
  1209                           ; BSR set to: 15
  1210                           ;newmain.c: 163:     LATC4 = 1;
  1211  0010A8  888B               	bsf	3979,4,c	;volatile
  1212                           
  1213                           ; BSR set to: 15
  1214                           ;newmain.c: 164:     LATD4 = 1;
  1215  0010AA  888C               	bsf	3980,4,c	;volatile
  1216                           
  1217                           ; BSR set to: 15
  1218                           ;newmain.c: 165:     LATD5 = 1;
  1219  0010AC  8A8C               	bsf	3980,5,c	;volatile
  1220                           
  1221                           ; BSR set to: 15
  1222                           ;newmain.c: 166:     LATD6 = 1;
  1223  0010AE  8C8C               	bsf	3980,6,c	;volatile
  1224                           
  1225                           ; BSR set to: 15
  1226                           ;newmain.c: 170:     TRISAbits.TRISA4 = 1;
  1227  0010B0  8892               	bsf	3986,4,c	;volatile
  1228                           
  1229                           ; BSR set to: 15
  1230                           ;newmain.c: 171:     TRISAbits.TRISA3 = 1;
  1231  0010B2  8692               	bsf	3986,3,c	;volatile
  1232                           
  1233                           ; BSR set to: 15
  1234                           ;newmain.c: 172:     TRISAbits.TRISA2 = 1;
  1235  0010B4  8492               	bsf	3986,2,c	;volatile
  1236                           
  1237                           ; BSR set to: 15
  1238                           ;newmain.c: 173:     TRISCbits.TRISC0 = 1;
  1239  0010B6  8094               	bsf	3988,0,c	;volatile
  1240                           
  1241                           ;newmain.c: 176:     SPBRG1 = 12;
  1242  0010B8  0E0C               	movlw	12
  1243  0010BA  6EAF               	movwf	4015,c	;volatile
  1244                           
  1245                           ; BSR set to: 15
  1246                           ;newmain.c: 177:     TXSTA1bits.SYNC = 0;
  1247  0010BC  98AC               	bcf	4012,4,c	;volatile
  1248                           
  1249                           ; BSR set to: 15
  1250                           ;newmain.c: 178:     RCSTA1bits.SPEN = 1;
  1251  0010BE  8EAB               	bsf	4011,7,c	;volatile
  1252                           
  1253                           ; BSR set to: 15
  1254                           ;newmain.c: 179:     TXSTA1bits.TXEN = 1;
  1255  0010C0  8AAC               	bsf	4012,5,c	;volatile
  1256                           
  1257                           ; BSR set to: 15
  1258                           ;newmain.c: 180:     RCSTA1bits.CREN = 1;
  1259  0010C2  88AB               	bsf	4011,4,c	;volatile
  1260                           
  1261                           ;newmain.c: 182:     TRISD = 0x00;
  1262  0010C4  0E00               	movlw	0
  1263  0010C6  6E95               	movwf	3989,c	;volatile
  1264                           
  1265                           ; BSR set to: 15
  1266                           ;newmain.c: 183:     TRISCbits.TRISC6 = 1;
  1267  0010C8  8C94               	bsf	3988,6,c	;volatile
  1268                           
  1269                           ; BSR set to: 15
  1270                           ;newmain.c: 184:     TRISCbits.TRISC7 = 1;
  1271  0010CA  8E94               	bsf	3988,7,c	;volatile
  1272                           
  1273                           ;newmain.c: 187:     T1CONbits.TMR1CS = 0b00;
  1274  0010CC  0E3F               	movlw	-193
  1275  0010CE  16CD               	andwf	4045,f,c	;volatile
  1276                           
  1277                           ;newmain.c: 188:     T1CONbits.T1CKPS = 0b11;
  1278  0010D0  0E30               	movlw	48
  1279  0010D2  12CD               	iorwf	4045,f,c	;volatile
  1280                           
  1281                           ; BSR set to: 15
  1282                           ;newmain.c: 191:     PEIE = 1;
  1283  0010D4  8CF2               	bsf	4082,6,c	;volatile
  1284                           
  1285                           ; BSR set to: 15
  1286                           ;newmain.c: 192:     GIE = 1;
  1287  0010D6  8EF2               	bsf	4082,7,c	;volatile
  1288                           
  1289                           ; BSR set to: 15
  1290                           ;newmain.c: 193:     TMR1IE = 1;
  1291  0010D8  809D               	bsf	3997,0,c	;volatile
  1292                           
  1293                           ; BSR set to: 15
  1294                           ;newmain.c: 194:     T1CONbits.TMR1ON = 1;
  1295  0010DA  80CD               	bsf	4045,0,c	;volatile
  1296                           
  1297                           ; BSR set to: 15
  1298                           ;newmain.c: 196:     ADIF = 0;
  1299  0010DC  9C9E               	bcf	3998,6,c	;volatile
  1300                           
  1301                           ; BSR set to: 15
  1302                           ;newmain.c: 197:     ADIE = 1;
  1303  0010DE  8C9D               	bsf	3997,6,c	;volatile
  1304                           
  1305                           ; BSR set to: 15
  1306                           ;newmain.c: 199:     RC1IE = 1;
  1307  0010E0  8A9D               	bsf	3997,5,c	;volatile
  1308                           
  1309                           ; BSR set to: 15
  1310                           ;newmain.c: 202:     TRISAbits.RA5 = 1;
  1311  0010E2  8A92               	bsf	3986,5,c	;volatile
  1312                           
  1313                           ; BSR set to: 15
  1314                           ;newmain.c: 203:     ANSELAbits.ANSA5 = 1;
  1315  0010E4  8B38               	bsf	56,5,b	;volatile
  1316                           
  1317                           ;newmain.c: 205:     ADCON2bits.ADCS = 0b110;
  1318  0010E6  50C0               	movf	4032,w,c	;volatile
  1319  0010E8  0BF8               	andlw	-8
  1320  0010EA  0906               	iorlw	6
  1321  0010EC  6EC0               	movwf	4032,c	;volatile
  1322                           
  1323                           ;newmain.c: 206:     ADCON1bits.PVCFG = 0b00;
  1324  0010EE  0EF3               	movlw	-13
  1325  0010F0  16C1               	andwf	4033,f,c	;volatile
  1326                           
  1327                           ;newmain.c: 207:     ADCON1bits.NVCFG = 0b00;
  1328  0010F2  0EFC               	movlw	-4
  1329  0010F4  16C1               	andwf	4033,f,c	;volatile
  1330                           
  1331                           ;newmain.c: 208:     ADCON2bits.ACQT = 0b110;
  1332  0010F6  50C0               	movf	4032,w,c	;volatile
  1333  0010F8  0BC7               	andlw	-57
  1334  0010FA  0930               	iorlw	48
  1335  0010FC  6EC0               	movwf	4032,c	;volatile
  1336                           
  1337                           ; BSR set to: 15
  1338                           ;newmain.c: 210:     ADCON0bits.ADON = 1;
  1339  0010FE  80C2               	bsf	4034,0,c	;volatile
  1340                           
  1341                           ;newmain.c: 213:     ANSELE = 0b1;
  1342  001100  0E01               	movlw	1
  1343  001102  6F3C               	movwf	60,b	;volatile
  1344                           
  1345                           ; BSR set to: 15
  1346                           ;newmain.c: 217:     TRISCbits.RC2 = 1;
  1347  001104  8494               	bsf	3988,2,c	;volatile
  1348                           
  1349                           ; BSR set to: 15
  1350                           ;newmain.c: 218:     PSTR1CON |= 0b01;
  1351  001106  80B9               	bsf	4025,0,c	;volatile
  1352                           
  1353                           ; BSR set to: 15
  1354                           ;newmain.c: 220:     CCPTMRS0bits.C1TSEL = 0b00;
  1355  001108  0EFC               	movlw	-4
  1356  00110A  1749               	andwf	73,f,b	;volatile
  1357                           
  1358                           ; BSR set to: 15
  1359                           ;newmain.c: 221:     PR2 = 199;
  1360  00110C  0EC7               	movlw	199
  1361  00110E  6EBB               	movwf	4027,c	;volatile
  1362                           
  1363                           ; BSR set to: 15
  1364                           ;newmain.c: 222:     CCP1CONbits.P1M = 0b00;
  1365  001110  0E3F               	movlw	-193
  1366  001112  16BD               	andwf	4029,f,c	;volatile
  1367                           
  1368                           ; BSR set to: 15
  1369                           ;newmain.c: 223:     CCP1CONbits.CCP1M = 0b1100;
  1370  001114  50BD               	movf	4029,w,c	;volatile
  1371  001116  0BF0               	andlw	-16
  1372  001118  090C               	iorlw	12
  1373  00111A  6EBD               	movwf	4029,c	;volatile
  1374                           
  1375                           ; BSR set to: 15
  1376                           ;newmain.c: 224:     CCPR1L = 0;
  1377  00111C  0E00               	movlw	0
  1378  00111E  6EBE               	movwf	4030,c	;volatile
  1379                           
  1380                           ; BSR set to: 15
  1381                           ;newmain.c: 225:     T2CONbits.T2CKPS = 0b00;
  1382  001120  0EFC               	movlw	-4
  1383  001122  16BA               	andwf	4026,f,c	;volatile
  1384                           
  1385                           ; BSR set to: 15
  1386                           ;newmain.c: 226:     TMR2IF = 0;
  1387  001124  929E               	bcf	3998,1,c	;volatile
  1388                           
  1389                           ; BSR set to: 15
  1390                           ;newmain.c: 227:     TMR2ON = 1;
  1391  001126  84BA               	bsf	4026,2,c	;volatile
  1392  001128                     l148:
  1393  001128  A29E               	btfss	3998,1,c	;volatile
  1394  00112A  D7FE               	goto	l148
  1395                           
  1396                           ;newmain.c: 231:     TRISCbits.RC2 = 0;
  1397  00112C  9494               	bcf	3988,2,c	;volatile
  1398  00112E  0012               	return		;funcret
  1399  001130                     __end_of_init:
  1400                           	opt callstack 0
  1401                           
  1402 ;; *************** function _LCD_Init *****************
  1403 ;; Defined at:
  1404 ;;		line 6 in file "lcd.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;Total ram usage:        1 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    2
  1425 ;; This function calls:
  1426 ;;		_LCD_Send
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text2
  1433  000FC8                     __ptext2:
  1434                           	opt callstack 0
  1435  000FC8                     _LCD_Init:
  1436                           	opt callstack 28
  1437                           
  1438                           ;lcd.c: 8:     ANSELDbits.ANSD0 = 0;
  1439                           
  1440                           ;incstack = 0
  1441  000FC8  010F               	movlb	15	; () banked
  1442  000FCA  913B               	bcf	59,0,b	;volatile
  1443                           
  1444                           ;lcd.c: 9:     ANSELDbits.ANSD1 = 0;
  1445  000FCC  933B               	bcf	59,1,b	;volatile
  1446                           
  1447                           ;lcd.c: 11:     TRISDbits.TRISD0 = 1;
  1448  000FCE  8095               	bsf	3989,0,c	;volatile
  1449                           
  1450                           ;lcd.c: 12:     TRISDbits.TRISD1 = 1;
  1451  000FD0  8295               	bsf	3989,1,c	;volatile
  1452                           
  1453                           ;lcd.c: 13:     TRISAbits.TRISA0 = 0;
  1454  000FD2  9092               	bcf	3986,0,c	;volatile
  1455                           
  1456                           ;lcd.c: 14:     LATAbits.LATA0 = 1;
  1457  000FD4  8089               	bsf	3977,0,c	;volatile
  1458                           
  1459                           ; BSR set to: 15
  1460                           ;lcd.c: 17:     SSP2CON1bits.SSPM = 0b1000;
  1461  000FD6  506C               	movf	3948,w,c	;volatile
  1462  000FD8  0BF0               	andlw	-16
  1463  000FDA  0908               	iorlw	8
  1464  000FDC  6E6C               	movwf	3948,c	;volatile
  1465                           
  1466                           ;lcd.c: 18:     SSP2ADD = 19;
  1467  000FDE  0E13               	movlw	19
  1468  000FE0  6E6E               	movwf	3950,c	;volatile
  1469                           
  1470                           ; BSR set to: 15
  1471                           ;lcd.c: 19:     SSP2CON1bits.SSPEN = 1;
  1472  000FE2  8A6C               	bsf	3948,5,c	;volatile
  1473                           
  1474                           ; BSR set to: 15
  1475                           ;lcd.c: 21:     _delay((unsigned long)((5)*(32E6/4000.0)));
  1476  000FE4  0E34               	movlw	52
  1477  000FE6  6E07               	movwf	??_LCD_Init& (0+255),c
  1478  000FE8  0EF2               	movlw	242
  1479  000FEA                     u2307:
  1480  000FEA  2EE8               	decfsz	wreg,f,c
  1481  000FEC  D7FE               	bra	u2307
  1482  000FEE  2E07               	decfsz	??_LCD_Init& (0+255),f,c
  1483  000FF0  D7FC               	bra	u2307
  1484                           
  1485                           ;lcd.c: 23:     SSP2CON2bits.SEN = 1;
  1486  000FF2  806B               	bsf	3947,0,c	;volatile
  1487  000FF4                     l440:
  1488  000FF4  B06B               	btfsc	3947,0,c	;volatile
  1489  000FF6  D7FE               	goto	l440
  1490                           
  1491                           ;lcd.c: 25:     SSP2IF = 0;
  1492  000FF8  9EA4               	bcf	4004,7,c	;volatile
  1493                           
  1494                           ;lcd.c: 30:     LCD_Send(0x7C);
  1495  000FFA  0E7C               	movlw	124
  1496  000FFC  ECC4  F009         	call	_LCD_Send
  1497                           
  1498                           ;lcd.c: 31:     LCD_Send(0x80);
  1499  001000  0E80               	movlw	128
  1500  001002  ECC4  F009         	call	_LCD_Send
  1501                           
  1502                           ;lcd.c: 32:     LCD_Send(0x38);
  1503  001006  0E38               	movlw	56
  1504  001008  ECC4  F009         	call	_LCD_Send
  1505                           
  1506                           ;lcd.c: 33:     LCD_Send(0x80);
  1507  00100C  0E80               	movlw	128
  1508  00100E  ECC4  F009         	call	_LCD_Send
  1509                           
  1510                           ;lcd.c: 34:     LCD_Send(0x39);
  1511  001012  0E39               	movlw	57
  1512  001014  ECC4  F009         	call	_LCD_Send
  1513                           
  1514                           ;lcd.c: 35:     LCD_Send(0x80);
  1515  001018  0E80               	movlw	128
  1516  00101A  ECC4  F009         	call	_LCD_Send
  1517                           
  1518                           ;lcd.c: 36:     LCD_Send(0x17);
  1519  00101E  0E17               	movlw	23
  1520  001020  ECC4  F009         	call	_LCD_Send
  1521                           
  1522                           ;lcd.c: 37:     LCD_Send(0x80);
  1523  001024  0E80               	movlw	128
  1524  001026  ECC4  F009         	call	_LCD_Send
  1525                           
  1526                           ;lcd.c: 38:     LCD_Send(0x7A);
  1527  00102A  0E7A               	movlw	122
  1528  00102C  ECC4  F009         	call	_LCD_Send
  1529                           
  1530                           ;lcd.c: 39:     LCD_Send(0x80);
  1531  001030  0E80               	movlw	128
  1532  001032  ECC4  F009         	call	_LCD_Send
  1533                           
  1534                           ;lcd.c: 40:     LCD_Send(0x5E);
  1535  001036  0E5E               	movlw	94
  1536  001038  ECC4  F009         	call	_LCD_Send
  1537                           
  1538                           ;lcd.c: 41:     LCD_Send(0x80);
  1539  00103C  0E80               	movlw	128
  1540  00103E  ECC4  F009         	call	_LCD_Send
  1541                           
  1542                           ;lcd.c: 42:     LCD_Send(0x6B);
  1543  001042  0E6B               	movlw	107
  1544  001044  ECC4  F009         	call	_LCD_Send
  1545                           
  1546                           ;lcd.c: 43:     LCD_Send(0x80);
  1547  001048  0E80               	movlw	128
  1548  00104A  ECC4  F009         	call	_LCD_Send
  1549                           
  1550                           ;lcd.c: 44:     LCD_Send(0x0C);
  1551  00104E  0E0C               	movlw	12
  1552  001050  ECC4  F009         	call	_LCD_Send
  1553                           
  1554                           ;lcd.c: 45:     LCD_Send(0x80);
  1555  001054  0E80               	movlw	128
  1556  001056  ECC4  F009         	call	_LCD_Send
  1557                           
  1558                           ;lcd.c: 46:     LCD_Send(0x01);
  1559  00105A  0E01               	movlw	1
  1560  00105C  ECC4  F009         	call	_LCD_Send
  1561                           
  1562                           ;lcd.c: 47:     LCD_Send(0x80);
  1563  001060  0E80               	movlw	128
  1564  001062  ECC4  F009         	call	_LCD_Send
  1565                           
  1566                           ;lcd.c: 48:     LCD_Send(0x06);
  1567  001066  0E06               	movlw	6
  1568  001068  ECC4  F009         	call	_LCD_Send
  1569                           
  1570                           ;lcd.c: 49:     LCD_Send(0x80);
  1571  00106C  0E80               	movlw	128
  1572  00106E  ECC4  F009         	call	_LCD_Send
  1573                           
  1574                           ;lcd.c: 50:     LCD_Send(0x02);
  1575  001072  0E02               	movlw	2
  1576  001074  ECC4  F009         	call	_LCD_Send
  1577                           
  1578                           ;lcd.c: 52:     SSP2CON2bits.PEN = 1;
  1579  001078  846B               	bsf	3947,2,c	;volatile
  1580  00107A                     l443:
  1581  00107A  B46B               	btfsc	3947,2,c	;volatile
  1582  00107C  D7FE               	goto	l443
  1583                           
  1584                           ;lcd.c: 55:     _delay((unsigned long)((5)*(32E6/4000.0)));
  1585  00107E  0E34               	movlw	52
  1586  001080  6E07               	movwf	??_LCD_Init& (0+255),c
  1587  001082  0EF2               	movlw	242
  1588  001084                     u2317:
  1589  001084  2EE8               	decfsz	wreg,f,c
  1590  001086  D7FE               	bra	u2317
  1591  001088  2E07               	decfsz	??_LCD_Init& (0+255),f,c
  1592  00108A  D7FC               	bra	u2317
  1593  00108C  0012               	return		;funcret
  1594  00108E                     __end_of_LCD_Init:
  1595                           	opt callstack 0
  1596                           
  1597 ;; *************** function _FSM *****************
  1598 ;; Defined at:
  1599 ;;		line 250 in file "newmain.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;Total ram usage:        2 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    4
  1620 ;; This function calls:
  1621 ;;		_driveLED
  1622 ;;		_state0obrtet
  1623 ;;		_state1obrkal
  1624 ;;		_state2obrpwm
  1625 ;;		_state3obradc
  1626 ;;		_state4obrhra
  1627 ;;		_state5tet
  1628 ;;		_state6kal
  1629 ;;		_state7pwm
  1630 ;;		_state8adc
  1631 ;;		_state9hra
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text3
  1638  000886                     __ptext3:
  1639                           	opt callstack 0
  1640  000886                     _FSM:
  1641                           	opt callstack 26
  1642                           
  1643                           ;newmain.c: 252:     static StateMachine state = STATE0obrTET;;newmain.c: 254:     switc
      +                          h (state)
  1644                           
  1645                           ;incstack = 0
  1646  000886  D127               	goto	l2951
  1647  000888                     l166:
  1648                           
  1649                           ;newmain.c: 258:         if (PORTAbits.RA4){
  1650  000888  A880               	btfss	3968,4,c	;volatile
  1651  00088A  D00D               	goto	u1700
  1652                           
  1653                           ;newmain.c: 259:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1654  00088C  0E0D               	movlw	13
  1655  00088E  6E1E               	movwf	??_FSM& (0+255),c
  1656  000890  0EFC               	movlw	252
  1657  000892                     u2327:
  1658  000892  2EE8               	decfsz	wreg,f,c
  1659  000894  D7FE               	bra	u2327
  1660  000896  2E1E               	decfsz	??_FSM& (0+255),f,c
  1661  000898  D7FC               	bra	u2327
  1662                           
  1663                           ;newmain.c: 260:             if(PORTAbits.RA4){
  1664  00089A  A880               	btfss	3968,4,c	;volatile
  1665  00089C  D004               	goto	u1700
  1666                           
  1667                           ;newmain.c: 261:                 state = STATE1obrKAL;
  1668  00089E  0E01               	movlw	1
  1669  0008A0  6E22               	movwf	FSM@state,c
  1670  0008A2                     l169:
  1671  0008A2  B880               	btfsc	3968,4,c	;volatile
  1672  0008A4  D7FE               	goto	l169
  1673  0008A6                     u1700:
  1674                           
  1675                           ;newmain.c: 265:         if (PORTAbits.RA3){
  1676                           
  1677                           ;newmain.c: 264:         }
  1678  0008A6  A680               	btfss	3968,3,c	;volatile
  1679  0008A8  D00D               	goto	u1730
  1680                           
  1681                           ;newmain.c: 266:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1682  0008AA  0E0D               	movlw	13
  1683  0008AC  6E1E               	movwf	??_FSM& (0+255),c
  1684  0008AE  0EFC               	movlw	252
  1685  0008B0                     u2337:
  1686  0008B0  2EE8               	decfsz	wreg,f,c
  1687  0008B2  D7FE               	bra	u2337
  1688  0008B4  2E1E               	decfsz	??_FSM& (0+255),f,c
  1689  0008B6  D7FC               	bra	u2337
  1690                           
  1691                           ;newmain.c: 267:             if(PORTAbits.RA3){
  1692  0008B8  A680               	btfss	3968,3,c	;volatile
  1693  0008BA  D004               	goto	u1730
  1694                           
  1695                           ;newmain.c: 268:                 state = STATE5TET;
  1696  0008BC  0E05               	movlw	5
  1697  0008BE  6E22               	movwf	FSM@state,c
  1698  0008C0                     l174:
  1699  0008C0  B680               	btfsc	3968,3,c	;volatile
  1700  0008C2  D7FE               	goto	l174
  1701  0008C4                     u1730:
  1702                           
  1703                           ;newmain.c: 272:         state0obrtet();
  1704  0008C4  ECA9  F009         	call	_state0obrtet	;wreg free
  1705                           
  1706                           ;newmain.c: 273:         driveLED(0);
  1707  0008C8  0E00               	movlw	0
  1708  0008CA  EC0E  F009         	call	_driveLED
  1709                           
  1710                           ;newmain.c: 274:         break;
  1711  0008CE  0012               	return	
  1712  0008D0                     l178:
  1713                           
  1714                           ;newmain.c: 277:         if (PORTCbits.RC0){
  1715  0008D0  A082               	btfss	3970,0,c	;volatile
  1716  0008D2  D00D               	goto	u1760
  1717                           
  1718                           ;newmain.c: 278:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1719  0008D4  0E0D               	movlw	13
  1720  0008D6  6E1E               	movwf	??_FSM& (0+255),c
  1721  0008D8  0EFC               	movlw	252
  1722  0008DA                     u2347:
  1723  0008DA  2EE8               	decfsz	wreg,f,c
  1724  0008DC  D7FE               	bra	u2347
  1725  0008DE  2E1E               	decfsz	??_FSM& (0+255),f,c
  1726  0008E0  D7FC               	bra	u2347
  1727                           
  1728                           ;newmain.c: 279:             if(PORTCbits.RC0){
  1729  0008E2  A082               	btfss	3970,0,c	;volatile
  1730  0008E4  D004               	goto	u1760
  1731                           
  1732                           ;newmain.c: 280:                 state = STATE0obrTET;
  1733  0008E6  0E00               	movlw	0
  1734  0008E8  6E22               	movwf	FSM@state,c
  1735  0008EA                     l181:
  1736  0008EA  B082               	btfsc	3970,0,c	;volatile
  1737  0008EC  D7FE               	goto	l181
  1738  0008EE                     u1760:
  1739                           
  1740                           ;newmain.c: 284:         if (PORTAbits.RA4){
  1741                           
  1742                           ;newmain.c: 283:         }
  1743  0008EE  A880               	btfss	3968,4,c	;volatile
  1744  0008F0  D00D               	goto	u1790
  1745                           
  1746                           ;newmain.c: 285:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1747  0008F2  0E0D               	movlw	13
  1748  0008F4  6E1E               	movwf	??_FSM& (0+255),c
  1749  0008F6  0EFC               	movlw	252
  1750  0008F8                     u2357:
  1751  0008F8  2EE8               	decfsz	wreg,f,c
  1752  0008FA  D7FE               	bra	u2357
  1753  0008FC  2E1E               	decfsz	??_FSM& (0+255),f,c
  1754  0008FE  D7FC               	bra	u2357
  1755                           
  1756                           ;newmain.c: 286:             if(PORTAbits.RA4){
  1757  000900  A880               	btfss	3968,4,c	;volatile
  1758  000902  D004               	goto	u1790
  1759                           
  1760                           ;newmain.c: 287:                 state = STATE2obrPWM;
  1761  000904  0E02               	movlw	2
  1762  000906  6E22               	movwf	FSM@state,c
  1763  000908                     l186:
  1764  000908  B880               	btfsc	3968,4,c	;volatile
  1765  00090A  D7FE               	goto	l186
  1766  00090C                     u1790:
  1767                           
  1768                           ;newmain.c: 291:         if (PORTAbits.RA3){
  1769                           
  1770                           ;newmain.c: 290:         }
  1771  00090C  A680               	btfss	3968,3,c	;volatile
  1772  00090E  D00D               	goto	u1820
  1773                           
  1774                           ;newmain.c: 292:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1775  000910  0E0D               	movlw	13
  1776  000912  6E1E               	movwf	??_FSM& (0+255),c
  1777  000914  0EFC               	movlw	252
  1778  000916                     u2367:
  1779  000916  2EE8               	decfsz	wreg,f,c
  1780  000918  D7FE               	bra	u2367
  1781  00091A  2E1E               	decfsz	??_FSM& (0+255),f,c
  1782  00091C  D7FC               	bra	u2367
  1783                           
  1784                           ;newmain.c: 293:             if(PORTAbits.RA3){
  1785  00091E  A680               	btfss	3968,3,c	;volatile
  1786  000920  D004               	goto	u1820
  1787                           
  1788                           ;newmain.c: 294:                 state = STATE6KAL;
  1789  000922  0E06               	movlw	6
  1790  000924  6E22               	movwf	FSM@state,c
  1791  000926                     l191:
  1792  000926  B680               	btfsc	3968,3,c	;volatile
  1793  000928  D7FE               	goto	l191
  1794  00092A                     u1820:
  1795                           
  1796                           ;newmain.c: 298:         state1obrkal();
  1797  00092A  EC9A  F009         	call	_state1obrkal	;wreg free
  1798                           
  1799                           ;newmain.c: 299:         break;
  1800  00092E  0012               	return	
  1801  000930                     l194:
  1802                           
  1803                           ;newmain.c: 302:         if (PORTCbits.RC0){
  1804  000930  A082               	btfss	3970,0,c	;volatile
  1805  000932  D00D               	goto	u1850
  1806                           
  1807                           ;newmain.c: 303:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1808  000934  0E0D               	movlw	13
  1809  000936  6E1E               	movwf	??_FSM& (0+255),c
  1810  000938  0EFC               	movlw	252
  1811  00093A                     u2377:
  1812  00093A  2EE8               	decfsz	wreg,f,c
  1813  00093C  D7FE               	bra	u2377
  1814  00093E  2E1E               	decfsz	??_FSM& (0+255),f,c
  1815  000940  D7FC               	bra	u2377
  1816                           
  1817                           ;newmain.c: 304:             if(PORTCbits.RC0){
  1818  000942  A082               	btfss	3970,0,c	;volatile
  1819  000944  D004               	goto	u1850
  1820                           
  1821                           ;newmain.c: 305:                 state = STATE1obrKAL;
  1822  000946  0E01               	movlw	1
  1823  000948  6E22               	movwf	FSM@state,c
  1824  00094A                     l197:
  1825  00094A  B082               	btfsc	3970,0,c	;volatile
  1826  00094C  D7FE               	goto	l197
  1827  00094E                     u1850:
  1828                           
  1829                           ;newmain.c: 309:         if (PORTAbits.RA4){
  1830                           
  1831                           ;newmain.c: 308:         }
  1832  00094E  A880               	btfss	3968,4,c	;volatile
  1833  000950  D00D               	goto	u1880
  1834                           
  1835                           ;newmain.c: 310:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1836  000952  0E0D               	movlw	13
  1837  000954  6E1E               	movwf	??_FSM& (0+255),c
  1838  000956  0EFC               	movlw	252
  1839  000958                     u2387:
  1840  000958  2EE8               	decfsz	wreg,f,c
  1841  00095A  D7FE               	bra	u2387
  1842  00095C  2E1E               	decfsz	??_FSM& (0+255),f,c
  1843  00095E  D7FC               	bra	u2387
  1844                           
  1845                           ;newmain.c: 311:             if(PORTAbits.RA4){
  1846  000960  A880               	btfss	3968,4,c	;volatile
  1847  000962  D004               	goto	u1880
  1848                           
  1849                           ;newmain.c: 312:                 state = STATE3obrADC;
  1850  000964  0E03               	movlw	3
  1851  000966  6E22               	movwf	FSM@state,c
  1852  000968                     l202:
  1853  000968  B880               	btfsc	3968,4,c	;volatile
  1854  00096A  D7FE               	goto	l202
  1855  00096C                     u1880:
  1856                           
  1857                           ;newmain.c: 316:         if (PORTAbits.RA3){
  1858                           
  1859                           ;newmain.c: 315:         }
  1860  00096C  A680               	btfss	3968,3,c	;volatile
  1861  00096E  D00D               	goto	u1910
  1862                           
  1863                           ;newmain.c: 317:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1864  000970  0E0D               	movlw	13
  1865  000972  6E1E               	movwf	??_FSM& (0+255),c
  1866  000974  0EFC               	movlw	252
  1867  000976                     u2397:
  1868  000976  2EE8               	decfsz	wreg,f,c
  1869  000978  D7FE               	bra	u2397
  1870  00097A  2E1E               	decfsz	??_FSM& (0+255),f,c
  1871  00097C  D7FC               	bra	u2397
  1872                           
  1873                           ;newmain.c: 318:             if(PORTAbits.RA3){
  1874  00097E  A680               	btfss	3968,3,c	;volatile
  1875  000980  D004               	goto	u1910
  1876                           
  1877                           ;newmain.c: 319:                 state = STATE7PWM;
  1878  000982  0E07               	movlw	7
  1879  000984  6E22               	movwf	FSM@state,c
  1880  000986                     l207:
  1881  000986  B680               	btfsc	3968,3,c	;volatile
  1882  000988  D7FE               	goto	l207
  1883  00098A                     u1910:
  1884                           
  1885                           ;newmain.c: 323:         state2obrpwm();
  1886  00098A  EC8B  F009         	call	_state2obrpwm	;wreg free
  1887                           
  1888                           ;newmain.c: 324:         CCPR1L = 0;
  1889  00098E  0E00               	movlw	0
  1890  000990  6EBE               	movwf	4030,c	;volatile
  1891                           
  1892                           ;newmain.c: 325:         break;
  1893  000992  0012               	return	
  1894  000994                     l210:
  1895                           
  1896                           ;newmain.c: 328:         if (PORTCbits.RC0){
  1897  000994  A082               	btfss	3970,0,c	;volatile
  1898  000996  D00D               	goto	u1940
  1899                           
  1900                           ;newmain.c: 329:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1901  000998  0E0D               	movlw	13
  1902  00099A  6E1E               	movwf	??_FSM& (0+255),c
  1903  00099C  0EFC               	movlw	252
  1904  00099E                     u2407:
  1905  00099E  2EE8               	decfsz	wreg,f,c
  1906  0009A0  D7FE               	bra	u2407
  1907  0009A2  2E1E               	decfsz	??_FSM& (0+255),f,c
  1908  0009A4  D7FC               	bra	u2407
  1909                           
  1910                           ;newmain.c: 330:             if(PORTCbits.RC0){
  1911  0009A6  A082               	btfss	3970,0,c	;volatile
  1912  0009A8  D004               	goto	u1940
  1913                           
  1914                           ;newmain.c: 331:                 state = STATE2obrPWM;
  1915  0009AA  0E02               	movlw	2
  1916  0009AC  6E22               	movwf	FSM@state,c
  1917  0009AE                     l213:
  1918  0009AE  B082               	btfsc	3970,0,c	;volatile
  1919  0009B0  D7FE               	goto	l213
  1920  0009B2                     u1940:
  1921                           
  1922                           ;newmain.c: 335:         if (PORTAbits.RA4){
  1923                           
  1924                           ;newmain.c: 334:         }
  1925  0009B2  A880               	btfss	3968,4,c	;volatile
  1926  0009B4  D00D               	goto	u1970
  1927                           
  1928                           ;newmain.c: 336:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1929  0009B6  0E0D               	movlw	13
  1930  0009B8  6E1E               	movwf	??_FSM& (0+255),c
  1931  0009BA  0EFC               	movlw	252
  1932  0009BC                     u2417:
  1933  0009BC  2EE8               	decfsz	wreg,f,c
  1934  0009BE  D7FE               	bra	u2417
  1935  0009C0  2E1E               	decfsz	??_FSM& (0+255),f,c
  1936  0009C2  D7FC               	bra	u2417
  1937                           
  1938                           ;newmain.c: 337:             if(PORTAbits.RA4){
  1939  0009C4  A880               	btfss	3968,4,c	;volatile
  1940  0009C6  D004               	goto	u1970
  1941                           
  1942                           ;newmain.c: 338:                 state = STATE4obrHRA;
  1943  0009C8  0E04               	movlw	4
  1944  0009CA  6E22               	movwf	FSM@state,c
  1945  0009CC                     l218:
  1946  0009CC  B880               	btfsc	3968,4,c	;volatile
  1947  0009CE  D7FE               	goto	l218
  1948  0009D0                     u1970:
  1949                           
  1950                           ;newmain.c: 342:         if (PORTAbits.RA3){
  1951                           
  1952                           ;newmain.c: 341:         }
  1953  0009D0  A680               	btfss	3968,3,c	;volatile
  1954  0009D2  D00D               	goto	u2000
  1955                           
  1956                           ;newmain.c: 343:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1957  0009D4  0E0D               	movlw	13
  1958  0009D6  6E1E               	movwf	??_FSM& (0+255),c
  1959  0009D8  0EFC               	movlw	252
  1960  0009DA                     u2427:
  1961  0009DA  2EE8               	decfsz	wreg,f,c
  1962  0009DC  D7FE               	bra	u2427
  1963  0009DE  2E1E               	decfsz	??_FSM& (0+255),f,c
  1964  0009E0  D7FC               	bra	u2427
  1965                           
  1966                           ;newmain.c: 344:             if(PORTAbits.RA3){
  1967  0009E2  A680               	btfss	3968,3,c	;volatile
  1968  0009E4  D004               	goto	u2000
  1969                           
  1970                           ;newmain.c: 345:                 state = STATE8ADC;
  1971  0009E6  0E08               	movlw	8
  1972  0009E8  6E22               	movwf	FSM@state,c
  1973  0009EA                     l223:
  1974  0009EA  B680               	btfsc	3968,3,c	;volatile
  1975  0009EC  D7FE               	goto	l223
  1976  0009EE                     u2000:
  1977                           
  1978                           ;newmain.c: 349:         state3obradc();
  1979  0009EE  EC7C  F009         	call	_state3obradc	;wreg free
  1980                           
  1981                           ;newmain.c: 350:         driveLED(0);
  1982  0009F2  0E00               	movlw	0
  1983  0009F4  EC0E  F009         	call	_driveLED
  1984                           
  1985                           ;newmain.c: 351:         break;
  1986  0009F8  0012               	return	
  1987  0009FA                     l226:
  1988                           
  1989                           ;newmain.c: 354:         if (PORTCbits.RC0){
  1990  0009FA  A082               	btfss	3970,0,c	;volatile
  1991  0009FC  D00D               	goto	u2030
  1992                           
  1993                           ;newmain.c: 355:             _delay((unsigned long)((5)*(8E6/4000.0)));
  1994  0009FE  0E0D               	movlw	13
  1995  000A00  6E1E               	movwf	??_FSM& (0+255),c
  1996  000A02  0EFC               	movlw	252
  1997  000A04                     u2437:
  1998  000A04  2EE8               	decfsz	wreg,f,c
  1999  000A06  D7FE               	bra	u2437
  2000  000A08  2E1E               	decfsz	??_FSM& (0+255),f,c
  2001  000A0A  D7FC               	bra	u2437
  2002                           
  2003                           ;newmain.c: 356:             if(PORTCbits.RC0){
  2004  000A0C  A082               	btfss	3970,0,c	;volatile
  2005  000A0E  D004               	goto	u2030
  2006                           
  2007                           ;newmain.c: 357:                 state = STATE3obrADC;
  2008  000A10  0E03               	movlw	3
  2009  000A12  6E22               	movwf	FSM@state,c
  2010  000A14                     l229:
  2011  000A14  B082               	btfsc	3970,0,c	;volatile
  2012  000A16  D7FE               	goto	l229
  2013  000A18                     u2030:
  2014                           
  2015                           ;newmain.c: 361:         if (PORTAbits.RA3){
  2016                           
  2017                           ;newmain.c: 360:         }
  2018  000A18  A680               	btfss	3968,3,c	;volatile
  2019  000A1A  D00D               	goto	u2060
  2020                           
  2021                           ;newmain.c: 362:             _delay((unsigned long)((5)*(8E6/4000.0)));
  2022  000A1C  0E0D               	movlw	13
  2023  000A1E  6E1E               	movwf	??_FSM& (0+255),c
  2024  000A20  0EFC               	movlw	252
  2025  000A22                     u2447:
  2026  000A22  2EE8               	decfsz	wreg,f,c
  2027  000A24  D7FE               	bra	u2447
  2028  000A26  2E1E               	decfsz	??_FSM& (0+255),f,c
  2029  000A28  D7FC               	bra	u2447
  2030                           
  2031                           ;newmain.c: 363:             if(PORTAbits.RA3){
  2032  000A2A  A680               	btfss	3968,3,c	;volatile
  2033  000A2C  D004               	goto	u2060
  2034                           
  2035                           ;newmain.c: 364:                 state = STATE9HRA;
  2036  000A2E  0E09               	movlw	9
  2037  000A30  6E22               	movwf	FSM@state,c
  2038  000A32                     l234:
  2039  000A32  B680               	btfsc	3968,3,c	;volatile
  2040  000A34  D7FE               	goto	l234
  2041  000A36                     u2060:
  2042                           
  2043                           ;newmain.c: 368:         state4obrhra();
  2044  000A36  EC6D  F009         	call	_state4obrhra	;wreg free
  2045                           
  2046                           ;newmain.c: 369:         break;
  2047  000A3A  0012               	return	
  2048  000A3C                     l237:
  2049                           
  2050                           ;newmain.c: 372:         if (PORTAbits.RA2){
  2051  000A3C  A480               	btfss	3968,2,c	;volatile
  2052  000A3E  D00D               	goto	u2090
  2053                           
  2054                           ;newmain.c: 373:             _delay((unsigned long)((5)*(8E6/4000.0)));
  2055  000A40  0E0D               	movlw	13
  2056  000A42  6E1E               	movwf	??_FSM& (0+255),c
  2057  000A44  0EFC               	movlw	252
  2058  000A46                     u2457:
  2059  000A46  2EE8               	decfsz	wreg,f,c
  2060  000A48  D7FE               	bra	u2457
  2061  000A4A  2E1E               	decfsz	??_FSM& (0+255),f,c
  2062  000A4C  D7FC               	bra	u2457
  2063                           
  2064                           ;newmain.c: 374:             if(PORTAbits.RA2){
  2065  000A4E  A480               	btfss	3968,2,c	;volatile
  2066  000A50  D004               	goto	u2090
  2067                           
  2068                           ;newmain.c: 375:                 state = STATE0obrTET;
  2069  000A52  0E00               	movlw	0
  2070  000A54  6E22               	movwf	FSM@state,c
  2071  000A56                     l240:
  2072  000A56  B480               	btfsc	3968,2,c	;volatile
  2073  000A58  D7FE               	goto	l240
  2074  000A5A                     u2090:
  2075                           
  2076                           ;newmain.c: 379:         state5tet();
  2077  000A5A  EC92  F005         	call	_state5tet	;wreg free
  2078                           
  2079                           ;newmain.c: 380:         break;
  2080  000A5E  0012               	return	
  2081  000A60                     l243:
  2082                           
  2083                           ;newmain.c: 383:         if (PORTAbits.RA2){
  2084  000A60  A480               	btfss	3968,2,c	;volatile
  2085  000A62  D00D               	goto	u2120
  2086                           
  2087                           ;newmain.c: 384:             _delay((unsigned long)((5)*(8E6/4000.0)));
  2088  000A64  0E0D               	movlw	13
  2089  000A66  6E1E               	movwf	??_FSM& (0+255),c
  2090  000A68  0EFC               	movlw	252
  2091  000A6A                     u2467:
  2092  000A6A  2EE8               	decfsz	wreg,f,c
  2093  000A6C  D7FE               	bra	u2467
  2094  000A6E  2E1E               	decfsz	??_FSM& (0+255),f,c
  2095  000A70  D7FC               	bra	u2467
  2096                           
  2097                           ;newmain.c: 385:             if(PORTAbits.RA2){
  2098  000A72  A480               	btfss	3968,2,c	;volatile
  2099  000A74  D004               	goto	u2120
  2100                           
  2101                           ;newmain.c: 386:                 state = STATE1obrKAL;
  2102  000A76  0E01               	movlw	1
  2103  000A78  6E22               	movwf	FSM@state,c
  2104  000A7A                     l246:
  2105  000A7A  B480               	btfsc	3968,2,c	;volatile
  2106  000A7C  D7FE               	goto	l246
  2107  000A7E                     u2120:
  2108                           
  2109                           ;newmain.c: 390:         state6kal();
  2110  000A7E  EC8D  F006         	call	_state6kal	;wreg free
  2111                           
  2112                           ;newmain.c: 391:         break;
  2113  000A82  0012               	return	
  2114  000A84                     l249:
  2115                           
  2116                           ;newmain.c: 394:         if (PORTAbits.RA2){
  2117  000A84  A480               	btfss	3968,2,c	;volatile
  2118  000A86  D00D               	goto	u2150
  2119                           
  2120                           ;newmain.c: 395:             _delay((unsigned long)((5)*(8E6/4000.0)));
  2121  000A88  0E0D               	movlw	13
  2122  000A8A  6E1E               	movwf	??_FSM& (0+255),c
  2123  000A8C  0EFC               	movlw	252
  2124  000A8E                     u2477:
  2125  000A8E  2EE8               	decfsz	wreg,f,c
  2126  000A90  D7FE               	bra	u2477
  2127  000A92  2E1E               	decfsz	??_FSM& (0+255),f,c
  2128  000A94  D7FC               	bra	u2477
  2129                           
  2130                           ;newmain.c: 396:             if(PORTAbits.RA2){
  2131  000A96  A480               	btfss	3968,2,c	;volatile
  2132  000A98  D004               	goto	u2150
  2133                           
  2134                           ;newmain.c: 397:                 state = STATE2obrPWM;
  2135  000A9A  0E02               	movlw	2
  2136  000A9C  6E22               	movwf	FSM@state,c
  2137  000A9E                     l252:
  2138  000A9E  B480               	btfsc	3968,2,c	;volatile
  2139  000AA0  D7FE               	goto	l252
  2140  000AA2                     u2150:
  2141                           
  2142                           ;newmain.c: 401:         state7pwm();
  2143  000AA2  EC2F  F009         	call	_state7pwm	;wreg free
  2144                           
  2145                           ;newmain.c: 402:         break;
  2146  000AA6  0012               	return	
  2147  000AA8                     l255:
  2148                           
  2149                           ;newmain.c: 405:         if (PORTAbits.RA2){
  2150  000AA8  A480               	btfss	3968,2,c	;volatile
  2151  000AAA  D00D               	goto	u2180
  2152                           
  2153                           ;newmain.c: 406:             _delay((unsigned long)((5)*(8E6/4000.0)));
  2154  000AAC  0E0D               	movlw	13
  2155  000AAE  6E1E               	movwf	??_FSM& (0+255),c
  2156  000AB0  0EFC               	movlw	252
  2157  000AB2                     u2487:
  2158  000AB2  2EE8               	decfsz	wreg,f,c
  2159  000AB4  D7FE               	bra	u2487
  2160  000AB6  2E1E               	decfsz	??_FSM& (0+255),f,c
  2161  000AB8  D7FC               	bra	u2487
  2162                           
  2163                           ;newmain.c: 407:             if(PORTAbits.RA2){
  2164  000ABA  A480               	btfss	3968,2,c	;volatile
  2165  000ABC  D004               	goto	u2180
  2166                           
  2167                           ;newmain.c: 408:                 state = STATE3obrADC;
  2168  000ABE  0E03               	movlw	3
  2169  000AC0  6E22               	movwf	FSM@state,c
  2170  000AC2                     l258:
  2171  000AC2  B480               	btfsc	3968,2,c	;volatile
  2172  000AC4  D7FE               	goto	l258
  2173  000AC6                     u2180:
  2174                           
  2175                           ;newmain.c: 412:         state8adc();
  2176  000AC6  EC6D  F007         	call	_state8adc	;wreg free
  2177                           
  2178                           ;newmain.c: 413:         break;
  2179  000ACA  0012               	return	
  2180  000ACC                     l2947:
  2181                           
  2182                           ;newmain.c: 416:         state = state9hra();
  2183  000ACC  EC4E  F000         	call	_state9hra	;wreg free
  2184  000AD0  500D               	movf	?_state9hra,w,c
  2185  000AD2  6E22               	movwf	FSM@state,c
  2186                           
  2187                           ;newmain.c: 417:         break;
  2188  000AD4  0012               	return	
  2189  000AD6                     l2951:
  2190  000AD6  5022               	movf	FSM@state,w,c
  2191  000AD8  6E1E               	movwf	??_FSM& (0+255),c
  2192  000ADA  6A1F               	clrf	(??_FSM+1)& (0+255),c
  2193                           
  2194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2195                           ; Switch size 1, requested type "simple"
  2196                           ; Number of cases is 1, Range of values is 0 to 0
  2197                           ; switch strategies available:
  2198                           ; Name         Instructions Cycles
  2199                           ; simple_byte            4     3 (average)
  2200                           ;	Chosen strategy is simple_byte
  2201  000ADC  501F               	movf	??_FSM+1,w,c
  2202  000ADE  0A00               	xorlw	0	; case 0
  2203  000AE0  A4D8               	btfss	status,2,c
  2204  000AE2  0012               	return	
  2205                           
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 10, Range of values is 0 to 9
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte           31    16 (average)
  2211                           ;	Chosen strategy is simple_byte
  2212  000AE4  501E               	movf	??_FSM,w,c
  2213  000AE6  0A00               	xorlw	0	; case 0
  2214  000AE8  B4D8               	btfsc	status,2,c
  2215  000AEA  D6CE               	goto	l166
  2216  000AEC  0A01               	xorlw	1	; case 1
  2217  000AEE  B4D8               	btfsc	status,2,c
  2218  000AF0  D6EF               	goto	l178
  2219  000AF2  0A03               	xorlw	3	; case 2
  2220  000AF4  B4D8               	btfsc	status,2,c
  2221  000AF6  D71C               	goto	l194
  2222  000AF8  0A01               	xorlw	1	; case 3
  2223  000AFA  B4D8               	btfsc	status,2,c
  2224  000AFC  D74B               	goto	l210
  2225  000AFE  0A07               	xorlw	7	; case 4
  2226  000B00  B4D8               	btfsc	status,2,c
  2227  000B02  D77B               	goto	l226
  2228  000B04  0A01               	xorlw	1	; case 5
  2229  000B06  B4D8               	btfsc	status,2,c
  2230  000B08  D799               	goto	l237
  2231  000B0A  0A03               	xorlw	3	; case 6
  2232  000B0C  B4D8               	btfsc	status,2,c
  2233  000B0E  D7A8               	goto	l243
  2234  000B10  0A01               	xorlw	1	; case 7
  2235  000B12  B4D8               	btfsc	status,2,c
  2236  000B14  D7B7               	goto	l249
  2237  000B16  0A0F               	xorlw	15	; case 8
  2238  000B18  B4D8               	btfsc	status,2,c
  2239  000B1A  D7C6               	goto	l255
  2240  000B1C  0A01               	xorlw	1	; case 9
  2241  000B1E  A4D8               	btfss	status,2,c
  2242  000B20  0012               	return	
  2243  000B22  D7D4               	goto	l2947
  2244  000B24                     __end_of_FSM:
  2245                           	opt callstack 0
  2246                           
  2247 ;; *************** function _state9hra *****************
  2248 ;; Defined at:
  2249 ;;		line 617 in file "newmain.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  player2         2   20[COMRAM] int 
  2254 ;;  konec           2   18[COMRAM] int 
  2255 ;;  player1         2   16[COMRAM] int 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  2   12[COMRAM] int 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;Total ram usage:       10 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    3
  2272 ;; This function calls:
  2273 ;;		_LCD_ShowString
  2274 ;; This function is called by:
  2275 ;;		_FSM
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text4
  2280  00009C                     __ptext4:
  2281                           	opt callstack 0
  2282  00009C                     _state9hra:
  2283                           	opt callstack 26
  2284                           
  2285                           ;newmain.c: 619:     int player1 = 3, player2 = 3, konec = 0;
  2286                           
  2287                           ;incstack = 0
  2288  00009C  0E00               	movlw	0
  2289  00009E  6E12               	movwf	state9hra@player1+1,c
  2290  0000A0  0E03               	movlw	3
  2291  0000A2  6E11               	movwf	state9hra@player1,c
  2292  0000A4  0E00               	movlw	0
  2293  0000A6  6E16               	movwf	state9hra@player2+1,c
  2294  0000A8  0E03               	movlw	3
  2295  0000AA  6E15               	movwf	state9hra@player2,c
  2296  0000AC  0E00               	movlw	0
  2297  0000AE  6E14               	movwf	state9hra@konec+1,c
  2298  0000B0  0E00               	movlw	0
  2299  0000B2  6E13               	movwf	state9hra@konec,c
  2300  0000B4  D0CA               	goto	l2615
  2301  0000B6                     l2567:
  2302                           
  2303                           ;newmain.c: 626:                     LCD_ShowString(1, "Zivoty: +++  +++");
  2304  0000B6  0EBC               	movlw	low STR_19
  2305  0000B8  6E07               	movwf	LCD_ShowString@textData,c
  2306  0000BA  0EFE               	movlw	high STR_19
  2307  0000BC  6E08               	movwf	LCD_ShowString@textData+1,c
  2308  0000BE  0E01               	movlw	1
  2309  0000C0  ECDA  F008         	call	_LCD_ShowString
  2310                           
  2311                           ;newmain.c: 627:                     break;
  2312  0000C4  D0D7               	goto	l2617
  2313  0000C6                     l2569:
  2314                           
  2315                           ;newmain.c: 629:                     LCD_ShowString(1, "Zivoty: +++   ++");
  2316  0000C6  0E89               	movlw	low STR_20
  2317  0000C8  6E07               	movwf	LCD_ShowString@textData,c
  2318  0000CA  0EFE               	movlw	high STR_20
  2319  0000CC  6E08               	movwf	LCD_ShowString@textData+1,c
  2320  0000CE  0E01               	movlw	1
  2321  0000D0  ECDA  F008         	call	_LCD_ShowString
  2322                           
  2323                           ;newmain.c: 630:                     break;
  2324  0000D4  D0CF               	goto	l2617
  2325  0000D6                     l2571:
  2326                           
  2327                           ;newmain.c: 632:                     LCD_ShowString(1, "Zivoty: +++    +");
  2328  0000D6  0E56               	movlw	low STR_21
  2329  0000D8  6E07               	movwf	LCD_ShowString@textData,c
  2330  0000DA  0EFE               	movlw	high STR_21
  2331  0000DC  6E08               	movwf	LCD_ShowString@textData+1,c
  2332  0000DE  0E01               	movlw	1
  2333  0000E0  ECDA  F008         	call	_LCD_ShowString
  2334                           
  2335                           ;newmain.c: 633:                     break;
  2336  0000E4  D0C7               	goto	l2617
  2337  0000E6                     l2573:
  2338                           
  2339                           ;newmain.c: 635:                     LCD_ShowString(1, "   GAME OVER!   ");
  2340  0000E6  0EAC               	movlw	low STR_22
  2341  0000E8  6E07               	movwf	LCD_ShowString@textData,c
  2342  0000EA  0EFD               	movlw	high STR_22
  2343  0000EC  6E08               	movwf	LCD_ShowString@textData+1,c
  2344  0000EE  0E01               	movlw	1
  2345  0000F0  ECDA  F008         	call	_LCD_ShowString
  2346                           
  2347                           ;newmain.c: 636:                     LCD_ShowString(2, "  Player 1 won  ");
  2348  0000F4  0E01               	movlw	low STR_23
  2349  0000F6  6E07               	movwf	LCD_ShowString@textData,c
  2350  0000F8  0EFE               	movlw	high STR_23
  2351  0000FA  6E08               	movwf	LCD_ShowString@textData+1,c
  2352  0000FC  0E02               	movlw	2
  2353  0000FE  ECDA  F008         	call	_LCD_ShowString
  2354  000102                     l2575:
  2355                           
  2356                           ;newmain.c: 637:                     konec = 1;
  2357  000102  0E00               	movlw	0
  2358  000104  6E14               	movwf	state9hra@konec+1,c
  2359  000106  0E01               	movlw	1
  2360  000108  6E13               	movwf	state9hra@konec,c
  2361                           
  2362                           ;newmain.c: 638:                     break;
  2363  00010A  D0B4               	goto	l2617
  2364  00010C                     l2579:
  2365  00010C  C015  F00F         	movff	state9hra@player2,??_state9hra
  2366  000110  C016  F010         	movff	state9hra@player2+1,??_state9hra+1
  2367                           
  2368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2369                           ; Switch size 1, requested type "simple"
  2370                           ; Number of cases is 1, Range of values is 0 to 0
  2371                           ; switch strategies available:
  2372                           ; Name         Instructions Cycles
  2373                           ; simple_byte            4     3 (average)
  2374                           ;	Chosen strategy is simple_byte
  2375  000114  5010               	movf	??_state9hra+1,w,c
  2376  000116  0A00               	xorlw	0	; case 0
  2377  000118  A4D8               	btfss	status,2,c
  2378  00011A  D0AC               	goto	l2617
  2379                           
  2380                           ; Switch size 1, requested type "simple"
  2381                           ; Number of cases is 4, Range of values is 0 to 3
  2382                           ; switch strategies available:
  2383                           ; Name         Instructions Cycles
  2384                           ; simple_byte           13     7 (average)
  2385                           ;	Chosen strategy is simple_byte
  2386  00011C  500F               	movf	??_state9hra,w,c
  2387  00011E  0A00               	xorlw	0	; case 0
  2388  000120  B4D8               	btfsc	status,2,c
  2389  000122  D7E1               	goto	l2573
  2390  000124  0A01               	xorlw	1	; case 1
  2391  000126  B4D8               	btfsc	status,2,c
  2392  000128  D7D6               	goto	l2571
  2393  00012A  0A03               	xorlw	3	; case 2
  2394  00012C  B4D8               	btfsc	status,2,c
  2395  00012E  D7CB               	goto	l2569
  2396  000130  0A01               	xorlw	1	; case 3
  2397  000132  B4D8               	btfsc	status,2,c
  2398  000134  D7C0               	goto	l2567
  2399  000136  D09E               	goto	l2617
  2400  000138                     l2581:
  2401                           
  2402                           ;newmain.c: 644:                     LCD_ShowString(1, "Zivoty: ++   +++");
  2403  000138  0EAB               	movlw	low STR_24
  2404  00013A  6E07               	movwf	LCD_ShowString@textData,c
  2405  00013C  0EFE               	movlw	high STR_24
  2406  00013E  6E08               	movwf	LCD_ShowString@textData+1,c
  2407  000140  0E01               	movlw	1
  2408  000142  ECDA  F008         	call	_LCD_ShowString
  2409                           
  2410                           ;newmain.c: 645:                     break;
  2411  000146  D096               	goto	l2617
  2412  000148                     l2583:
  2413                           
  2414                           ;newmain.c: 647:                     LCD_ShowString(1, "Zivoty: ++    ++");
  2415  000148  0E78               	movlw	low STR_25
  2416  00014A  6E07               	movwf	LCD_ShowString@textData,c
  2417  00014C  0EFE               	movlw	high STR_25
  2418  00014E  6E08               	movwf	LCD_ShowString@textData+1,c
  2419  000150  0E01               	movlw	1
  2420  000152  ECDA  F008         	call	_LCD_ShowString
  2421                           
  2422                           ;newmain.c: 648:                     break;
  2423  000156  D08E               	goto	l2617
  2424  000158                     l2585:
  2425                           
  2426                           ;newmain.c: 650:                     LCD_ShowString(1, "Zivoty: ++     +");
  2427  000158  0E45               	movlw	low STR_26
  2428  00015A  6E07               	movwf	LCD_ShowString@textData,c
  2429  00015C  0EFE               	movlw	high STR_26
  2430  00015E  6E08               	movwf	LCD_ShowString@textData+1,c
  2431  000160  0E01               	movlw	1
  2432  000162  ECDA  F008         	call	_LCD_ShowString
  2433                           
  2434                           ;newmain.c: 651:                     break;
  2435  000166  D086               	goto	l2617
  2436  000168                     l2587:
  2437                           
  2438                           ;newmain.c: 653:                     LCD_ShowString(1, "   GAME OVER!   ");
  2439  000168  0EAC               	movlw	low STR_22
  2440  00016A  6E07               	movwf	LCD_ShowString@textData,c
  2441  00016C  0EFD               	movlw	high STR_22
  2442  00016E  6E08               	movwf	LCD_ShowString@textData+1,c
  2443  000170  0E01               	movlw	1
  2444  000172  ECDA  F008         	call	_LCD_ShowString
  2445                           
  2446                           ;newmain.c: 654:                     LCD_ShowString(2, "  Player 1 won  ");
  2447  000176  0E01               	movlw	low STR_23
  2448  000178  6E07               	movwf	LCD_ShowString@textData,c
  2449  00017A  0EFE               	movlw	high STR_23
  2450  00017C  6E08               	movwf	LCD_ShowString@textData+1,c
  2451  00017E  0E02               	movlw	2
  2452  000180  ECDA  F008         	call	_LCD_ShowString
  2453  000184  D7BE               	goto	l2575
  2454  000186                     l2593:
  2455  000186  C015  F00F         	movff	state9hra@player2,??_state9hra
  2456  00018A  C016  F010         	movff	state9hra@player2+1,??_state9hra+1
  2457                           
  2458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2459                           ; Switch size 1, requested type "simple"
  2460                           ; Number of cases is 1, Range of values is 0 to 0
  2461                           ; switch strategies available:
  2462                           ; Name         Instructions Cycles
  2463                           ; simple_byte            4     3 (average)
  2464                           ;	Chosen strategy is simple_byte
  2465  00018E  5010               	movf	??_state9hra+1,w,c
  2466  000190  0A00               	xorlw	0	; case 0
  2467  000192  A4D8               	btfss	status,2,c
  2468  000194  D06F               	goto	l2617
  2469                           
  2470                           ; Switch size 1, requested type "simple"
  2471                           ; Number of cases is 4, Range of values is 0 to 3
  2472                           ; switch strategies available:
  2473                           ; Name         Instructions Cycles
  2474                           ; simple_byte           13     7 (average)
  2475                           ;	Chosen strategy is simple_byte
  2476  000196  500F               	movf	??_state9hra,w,c
  2477  000198  0A00               	xorlw	0	; case 0
  2478  00019A  B4D8               	btfsc	status,2,c
  2479  00019C  D7E5               	goto	l2587
  2480  00019E  0A01               	xorlw	1	; case 1
  2481  0001A0  B4D8               	btfsc	status,2,c
  2482  0001A2  D7DA               	goto	l2585
  2483  0001A4  0A03               	xorlw	3	; case 2
  2484  0001A6  B4D8               	btfsc	status,2,c
  2485  0001A8  D7CF               	goto	l2583
  2486  0001AA  0A01               	xorlw	1	; case 3
  2487  0001AC  B4D8               	btfsc	status,2,c
  2488  0001AE  D7C4               	goto	l2581
  2489  0001B0  D061               	goto	l2617
  2490  0001B2                     l2595:
  2491                           
  2492                           ;newmain.c: 662:                     LCD_ShowString(1, "Zivoty: +    +++");
  2493  0001B2  0E9A               	movlw	low STR_29
  2494  0001B4  6E07               	movwf	LCD_ShowString@textData,c
  2495  0001B6  0EFE               	movlw	high STR_29
  2496  0001B8  6E08               	movwf	LCD_ShowString@textData+1,c
  2497  0001BA  0E01               	movlw	1
  2498  0001BC  ECDA  F008         	call	_LCD_ShowString
  2499                           
  2500                           ;newmain.c: 663:                     break;
  2501  0001C0  D059               	goto	l2617
  2502  0001C2                     l2597:
  2503                           
  2504                           ;newmain.c: 665:                     LCD_ShowString(1, "Zivoty: +     ++");
  2505  0001C2  0E67               	movlw	low STR_30
  2506  0001C4  6E07               	movwf	LCD_ShowString@textData,c
  2507  0001C6  0EFE               	movlw	high STR_30
  2508  0001C8  6E08               	movwf	LCD_ShowString@textData+1,c
  2509  0001CA  0E01               	movlw	1
  2510  0001CC  ECDA  F008         	call	_LCD_ShowString
  2511                           
  2512                           ;newmain.c: 666:                     break;
  2513  0001D0  D051               	goto	l2617
  2514  0001D2                     l2599:
  2515                           
  2516                           ;newmain.c: 668:                     LCD_ShowString(1, "Zivoty: +      +");
  2517  0001D2  0E34               	movlw	low STR_31
  2518  0001D4  6E07               	movwf	LCD_ShowString@textData,c
  2519  0001D6  0EFE               	movlw	high STR_31
  2520  0001D8  6E08               	movwf	LCD_ShowString@textData+1,c
  2521  0001DA  0E01               	movlw	1
  2522  0001DC  ECDA  F008         	call	_LCD_ShowString
  2523                           
  2524                           ;newmain.c: 669:                     break;
  2525  0001E0  D049               	goto	l2617
  2526  0001E2                     l2601:
  2527                           
  2528                           ;newmain.c: 671:                     LCD_ShowString(1, "   GAME OVER!   ");
  2529  0001E2  0EAC               	movlw	low STR_22
  2530  0001E4  6E07               	movwf	LCD_ShowString@textData,c
  2531  0001E6  0EFD               	movlw	high STR_22
  2532  0001E8  6E08               	movwf	LCD_ShowString@textData+1,c
  2533  0001EA  0E01               	movlw	1
  2534  0001EC  ECDA  F008         	call	_LCD_ShowString
  2535                           
  2536                           ;newmain.c: 672:                     LCD_ShowString(2, "  Player 1 won  ");
  2537  0001F0  0E01               	movlw	low STR_23
  2538  0001F2  6E07               	movwf	LCD_ShowString@textData,c
  2539  0001F4  0EFE               	movlw	high STR_23
  2540  0001F6  6E08               	movwf	LCD_ShowString@textData+1,c
  2541  0001F8  0E02               	movlw	2
  2542  0001FA  ECDA  F008         	call	_LCD_ShowString
  2543  0001FE  D781               	goto	l2575
  2544  000200                     l2607:
  2545  000200  C015  F00F         	movff	state9hra@player2,??_state9hra
  2546  000204  C016  F010         	movff	state9hra@player2+1,??_state9hra+1
  2547                           
  2548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2549                           ; Switch size 1, requested type "simple"
  2550                           ; Number of cases is 1, Range of values is 0 to 0
  2551                           ; switch strategies available:
  2552                           ; Name         Instructions Cycles
  2553                           ; simple_byte            4     3 (average)
  2554                           ;	Chosen strategy is simple_byte
  2555  000208  5010               	movf	??_state9hra+1,w,c
  2556  00020A  0A00               	xorlw	0	; case 0
  2557  00020C  A4D8               	btfss	status,2,c
  2558  00020E  D032               	goto	l2617
  2559                           
  2560                           ; Switch size 1, requested type "simple"
  2561                           ; Number of cases is 4, Range of values is 0 to 3
  2562                           ; switch strategies available:
  2563                           ; Name         Instructions Cycles
  2564                           ; simple_byte           13     7 (average)
  2565                           ;	Chosen strategy is simple_byte
  2566  000210  500F               	movf	??_state9hra,w,c
  2567  000212  0A00               	xorlw	0	; case 0
  2568  000214  B4D8               	btfsc	status,2,c
  2569  000216  D7E5               	goto	l2601
  2570  000218  0A01               	xorlw	1	; case 1
  2571  00021A  B4D8               	btfsc	status,2,c
  2572  00021C  D7DA               	goto	l2599
  2573  00021E  0A03               	xorlw	3	; case 2
  2574  000220  B4D8               	btfsc	status,2,c
  2575  000222  D7CF               	goto	l2597
  2576  000224  0A01               	xorlw	1	; case 3
  2577  000226  B4D8               	btfsc	status,2,c
  2578  000228  D7C4               	goto	l2595
  2579  00022A  D024               	goto	l2617
  2580  00022C                     l2609:
  2581                           
  2582                           ;newmain.c: 678:             LCD_ShowString(1, "   GAME OVER!   ");
  2583  00022C  0EAC               	movlw	low STR_22
  2584  00022E  6E07               	movwf	LCD_ShowString@textData,c
  2585  000230  0EFD               	movlw	high STR_22
  2586  000232  6E08               	movwf	LCD_ShowString@textData+1,c
  2587  000234  0E01               	movlw	1
  2588  000236  ECDA  F008         	call	_LCD_ShowString
  2589                           
  2590                           ;newmain.c: 679:             LCD_ShowString(2, "  Player 2 won  ");
  2591  00023A  0E12               	movlw	low STR_35
  2592  00023C  6E07               	movwf	LCD_ShowString@textData,c
  2593  00023E  0EFE               	movlw	high STR_35
  2594  000240  6E08               	movwf	LCD_ShowString@textData+1,c
  2595  000242  0E02               	movlw	2
  2596  000244  ECDA  F008         	call	_LCD_ShowString
  2597  000248  D75C               	goto	l2575
  2598  00024A                     l2615:
  2599  00024A  C011  F00F         	movff	state9hra@player1,??_state9hra
  2600  00024E  C012  F010         	movff	state9hra@player1+1,??_state9hra+1
  2601                           
  2602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2603                           ; Switch size 1, requested type "simple"
  2604                           ; Number of cases is 1, Range of values is 0 to 0
  2605                           ; switch strategies available:
  2606                           ; Name         Instructions Cycles
  2607                           ; simple_byte            4     3 (average)
  2608                           ;	Chosen strategy is simple_byte
  2609  000252  5010               	movf	??_state9hra+1,w,c
  2610  000254  0A00               	xorlw	0	; case 0
  2611  000256  A4D8               	btfss	status,2,c
  2612  000258  D00D               	goto	l2617
  2613                           
  2614                           ; Switch size 1, requested type "simple"
  2615                           ; Number of cases is 4, Range of values is 0 to 3
  2616                           ; switch strategies available:
  2617                           ; Name         Instructions Cycles
  2618                           ; simple_byte           13     7 (average)
  2619                           ;	Chosen strategy is simple_byte
  2620  00025A  500F               	movf	??_state9hra,w,c
  2621  00025C  0A00               	xorlw	0	; case 0
  2622  00025E  B4D8               	btfsc	status,2,c
  2623  000260  D7E5               	goto	l2609
  2624  000262  0A01               	xorlw	1	; case 1
  2625  000264  B4D8               	btfsc	status,2,c
  2626  000266  D7CC               	goto	l2607
  2627  000268  0A03               	xorlw	3	; case 2
  2628  00026A  B4D8               	btfsc	status,2,c
  2629  00026C  D78C               	goto	l2593
  2630  00026E  0A01               	xorlw	1	; case 3
  2631  000270  B4D8               	btfsc	status,2,c
  2632  000272  D74C               	goto	l2579
  2633  000274                     l2617:
  2634                           
  2635                           ;newmain.c: 683:     if (konec == 1) {
  2636  000274  0413               	decf	state9hra@konec,w,c
  2637  000276  1014               	iorwf	state9hra@konec+1,w,c
  2638  000278  A4D8               	btfss	status,2,c
  2639  00027A  D00D               	goto	l2621
  2640  00027C                     u1620:
  2641                           
  2642                           ;newmain.c: 684:         _delay((unsigned long)((2000)*(8E6/4000.0)));
  2643  00027C  0E15               	movlw	21
  2644  00027E  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2645  000280  0E4B               	movlw	75
  2646  000282  6E0F               	movwf	??_state9hra& (0+255),c
  2647  000284  0EBE               	movlw	190
  2648  000286                     u2497:
  2649  000286  2EE8               	decfsz	wreg,f,c
  2650  000288  D7FE               	bra	u2497
  2651  00028A  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2652  00028C  D7FC               	bra	u2497
  2653  00028E  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2654  000290  D7FA               	bra	u2497
  2655  000292  D000               	nop2	
  2656                           
  2657                           ;newmain.c: 685:         break;
  2658  000294  D2F3               	goto	l2767
  2659  000296                     l2621:
  2660                           
  2661                           ;newmain.c: 688:     _delay((unsigned long)((200/2 - 5)*(8E6/4000.0)));
  2662  000296  0EF7               	movlw	247
  2663  000298  6E0F               	movwf	??_state9hra& (0+255),c
  2664  00029A  0EC0               	movlw	192
  2665  00029C                     u2507:
  2666  00029C  2EE8               	decfsz	wreg,f,c
  2667  00029E  D7FE               	bra	u2507
  2668  0002A0  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2669  0002A2  D7FC               	bra	u2507
  2670                           
  2671                           ;newmain.c: 689:     LCD_ShowString(2, "M o            M");
  2672  0002A4  0EDE               	movlw	low STR_36
  2673  0002A6  6E07               	movwf	LCD_ShowString@textData,c
  2674  0002A8  0EFE               	movlw	high STR_36
  2675  0002AA  6E08               	movwf	LCD_ShowString@textData+1,c
  2676  0002AC  0E02               	movlw	2
  2677  0002AE  ECDA  F008         	call	_LCD_ShowString
  2678                           
  2679                           ;newmain.c: 690:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2680  0002B2  0E03               	movlw	3
  2681  0002B4  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2682  0002B6  0E08               	movlw	8
  2683  0002B8  6E0F               	movwf	??_state9hra& (0+255),c
  2684  0002BA  0E77               	movlw	119
  2685  0002BC                     u2517:
  2686  0002BC  2EE8               	decfsz	wreg,f,c
  2687  0002BE  D7FE               	bra	u2517
  2688  0002C0  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2689  0002C2  D7FC               	bra	u2517
  2690  0002C4  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2691  0002C6  D7FA               	bra	u2517
  2692  0002C8  F000               	nop	
  2693                           
  2694                           ;newmain.c: 691:     LCD_ShowString(2, "M  o           M");
  2695  0002CA  0EEF               	movlw	low STR_37
  2696  0002CC  6E07               	movwf	LCD_ShowString@textData,c
  2697  0002CE  0EFE               	movlw	high STR_37
  2698  0002D0  6E08               	movwf	LCD_ShowString@textData+1,c
  2699  0002D2  0E02               	movlw	2
  2700  0002D4  ECDA  F008         	call	_LCD_ShowString
  2701                           
  2702                           ;newmain.c: 692:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2703  0002D8  0E03               	movlw	3
  2704  0002DA  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2705  0002DC  0E08               	movlw	8
  2706  0002DE  6E0F               	movwf	??_state9hra& (0+255),c
  2707  0002E0  0E77               	movlw	119
  2708  0002E2                     u2527:
  2709  0002E2  2EE8               	decfsz	wreg,f,c
  2710  0002E4  D7FE               	bra	u2527
  2711  0002E6  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2712  0002E8  D7FC               	bra	u2527
  2713  0002EA  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2714  0002EC  D7FA               	bra	u2527
  2715  0002EE  F000               	nop	
  2716                           
  2717                           ;newmain.c: 693:     LCD_ShowString(2, "M   o          M");
  2718  0002F0  0E00               	movlw	low STR_38
  2719  0002F2  6E07               	movwf	LCD_ShowString@textData,c
  2720  0002F4  0EFF               	movlw	high STR_38
  2721  0002F6  6E08               	movwf	LCD_ShowString@textData+1,c
  2722  0002F8  0E02               	movlw	2
  2723  0002FA  ECDA  F008         	call	_LCD_ShowString
  2724                           
  2725                           ;newmain.c: 694:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2726  0002FE  0E03               	movlw	3
  2727  000300  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2728  000302  0E08               	movlw	8
  2729  000304  6E0F               	movwf	??_state9hra& (0+255),c
  2730  000306  0E77               	movlw	119
  2731  000308                     u2537:
  2732  000308  2EE8               	decfsz	wreg,f,c
  2733  00030A  D7FE               	bra	u2537
  2734  00030C  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2735  00030E  D7FC               	bra	u2537
  2736  000310  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2737  000312  D7FA               	bra	u2537
  2738  000314  F000               	nop	
  2739                           
  2740                           ;newmain.c: 695:     LCD_ShowString(2, "M    o         M");
  2741  000316  0E11               	movlw	low STR_39
  2742  000318  6E07               	movwf	LCD_ShowString@textData,c
  2743  00031A  0EFF               	movlw	high STR_39
  2744  00031C  6E08               	movwf	LCD_ShowString@textData+1,c
  2745  00031E  0E02               	movlw	2
  2746  000320  ECDA  F008         	call	_LCD_ShowString
  2747                           
  2748                           ;newmain.c: 696:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2749  000324  0E03               	movlw	3
  2750  000326  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2751  000328  0E08               	movlw	8
  2752  00032A  6E0F               	movwf	??_state9hra& (0+255),c
  2753  00032C  0E77               	movlw	119
  2754  00032E                     u2547:
  2755  00032E  2EE8               	decfsz	wreg,f,c
  2756  000330  D7FE               	bra	u2547
  2757  000332  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2758  000334  D7FC               	bra	u2547
  2759  000336  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2760  000338  D7FA               	bra	u2547
  2761  00033A  F000               	nop	
  2762                           
  2763                           ;newmain.c: 697:     LCD_ShowString(2, "M     o        M");
  2764  00033C  0E22               	movlw	low STR_40
  2765  00033E  6E07               	movwf	LCD_ShowString@textData,c
  2766  000340  0EFF               	movlw	high STR_40
  2767  000342  6E08               	movwf	LCD_ShowString@textData+1,c
  2768  000344  0E02               	movlw	2
  2769  000346  ECDA  F008         	call	_LCD_ShowString
  2770                           
  2771                           ;newmain.c: 698:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2772  00034A  0E03               	movlw	3
  2773  00034C  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2774  00034E  0E08               	movlw	8
  2775  000350  6E0F               	movwf	??_state9hra& (0+255),c
  2776  000352  0E77               	movlw	119
  2777  000354                     u2557:
  2778  000354  2EE8               	decfsz	wreg,f,c
  2779  000356  D7FE               	bra	u2557
  2780  000358  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2781  00035A  D7FC               	bra	u2557
  2782  00035C  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2783  00035E  D7FA               	bra	u2557
  2784  000360  F000               	nop	
  2785                           
  2786                           ;newmain.c: 699:     LCD_ShowString(2, "M      o       M");
  2787  000362  0E33               	movlw	low STR_41
  2788  000364  6E07               	movwf	LCD_ShowString@textData,c
  2789  000366  0EFF               	movlw	high STR_41
  2790  000368  6E08               	movwf	LCD_ShowString@textData+1,c
  2791  00036A  0E02               	movlw	2
  2792  00036C  ECDA  F008         	call	_LCD_ShowString
  2793                           
  2794                           ;newmain.c: 700:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2795  000370  0E03               	movlw	3
  2796  000372  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2797  000374  0E08               	movlw	8
  2798  000376  6E0F               	movwf	??_state9hra& (0+255),c
  2799  000378  0E77               	movlw	119
  2800  00037A                     u2567:
  2801  00037A  2EE8               	decfsz	wreg,f,c
  2802  00037C  D7FE               	bra	u2567
  2803  00037E  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2804  000380  D7FC               	bra	u2567
  2805  000382  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2806  000384  D7FA               	bra	u2567
  2807  000386  F000               	nop	
  2808                           
  2809                           ;newmain.c: 701:     LCD_ShowString(2, "M       o      M");
  2810  000388  0E44               	movlw	low STR_42
  2811  00038A  6E07               	movwf	LCD_ShowString@textData,c
  2812  00038C  0EFF               	movlw	high STR_42
  2813  00038E  6E08               	movwf	LCD_ShowString@textData+1,c
  2814  000390  0E02               	movlw	2
  2815  000392  ECDA  F008         	call	_LCD_ShowString
  2816                           
  2817                           ;newmain.c: 702:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2818  000396  0E03               	movlw	3
  2819  000398  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2820  00039A  0E08               	movlw	8
  2821  00039C  6E0F               	movwf	??_state9hra& (0+255),c
  2822  00039E  0E77               	movlw	119
  2823  0003A0                     u2577:
  2824  0003A0  2EE8               	decfsz	wreg,f,c
  2825  0003A2  D7FE               	bra	u2577
  2826  0003A4  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2827  0003A6  D7FC               	bra	u2577
  2828  0003A8  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2829  0003AA  D7FA               	bra	u2577
  2830  0003AC  F000               	nop	
  2831                           
  2832                           ;newmain.c: 703:     LCD_ShowString(2, "M        o     M");
  2833  0003AE  0E55               	movlw	low STR_43
  2834  0003B0  6E07               	movwf	LCD_ShowString@textData,c
  2835  0003B2  0EFF               	movlw	high STR_43
  2836  0003B4  6E08               	movwf	LCD_ShowString@textData+1,c
  2837  0003B6  0E02               	movlw	2
  2838  0003B8  ECDA  F008         	call	_LCD_ShowString
  2839                           
  2840                           ;newmain.c: 704:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2841  0003BC  0E03               	movlw	3
  2842  0003BE  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2843  0003C0  0E08               	movlw	8
  2844  0003C2  6E0F               	movwf	??_state9hra& (0+255),c
  2845  0003C4  0E77               	movlw	119
  2846  0003C6                     u2587:
  2847  0003C6  2EE8               	decfsz	wreg,f,c
  2848  0003C8  D7FE               	bra	u2587
  2849  0003CA  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2850  0003CC  D7FC               	bra	u2587
  2851  0003CE  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2852  0003D0  D7FA               	bra	u2587
  2853  0003D2  F000               	nop	
  2854                           
  2855                           ;newmain.c: 705:     LCD_ShowString(2, "M         o    M");
  2856  0003D4  0E66               	movlw	low STR_44
  2857  0003D6  6E07               	movwf	LCD_ShowString@textData,c
  2858  0003D8  0EFF               	movlw	high STR_44
  2859  0003DA  6E08               	movwf	LCD_ShowString@textData+1,c
  2860  0003DC  0E02               	movlw	2
  2861  0003DE  ECDA  F008         	call	_LCD_ShowString
  2862                           
  2863                           ;newmain.c: 706:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2864  0003E2  0E03               	movlw	3
  2865  0003E4  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2866  0003E6  0E08               	movlw	8
  2867  0003E8  6E0F               	movwf	??_state9hra& (0+255),c
  2868  0003EA  0E77               	movlw	119
  2869  0003EC                     u2597:
  2870  0003EC  2EE8               	decfsz	wreg,f,c
  2871  0003EE  D7FE               	bra	u2597
  2872  0003F0  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2873  0003F2  D7FC               	bra	u2597
  2874  0003F4  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2875  0003F6  D7FA               	bra	u2597
  2876  0003F8  F000               	nop	
  2877                           
  2878                           ;newmain.c: 707:     LCD_ShowString(2, "M          o   M");
  2879  0003FA  0E77               	movlw	low STR_45
  2880  0003FC  6E07               	movwf	LCD_ShowString@textData,c
  2881  0003FE  0EFF               	movlw	high STR_45
  2882  000400  6E08               	movwf	LCD_ShowString@textData+1,c
  2883  000402  0E02               	movlw	2
  2884  000404  ECDA  F008         	call	_LCD_ShowString
  2885                           
  2886                           ;newmain.c: 708:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2887  000408  0E03               	movlw	3
  2888  00040A  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2889  00040C  0E08               	movlw	8
  2890  00040E  6E0F               	movwf	??_state9hra& (0+255),c
  2891  000410  0E77               	movlw	119
  2892  000412                     u2607:
  2893  000412  2EE8               	decfsz	wreg,f,c
  2894  000414  D7FE               	bra	u2607
  2895  000416  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2896  000418  D7FC               	bra	u2607
  2897  00041A  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2898  00041C  D7FA               	bra	u2607
  2899  00041E  F000               	nop	
  2900                           
  2901                           ;newmain.c: 709:     LCD_ShowString(2, "M           o  M");
  2902  000420  0E88               	movlw	low STR_46
  2903  000422  6E07               	movwf	LCD_ShowString@textData,c
  2904  000424  0EFF               	movlw	high STR_46
  2905  000426  6E08               	movwf	LCD_ShowString@textData+1,c
  2906  000428  0E02               	movlw	2
  2907  00042A  ECDA  F008         	call	_LCD_ShowString
  2908                           
  2909                           ;newmain.c: 710:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2910  00042E  0E03               	movlw	3
  2911  000430  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2912  000432  0E08               	movlw	8
  2913  000434  6E0F               	movwf	??_state9hra& (0+255),c
  2914  000436  0E77               	movlw	119
  2915  000438                     u2617:
  2916  000438  2EE8               	decfsz	wreg,f,c
  2917  00043A  D7FE               	bra	u2617
  2918  00043C  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2919  00043E  D7FC               	bra	u2617
  2920  000440  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2921  000442  D7FA               	bra	u2617
  2922  000444  F000               	nop	
  2923                           
  2924                           ;newmain.c: 711:     LCD_ShowString(2, "M            o M");
  2925  000446  0E99               	movlw	low STR_47
  2926  000448  6E07               	movwf	LCD_ShowString@textData,c
  2927  00044A  0EFF               	movlw	high STR_47
  2928  00044C  6E08               	movwf	LCD_ShowString@textData+1,c
  2929  00044E  0E02               	movlw	2
  2930  000450  ECDA  F008         	call	_LCD_ShowString
  2931                           
  2932                           ;newmain.c: 712:     _delay((unsigned long)((200)*(8E6/4000.0)));
  2933  000454  0E03               	movlw	3
  2934  000456  6E10               	movwf	(??_state9hra+1)& (0+255),c
  2935  000458  0E08               	movlw	8
  2936  00045A  6E0F               	movwf	??_state9hra& (0+255),c
  2937  00045C  0E77               	movlw	119
  2938  00045E                     u2627:
  2939  00045E  2EE8               	decfsz	wreg,f,c
  2940  000460  D7FE               	bra	u2627
  2941  000462  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2942  000464  D7FC               	bra	u2627
  2943  000466  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  2944  000468  D7FA               	bra	u2627
  2945  00046A  F000               	nop	
  2946                           
  2947                           ;newmain.c: 713:     LCD_ShowString(2, "M             oM");
  2948  00046C  0EAA               	movlw	low STR_48
  2949  00046E  6E07               	movwf	LCD_ShowString@textData,c
  2950  000470  0EFF               	movlw	high STR_48
  2951  000472  6E08               	movwf	LCD_ShowString@textData+1,c
  2952  000474  0E02               	movlw	2
  2953  000476  ECDA  F008         	call	_LCD_ShowString
  2954                           
  2955                           ;newmain.c: 714:     _delay((unsigned long)((200/2 - 5)*(8E6/4000.0)));
  2956  00047A  0EF7               	movlw	247
  2957  00047C  6E0F               	movwf	??_state9hra& (0+255),c
  2958  00047E  0EC0               	movlw	192
  2959  000480                     u2637:
  2960  000480  2EE8               	decfsz	wreg,f,c
  2961  000482  D7FE               	bra	u2637
  2962  000484  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2963  000486  D7FC               	bra	u2637
  2964                           
  2965                           ;newmain.c: 716:     if (PORTAbits.RA2){
  2966  000488  A480               	btfss	3968,2,c	;volatile
  2967  00048A  D009               	goto	l2665
  2968                           
  2969                           ;newmain.c: 717:         _delay((unsigned long)((5)*(8E6/4000.0)));
  2970  00048C  0E0D               	movlw	13
  2971  00048E  6E0F               	movwf	??_state9hra& (0+255),c
  2972  000490  0EFC               	movlw	252
  2973  000492                     u2647:
  2974  000492  2EE8               	decfsz	wreg,f,c
  2975  000494  D7FE               	bra	u2647
  2976  000496  2E0F               	decfsz	??_state9hra& (0+255),f,c
  2977  000498  D7FC               	bra	u2647
  2978                           
  2979                           ;newmain.c: 718:         if(PORTAbits.RA2){}
  2980  00049A  5080               	movf	3968,w,c	;volatile
  2981  00049C  D0CE               	goto	l2715
  2982  00049E                     l2665:
  2983                           
  2984                           ;newmain.c: 720:         player2--;
  2985  00049E  0615               	decf	state9hra@player2,f,c
  2986  0004A0  A0D8               	btfss	status,0,c
  2987  0004A2  0616               	decf	state9hra@player2+1,f,c
  2988  0004A4  D0CA               	goto	l2715
  2989  0004A6                     l2667:
  2990                           
  2991                           ;newmain.c: 726:                     LCD_ShowString(1, "Zivoty: +++  +++");
  2992  0004A6  0EBC               	movlw	low STR_19
  2993  0004A8  6E07               	movwf	LCD_ShowString@textData,c
  2994  0004AA  0EFE               	movlw	high STR_19
  2995  0004AC  6E08               	movwf	LCD_ShowString@textData+1,c
  2996  0004AE  0E01               	movlw	1
  2997  0004B0  ECDA  F008         	call	_LCD_ShowString
  2998                           
  2999                           ;newmain.c: 727:                     break;
  3000  0004B4  D0D7               	goto	l2717
  3001  0004B6                     l2669:
  3002                           
  3003                           ;newmain.c: 729:                     LCD_ShowString(1, "Zivoty: +++   ++");
  3004  0004B6  0E89               	movlw	low STR_20
  3005  0004B8  6E07               	movwf	LCD_ShowString@textData,c
  3006  0004BA  0EFE               	movlw	high STR_20
  3007  0004BC  6E08               	movwf	LCD_ShowString@textData+1,c
  3008  0004BE  0E01               	movlw	1
  3009  0004C0  ECDA  F008         	call	_LCD_ShowString
  3010                           
  3011                           ;newmain.c: 730:                     break;
  3012  0004C4  D0CF               	goto	l2717
  3013  0004C6                     l2671:
  3014                           
  3015                           ;newmain.c: 732:                     LCD_ShowString(1, "Zivoty: +++    +");
  3016  0004C6  0E56               	movlw	low STR_21
  3017  0004C8  6E07               	movwf	LCD_ShowString@textData,c
  3018  0004CA  0EFE               	movlw	high STR_21
  3019  0004CC  6E08               	movwf	LCD_ShowString@textData+1,c
  3020  0004CE  0E01               	movlw	1
  3021  0004D0  ECDA  F008         	call	_LCD_ShowString
  3022                           
  3023                           ;newmain.c: 733:                     break;
  3024  0004D4  D0C7               	goto	l2717
  3025  0004D6                     l2673:
  3026                           
  3027                           ;newmain.c: 735:                     LCD_ShowString(1, "   GAME OVER!   ");
  3028  0004D6  0EAC               	movlw	low STR_22
  3029  0004D8  6E07               	movwf	LCD_ShowString@textData,c
  3030  0004DA  0EFD               	movlw	high STR_22
  3031  0004DC  6E08               	movwf	LCD_ShowString@textData+1,c
  3032  0004DE  0E01               	movlw	1
  3033  0004E0  ECDA  F008         	call	_LCD_ShowString
  3034                           
  3035                           ;newmain.c: 736:                     LCD_ShowString(2, "  Player 1 won  ");
  3036  0004E4  0E01               	movlw	low STR_23
  3037  0004E6  6E07               	movwf	LCD_ShowString@textData,c
  3038  0004E8  0EFE               	movlw	high STR_23
  3039  0004EA  6E08               	movwf	LCD_ShowString@textData+1,c
  3040  0004EC  0E02               	movlw	2
  3041  0004EE  ECDA  F008         	call	_LCD_ShowString
  3042  0004F2                     l2675:
  3043                           
  3044                           ;newmain.c: 737:                     konec = 1;
  3045  0004F2  0E00               	movlw	0
  3046  0004F4  6E14               	movwf	state9hra@konec+1,c
  3047  0004F6  0E01               	movlw	1
  3048  0004F8  6E13               	movwf	state9hra@konec,c
  3049                           
  3050                           ;newmain.c: 738:                     break;
  3051  0004FA  D0B4               	goto	l2717
  3052  0004FC                     l2679:
  3053  0004FC  C015  F00F         	movff	state9hra@player2,??_state9hra
  3054  000500  C016  F010         	movff	state9hra@player2+1,??_state9hra+1
  3055                           
  3056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3057                           ; Switch size 1, requested type "simple"
  3058                           ; Number of cases is 1, Range of values is 0 to 0
  3059                           ; switch strategies available:
  3060                           ; Name         Instructions Cycles
  3061                           ; simple_byte            4     3 (average)
  3062                           ;	Chosen strategy is simple_byte
  3063  000504  5010               	movf	??_state9hra+1,w,c
  3064  000506  0A00               	xorlw	0	; case 0
  3065  000508  A4D8               	btfss	status,2,c
  3066  00050A  D0AC               	goto	l2717
  3067                           
  3068                           ; Switch size 1, requested type "simple"
  3069                           ; Number of cases is 4, Range of values is 0 to 3
  3070                           ; switch strategies available:
  3071                           ; Name         Instructions Cycles
  3072                           ; simple_byte           13     7 (average)
  3073                           ;	Chosen strategy is simple_byte
  3074  00050C  500F               	movf	??_state9hra,w,c
  3075  00050E  0A00               	xorlw	0	; case 0
  3076  000510  B4D8               	btfsc	status,2,c
  3077  000512  D7E1               	goto	l2673
  3078  000514  0A01               	xorlw	1	; case 1
  3079  000516  B4D8               	btfsc	status,2,c
  3080  000518  D7D6               	goto	l2671
  3081  00051A  0A03               	xorlw	3	; case 2
  3082  00051C  B4D8               	btfsc	status,2,c
  3083  00051E  D7CB               	goto	l2669
  3084  000520  0A01               	xorlw	1	; case 3
  3085  000522  B4D8               	btfsc	status,2,c
  3086  000524  D7C0               	goto	l2667
  3087  000526  D09E               	goto	l2717
  3088  000528                     l2681:
  3089                           
  3090                           ;newmain.c: 744:                     LCD_ShowString(1, "Zivoty: ++   +++");
  3091  000528  0EAB               	movlw	low STR_24
  3092  00052A  6E07               	movwf	LCD_ShowString@textData,c
  3093  00052C  0EFE               	movlw	high STR_24
  3094  00052E  6E08               	movwf	LCD_ShowString@textData+1,c
  3095  000530  0E01               	movlw	1
  3096  000532  ECDA  F008         	call	_LCD_ShowString
  3097                           
  3098                           ;newmain.c: 745:                     break;
  3099  000536  D096               	goto	l2717
  3100  000538                     l2683:
  3101                           
  3102                           ;newmain.c: 747:                     LCD_ShowString(1, "Zivoty: ++    ++");
  3103  000538  0E78               	movlw	low STR_25
  3104  00053A  6E07               	movwf	LCD_ShowString@textData,c
  3105  00053C  0EFE               	movlw	high STR_25
  3106  00053E  6E08               	movwf	LCD_ShowString@textData+1,c
  3107  000540  0E01               	movlw	1
  3108  000542  ECDA  F008         	call	_LCD_ShowString
  3109                           
  3110                           ;newmain.c: 748:                     break;
  3111  000546  D08E               	goto	l2717
  3112  000548                     l2685:
  3113                           
  3114                           ;newmain.c: 750:                     LCD_ShowString(1, "Zivoty: ++     +");
  3115  000548  0E45               	movlw	low STR_26
  3116  00054A  6E07               	movwf	LCD_ShowString@textData,c
  3117  00054C  0EFE               	movlw	high STR_26
  3118  00054E  6E08               	movwf	LCD_ShowString@textData+1,c
  3119  000550  0E01               	movlw	1
  3120  000552  ECDA  F008         	call	_LCD_ShowString
  3121                           
  3122                           ;newmain.c: 751:                     break;
  3123  000556  D086               	goto	l2717
  3124  000558                     l2687:
  3125                           
  3126                           ;newmain.c: 753:                     LCD_ShowString(1, "   GAME OVER!   ");
  3127  000558  0EAC               	movlw	low STR_22
  3128  00055A  6E07               	movwf	LCD_ShowString@textData,c
  3129  00055C  0EFD               	movlw	high STR_22
  3130  00055E  6E08               	movwf	LCD_ShowString@textData+1,c
  3131  000560  0E01               	movlw	1
  3132  000562  ECDA  F008         	call	_LCD_ShowString
  3133                           
  3134                           ;newmain.c: 754:                     LCD_ShowString(2, "  Player 1 won  ");
  3135  000566  0E01               	movlw	low STR_23
  3136  000568  6E07               	movwf	LCD_ShowString@textData,c
  3137  00056A  0EFE               	movlw	high STR_23
  3138  00056C  6E08               	movwf	LCD_ShowString@textData+1,c
  3139  00056E  0E02               	movlw	2
  3140  000570  ECDA  F008         	call	_LCD_ShowString
  3141  000574  D7BE               	goto	l2675
  3142  000576                     l2693:
  3143  000576  C015  F00F         	movff	state9hra@player2,??_state9hra
  3144  00057A  C016  F010         	movff	state9hra@player2+1,??_state9hra+1
  3145                           
  3146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3147                           ; Switch size 1, requested type "simple"
  3148                           ; Number of cases is 1, Range of values is 0 to 0
  3149                           ; switch strategies available:
  3150                           ; Name         Instructions Cycles
  3151                           ; simple_byte            4     3 (average)
  3152                           ;	Chosen strategy is simple_byte
  3153  00057E  5010               	movf	??_state9hra+1,w,c
  3154  000580  0A00               	xorlw	0	; case 0
  3155  000582  A4D8               	btfss	status,2,c
  3156  000584  D06F               	goto	l2717
  3157                           
  3158                           ; Switch size 1, requested type "simple"
  3159                           ; Number of cases is 4, Range of values is 0 to 3
  3160                           ; switch strategies available:
  3161                           ; Name         Instructions Cycles
  3162                           ; simple_byte           13     7 (average)
  3163                           ;	Chosen strategy is simple_byte
  3164  000586  500F               	movf	??_state9hra,w,c
  3165  000588  0A00               	xorlw	0	; case 0
  3166  00058A  B4D8               	btfsc	status,2,c
  3167  00058C  D7E5               	goto	l2687
  3168  00058E  0A01               	xorlw	1	; case 1
  3169  000590  B4D8               	btfsc	status,2,c
  3170  000592  D7DA               	goto	l2685
  3171  000594  0A03               	xorlw	3	; case 2
  3172  000596  B4D8               	btfsc	status,2,c
  3173  000598  D7CF               	goto	l2683
  3174  00059A  0A01               	xorlw	1	; case 3
  3175  00059C  B4D8               	btfsc	status,2,c
  3176  00059E  D7C4               	goto	l2681
  3177  0005A0  D061               	goto	l2717
  3178  0005A2                     l2695:
  3179                           
  3180                           ;newmain.c: 762:                     LCD_ShowString(1, "Zivoty: +    +++");
  3181  0005A2  0E9A               	movlw	low STR_29
  3182  0005A4  6E07               	movwf	LCD_ShowString@textData,c
  3183  0005A6  0EFE               	movlw	high STR_29
  3184  0005A8  6E08               	movwf	LCD_ShowString@textData+1,c
  3185  0005AA  0E01               	movlw	1
  3186  0005AC  ECDA  F008         	call	_LCD_ShowString
  3187                           
  3188                           ;newmain.c: 763:                     break;
  3189  0005B0  D059               	goto	l2717
  3190  0005B2                     l2697:
  3191                           
  3192                           ;newmain.c: 765:                     LCD_ShowString(1, "Zivoty: +     ++");
  3193  0005B2  0E67               	movlw	low STR_30
  3194  0005B4  6E07               	movwf	LCD_ShowString@textData,c
  3195  0005B6  0EFE               	movlw	high STR_30
  3196  0005B8  6E08               	movwf	LCD_ShowString@textData+1,c
  3197  0005BA  0E01               	movlw	1
  3198  0005BC  ECDA  F008         	call	_LCD_ShowString
  3199                           
  3200                           ;newmain.c: 766:                     break;
  3201  0005C0  D051               	goto	l2717
  3202  0005C2                     l2699:
  3203                           
  3204                           ;newmain.c: 768:                     LCD_ShowString(1, "Zivoty: +      +");
  3205  0005C2  0E34               	movlw	low STR_31
  3206  0005C4  6E07               	movwf	LCD_ShowString@textData,c
  3207  0005C6  0EFE               	movlw	high STR_31
  3208  0005C8  6E08               	movwf	LCD_ShowString@textData+1,c
  3209  0005CA  0E01               	movlw	1
  3210  0005CC  ECDA  F008         	call	_LCD_ShowString
  3211                           
  3212                           ;newmain.c: 769:                     break;
  3213  0005D0  D049               	goto	l2717
  3214  0005D2                     l2701:
  3215                           
  3216                           ;newmain.c: 771:                     LCD_ShowString(1, "   GAME OVER!   ");
  3217  0005D2  0EAC               	movlw	low STR_22
  3218  0005D4  6E07               	movwf	LCD_ShowString@textData,c
  3219  0005D6  0EFD               	movlw	high STR_22
  3220  0005D8  6E08               	movwf	LCD_ShowString@textData+1,c
  3221  0005DA  0E01               	movlw	1
  3222  0005DC  ECDA  F008         	call	_LCD_ShowString
  3223                           
  3224                           ;newmain.c: 772:                     LCD_ShowString(2, "  Player 1 won  ");
  3225  0005E0  0E01               	movlw	low STR_23
  3226  0005E2  6E07               	movwf	LCD_ShowString@textData,c
  3227  0005E4  0EFE               	movlw	high STR_23
  3228  0005E6  6E08               	movwf	LCD_ShowString@textData+1,c
  3229  0005E8  0E02               	movlw	2
  3230  0005EA  ECDA  F008         	call	_LCD_ShowString
  3231  0005EE  D781               	goto	l2675
  3232  0005F0                     l2707:
  3233  0005F0  C015  F00F         	movff	state9hra@player2,??_state9hra
  3234  0005F4  C016  F010         	movff	state9hra@player2+1,??_state9hra+1
  3235                           
  3236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3237                           ; Switch size 1, requested type "simple"
  3238                           ; Number of cases is 1, Range of values is 0 to 0
  3239                           ; switch strategies available:
  3240                           ; Name         Instructions Cycles
  3241                           ; simple_byte            4     3 (average)
  3242                           ;	Chosen strategy is simple_byte
  3243  0005F8  5010               	movf	??_state9hra+1,w,c
  3244  0005FA  0A00               	xorlw	0	; case 0
  3245  0005FC  A4D8               	btfss	status,2,c
  3246  0005FE  D032               	goto	l2717
  3247                           
  3248                           ; Switch size 1, requested type "simple"
  3249                           ; Number of cases is 4, Range of values is 0 to 3
  3250                           ; switch strategies available:
  3251                           ; Name         Instructions Cycles
  3252                           ; simple_byte           13     7 (average)
  3253                           ;	Chosen strategy is simple_byte
  3254  000600  500F               	movf	??_state9hra,w,c
  3255  000602  0A00               	xorlw	0	; case 0
  3256  000604  B4D8               	btfsc	status,2,c
  3257  000606  D7E5               	goto	l2701
  3258  000608  0A01               	xorlw	1	; case 1
  3259  00060A  B4D8               	btfsc	status,2,c
  3260  00060C  D7DA               	goto	l2699
  3261  00060E  0A03               	xorlw	3	; case 2
  3262  000610  B4D8               	btfsc	status,2,c
  3263  000612  D7CF               	goto	l2697
  3264  000614  0A01               	xorlw	1	; case 3
  3265  000616  B4D8               	btfsc	status,2,c
  3266  000618  D7C4               	goto	l2695
  3267  00061A  D024               	goto	l2717
  3268  00061C                     l2709:
  3269                           
  3270                           ;newmain.c: 778:             LCD_ShowString(1, "   GAME OVER!   ");
  3271  00061C  0EAC               	movlw	low STR_22
  3272  00061E  6E07               	movwf	LCD_ShowString@textData,c
  3273  000620  0EFD               	movlw	high STR_22
  3274  000622  6E08               	movwf	LCD_ShowString@textData+1,c
  3275  000624  0E01               	movlw	1
  3276  000626  ECDA  F008         	call	_LCD_ShowString
  3277                           
  3278                           ;newmain.c: 779:             LCD_ShowString(2, "  Player 2 won  ");
  3279  00062A  0E12               	movlw	low STR_35
  3280  00062C  6E07               	movwf	LCD_ShowString@textData,c
  3281  00062E  0EFE               	movlw	high STR_35
  3282  000630  6E08               	movwf	LCD_ShowString@textData+1,c
  3283  000632  0E02               	movlw	2
  3284  000634  ECDA  F008         	call	_LCD_ShowString
  3285  000638  D75C               	goto	l2675
  3286  00063A                     l2715:
  3287  00063A  C011  F00F         	movff	state9hra@player1,??_state9hra
  3288  00063E  C012  F010         	movff	state9hra@player1+1,??_state9hra+1
  3289                           
  3290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3291                           ; Switch size 1, requested type "simple"
  3292                           ; Number of cases is 1, Range of values is 0 to 0
  3293                           ; switch strategies available:
  3294                           ; Name         Instructions Cycles
  3295                           ; simple_byte            4     3 (average)
  3296                           ;	Chosen strategy is simple_byte
  3297  000642  5010               	movf	??_state9hra+1,w,c
  3298  000644  0A00               	xorlw	0	; case 0
  3299  000646  A4D8               	btfss	status,2,c
  3300  000648  D00D               	goto	l2717
  3301                           
  3302                           ; Switch size 1, requested type "simple"
  3303                           ; Number of cases is 4, Range of values is 0 to 3
  3304                           ; switch strategies available:
  3305                           ; Name         Instructions Cycles
  3306                           ; simple_byte           13     7 (average)
  3307                           ;	Chosen strategy is simple_byte
  3308  00064A  500F               	movf	??_state9hra,w,c
  3309  00064C  0A00               	xorlw	0	; case 0
  3310  00064E  B4D8               	btfsc	status,2,c
  3311  000650  D7E5               	goto	l2709
  3312  000652  0A01               	xorlw	1	; case 1
  3313  000654  B4D8               	btfsc	status,2,c
  3314  000656  D7CC               	goto	l2707
  3315  000658  0A03               	xorlw	3	; case 2
  3316  00065A  B4D8               	btfsc	status,2,c
  3317  00065C  D78C               	goto	l2693
  3318  00065E  0A01               	xorlw	1	; case 3
  3319  000660  B4D8               	btfsc	status,2,c
  3320  000662  D74C               	goto	l2679
  3321  000664                     l2717:
  3322                           
  3323                           ;newmain.c: 783:     if (konec == 1) {
  3324  000664  0413               	decf	state9hra@konec,w,c
  3325  000666  1014               	iorwf	state9hra@konec+1,w,c
  3326  000668  B4D8               	btfsc	status,2,c
  3327  00066A  D608               	goto	u1620
  3328                           
  3329                           ;newmain.c: 788:     _delay((unsigned long)((200/2 - 5)*(8E6/4000.0)));
  3330  00066C  0EF7               	movlw	247
  3331  00066E  6E0F               	movwf	??_state9hra& (0+255),c
  3332  000670  0EC0               	movlw	192
  3333  000672                     u2657:
  3334  000672  2EE8               	decfsz	wreg,f,c
  3335  000674  D7FE               	bra	u2657
  3336  000676  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3337  000678  D7FC               	bra	u2657
  3338                           
  3339                           ;newmain.c: 789:     LCD_ShowString(2, "M            o M");
  3340  00067A  0E99               	movlw	low STR_47
  3341  00067C  6E07               	movwf	LCD_ShowString@textData,c
  3342  00067E  0EFF               	movlw	high STR_47
  3343  000680  6E08               	movwf	LCD_ShowString@textData+1,c
  3344  000682  0E02               	movlw	2
  3345  000684  ECDA  F008         	call	_LCD_ShowString
  3346                           
  3347                           ;newmain.c: 790:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3348  000688  0E03               	movlw	3
  3349  00068A  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3350  00068C  0E08               	movlw	8
  3351  00068E  6E0F               	movwf	??_state9hra& (0+255),c
  3352  000690  0E77               	movlw	119
  3353  000692                     u2667:
  3354  000692  2EE8               	decfsz	wreg,f,c
  3355  000694  D7FE               	bra	u2667
  3356  000696  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3357  000698  D7FC               	bra	u2667
  3358  00069A  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3359  00069C  D7FA               	bra	u2667
  3360  00069E  F000               	nop	
  3361                           
  3362                           ;newmain.c: 791:     LCD_ShowString(2, "M           o  M");
  3363  0006A0  0E88               	movlw	low STR_46
  3364  0006A2  6E07               	movwf	LCD_ShowString@textData,c
  3365  0006A4  0EFF               	movlw	high STR_46
  3366  0006A6  6E08               	movwf	LCD_ShowString@textData+1,c
  3367  0006A8  0E02               	movlw	2
  3368  0006AA  ECDA  F008         	call	_LCD_ShowString
  3369                           
  3370                           ;newmain.c: 792:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3371  0006AE  0E03               	movlw	3
  3372  0006B0  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3373  0006B2  0E08               	movlw	8
  3374  0006B4  6E0F               	movwf	??_state9hra& (0+255),c
  3375  0006B6  0E77               	movlw	119
  3376  0006B8                     u2677:
  3377  0006B8  2EE8               	decfsz	wreg,f,c
  3378  0006BA  D7FE               	bra	u2677
  3379  0006BC  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3380  0006BE  D7FC               	bra	u2677
  3381  0006C0  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3382  0006C2  D7FA               	bra	u2677
  3383  0006C4  F000               	nop	
  3384                           
  3385                           ;newmain.c: 793:     LCD_ShowString(2, "M          o   M");
  3386  0006C6  0E77               	movlw	low STR_45
  3387  0006C8  6E07               	movwf	LCD_ShowString@textData,c
  3388  0006CA  0EFF               	movlw	high STR_45
  3389  0006CC  6E08               	movwf	LCD_ShowString@textData+1,c
  3390  0006CE  0E02               	movlw	2
  3391  0006D0  ECDA  F008         	call	_LCD_ShowString
  3392                           
  3393                           ;newmain.c: 794:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3394  0006D4  0E03               	movlw	3
  3395  0006D6  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3396  0006D8  0E08               	movlw	8
  3397  0006DA  6E0F               	movwf	??_state9hra& (0+255),c
  3398  0006DC  0E77               	movlw	119
  3399  0006DE                     u2687:
  3400  0006DE  2EE8               	decfsz	wreg,f,c
  3401  0006E0  D7FE               	bra	u2687
  3402  0006E2  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3403  0006E4  D7FC               	bra	u2687
  3404  0006E6  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3405  0006E8  D7FA               	bra	u2687
  3406  0006EA  F000               	nop	
  3407                           
  3408                           ;newmain.c: 795:     LCD_ShowString(2, "M         o    M");
  3409  0006EC  0E66               	movlw	low STR_44
  3410  0006EE  6E07               	movwf	LCD_ShowString@textData,c
  3411  0006F0  0EFF               	movlw	high STR_44
  3412  0006F2  6E08               	movwf	LCD_ShowString@textData+1,c
  3413  0006F4  0E02               	movlw	2
  3414  0006F6  ECDA  F008         	call	_LCD_ShowString
  3415                           
  3416                           ;newmain.c: 796:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3417  0006FA  0E03               	movlw	3
  3418  0006FC  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3419  0006FE  0E08               	movlw	8
  3420  000700  6E0F               	movwf	??_state9hra& (0+255),c
  3421  000702  0E77               	movlw	119
  3422  000704                     u2697:
  3423  000704  2EE8               	decfsz	wreg,f,c
  3424  000706  D7FE               	bra	u2697
  3425  000708  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3426  00070A  D7FC               	bra	u2697
  3427  00070C  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3428  00070E  D7FA               	bra	u2697
  3429  000710  F000               	nop	
  3430                           
  3431                           ;newmain.c: 797:     LCD_ShowString(2, "M        o     M");
  3432  000712  0E55               	movlw	low STR_43
  3433  000714  6E07               	movwf	LCD_ShowString@textData,c
  3434  000716  0EFF               	movlw	high STR_43
  3435  000718  6E08               	movwf	LCD_ShowString@textData+1,c
  3436  00071A  0E02               	movlw	2
  3437  00071C  ECDA  F008         	call	_LCD_ShowString
  3438                           
  3439                           ;newmain.c: 798:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3440  000720  0E03               	movlw	3
  3441  000722  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3442  000724  0E08               	movlw	8
  3443  000726  6E0F               	movwf	??_state9hra& (0+255),c
  3444  000728  0E77               	movlw	119
  3445  00072A                     u2707:
  3446  00072A  2EE8               	decfsz	wreg,f,c
  3447  00072C  D7FE               	bra	u2707
  3448  00072E  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3449  000730  D7FC               	bra	u2707
  3450  000732  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3451  000734  D7FA               	bra	u2707
  3452  000736  F000               	nop	
  3453                           
  3454                           ;newmain.c: 799:     LCD_ShowString(2, "M       o      M");
  3455  000738  0E44               	movlw	low STR_42
  3456  00073A  6E07               	movwf	LCD_ShowString@textData,c
  3457  00073C  0EFF               	movlw	high STR_42
  3458  00073E  6E08               	movwf	LCD_ShowString@textData+1,c
  3459  000740  0E02               	movlw	2
  3460  000742  ECDA  F008         	call	_LCD_ShowString
  3461                           
  3462                           ;newmain.c: 800:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3463  000746  0E03               	movlw	3
  3464  000748  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3465  00074A  0E08               	movlw	8
  3466  00074C  6E0F               	movwf	??_state9hra& (0+255),c
  3467  00074E  0E77               	movlw	119
  3468  000750                     u2717:
  3469  000750  2EE8               	decfsz	wreg,f,c
  3470  000752  D7FE               	bra	u2717
  3471  000754  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3472  000756  D7FC               	bra	u2717
  3473  000758  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3474  00075A  D7FA               	bra	u2717
  3475  00075C  F000               	nop	
  3476                           
  3477                           ;newmain.c: 801:     LCD_ShowString(2, "M      o       M");
  3478  00075E  0E33               	movlw	low STR_41
  3479  000760  6E07               	movwf	LCD_ShowString@textData,c
  3480  000762  0EFF               	movlw	high STR_41
  3481  000764  6E08               	movwf	LCD_ShowString@textData+1,c
  3482  000766  0E02               	movlw	2
  3483  000768  ECDA  F008         	call	_LCD_ShowString
  3484                           
  3485                           ;newmain.c: 802:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3486  00076C  0E03               	movlw	3
  3487  00076E  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3488  000770  0E08               	movlw	8
  3489  000772  6E0F               	movwf	??_state9hra& (0+255),c
  3490  000774  0E77               	movlw	119
  3491  000776                     u2727:
  3492  000776  2EE8               	decfsz	wreg,f,c
  3493  000778  D7FE               	bra	u2727
  3494  00077A  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3495  00077C  D7FC               	bra	u2727
  3496  00077E  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3497  000780  D7FA               	bra	u2727
  3498  000782  F000               	nop	
  3499                           
  3500                           ;newmain.c: 803:     LCD_ShowString(2, "M     o        M");
  3501  000784  0E22               	movlw	low STR_40
  3502  000786  6E07               	movwf	LCD_ShowString@textData,c
  3503  000788  0EFF               	movlw	high STR_40
  3504  00078A  6E08               	movwf	LCD_ShowString@textData+1,c
  3505  00078C  0E02               	movlw	2
  3506  00078E  ECDA  F008         	call	_LCD_ShowString
  3507                           
  3508                           ;newmain.c: 804:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3509  000792  0E03               	movlw	3
  3510  000794  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3511  000796  0E08               	movlw	8
  3512  000798  6E0F               	movwf	??_state9hra& (0+255),c
  3513  00079A  0E77               	movlw	119
  3514  00079C                     u2737:
  3515  00079C  2EE8               	decfsz	wreg,f,c
  3516  00079E  D7FE               	bra	u2737
  3517  0007A0  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3518  0007A2  D7FC               	bra	u2737
  3519  0007A4  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3520  0007A6  D7FA               	bra	u2737
  3521  0007A8  F000               	nop	
  3522                           
  3523                           ;newmain.c: 805:     LCD_ShowString(2, "M    o         M");
  3524  0007AA  0E11               	movlw	low STR_39
  3525  0007AC  6E07               	movwf	LCD_ShowString@textData,c
  3526  0007AE  0EFF               	movlw	high STR_39
  3527  0007B0  6E08               	movwf	LCD_ShowString@textData+1,c
  3528  0007B2  0E02               	movlw	2
  3529  0007B4  ECDA  F008         	call	_LCD_ShowString
  3530                           
  3531                           ;newmain.c: 806:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3532  0007B8  0E03               	movlw	3
  3533  0007BA  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3534  0007BC  0E08               	movlw	8
  3535  0007BE  6E0F               	movwf	??_state9hra& (0+255),c
  3536  0007C0  0E77               	movlw	119
  3537  0007C2                     u2747:
  3538  0007C2  2EE8               	decfsz	wreg,f,c
  3539  0007C4  D7FE               	bra	u2747
  3540  0007C6  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3541  0007C8  D7FC               	bra	u2747
  3542  0007CA  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3543  0007CC  D7FA               	bra	u2747
  3544  0007CE  F000               	nop	
  3545                           
  3546                           ;newmain.c: 807:     LCD_ShowString(2, "M   o          M");
  3547  0007D0  0E00               	movlw	low STR_38
  3548  0007D2  6E07               	movwf	LCD_ShowString@textData,c
  3549  0007D4  0EFF               	movlw	high STR_38
  3550  0007D6  6E08               	movwf	LCD_ShowString@textData+1,c
  3551  0007D8  0E02               	movlw	2
  3552  0007DA  ECDA  F008         	call	_LCD_ShowString
  3553                           
  3554                           ;newmain.c: 808:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3555  0007DE  0E03               	movlw	3
  3556  0007E0  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3557  0007E2  0E08               	movlw	8
  3558  0007E4  6E0F               	movwf	??_state9hra& (0+255),c
  3559  0007E6  0E77               	movlw	119
  3560  0007E8                     u2757:
  3561  0007E8  2EE8               	decfsz	wreg,f,c
  3562  0007EA  D7FE               	bra	u2757
  3563  0007EC  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3564  0007EE  D7FC               	bra	u2757
  3565  0007F0  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3566  0007F2  D7FA               	bra	u2757
  3567  0007F4  F000               	nop	
  3568                           
  3569                           ;newmain.c: 809:     LCD_ShowString(2, "M  o           M");
  3570  0007F6  0EEF               	movlw	low STR_37
  3571  0007F8  6E07               	movwf	LCD_ShowString@textData,c
  3572  0007FA  0EFE               	movlw	high STR_37
  3573  0007FC  6E08               	movwf	LCD_ShowString@textData+1,c
  3574  0007FE  0E02               	movlw	2
  3575  000800  ECDA  F008         	call	_LCD_ShowString
  3576                           
  3577                           ;newmain.c: 810:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3578  000804  0E03               	movlw	3
  3579  000806  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3580  000808  0E08               	movlw	8
  3581  00080A  6E0F               	movwf	??_state9hra& (0+255),c
  3582  00080C  0E77               	movlw	119
  3583  00080E                     u2767:
  3584  00080E  2EE8               	decfsz	wreg,f,c
  3585  000810  D7FE               	bra	u2767
  3586  000812  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3587  000814  D7FC               	bra	u2767
  3588  000816  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3589  000818  D7FA               	bra	u2767
  3590  00081A  F000               	nop	
  3591                           
  3592                           ;newmain.c: 811:     LCD_ShowString(2, "M o            M");
  3593  00081C  0EDE               	movlw	low STR_36
  3594  00081E  6E07               	movwf	LCD_ShowString@textData,c
  3595  000820  0EFE               	movlw	high STR_36
  3596  000822  6E08               	movwf	LCD_ShowString@textData+1,c
  3597  000824  0E02               	movlw	2
  3598  000826  ECDA  F008         	call	_LCD_ShowString
  3599                           
  3600                           ;newmain.c: 812:     _delay((unsigned long)((200)*(8E6/4000.0)));
  3601  00082A  0E03               	movlw	3
  3602  00082C  6E10               	movwf	(??_state9hra+1)& (0+255),c
  3603  00082E  0E08               	movlw	8
  3604  000830  6E0F               	movwf	??_state9hra& (0+255),c
  3605  000832  0E77               	movlw	119
  3606  000834                     u2777:
  3607  000834  2EE8               	decfsz	wreg,f,c
  3608  000836  D7FE               	bra	u2777
  3609  000838  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3610  00083A  D7FC               	bra	u2777
  3611  00083C  2E10               	decfsz	(??_state9hra+1)& (0+255),f,c
  3612  00083E  D7FA               	bra	u2777
  3613  000840  F000               	nop	
  3614                           
  3615                           ;newmain.c: 813:     LCD_ShowString(2, "Mo             M");
  3616  000842  0ECD               	movlw	low STR_78
  3617  000844  6E07               	movwf	LCD_ShowString@textData,c
  3618  000846  0EFE               	movlw	high STR_78
  3619  000848  6E08               	movwf	LCD_ShowString@textData+1,c
  3620  00084A  0E02               	movlw	2
  3621  00084C  ECDA  F008         	call	_LCD_ShowString
  3622                           
  3623                           ;newmain.c: 814:     _delay((unsigned long)((200/2 - 5)*(8E6/4000.0)));
  3624  000850  0EF7               	movlw	247
  3625  000852  6E0F               	movwf	??_state9hra& (0+255),c
  3626  000854  0EC0               	movlw	192
  3627  000856                     u2787:
  3628  000856  2EE8               	decfsz	wreg,f,c
  3629  000858  D7FE               	bra	u2787
  3630  00085A  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3631  00085C  D7FC               	bra	u2787
  3632                           
  3633                           ;newmain.c: 816:     if (PORTCbits.RC0){
  3634  00085E  A082               	btfss	3970,0,c	;volatile
  3635  000860  D009               	goto	l2765
  3636                           
  3637                           ;newmain.c: 817:         _delay((unsigned long)((5)*(8E6/4000.0)));
  3638  000862  0E0D               	movlw	13
  3639  000864  6E0F               	movwf	??_state9hra& (0+255),c
  3640  000866  0EFC               	movlw	252
  3641  000868                     u2797:
  3642  000868  2EE8               	decfsz	wreg,f,c
  3643  00086A  D7FE               	bra	u2797
  3644  00086C  2E0F               	decfsz	??_state9hra& (0+255),f,c
  3645  00086E  D7FC               	bra	u2797
  3646                           
  3647                           ;newmain.c: 818:         if(PORTCbits.RC0){}
  3648  000870  5082               	movf	3970,w,c	;volatile
  3649  000872  D4EB               	goto	l2615
  3650  000874                     l2765:
  3651                           
  3652                           ;newmain.c: 820:         player1--;
  3653  000874  0611               	decf	state9hra@player1,f,c
  3654  000876  A0D8               	btfss	status,0,c
  3655  000878  0612               	decf	state9hra@player1+1,f,c
  3656  00087A  D4E7               	goto	l2615
  3657  00087C                     l2767:
  3658                           
  3659                           ;newmain.c: 823:     return 4;
  3660  00087C  0E00               	movlw	0
  3661  00087E  6E0E               	movwf	?_state9hra+1,c
  3662  000880  0E04               	movlw	4
  3663  000882  6E0D               	movwf	?_state9hra,c
  3664  000884  0012               	return		;funcret
  3665  000886                     __end_of_state9hra:
  3666                           	opt callstack 0
  3667                           
  3668 ;; *************** function _state8adc *****************
  3669 ;; Defined at:
  3670 ;;		line 586 in file "newmain.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  led_state       1   13[COMRAM] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;Total ram usage:        2 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    3
  3691 ;; This function calls:
  3692 ;;		_LCD_ShowString
  3693 ;;		_driveLED
  3694 ;; This function is called by:
  3695 ;;		_FSM
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text5
  3700  000EDA                     __ptext5:
  3701                           	opt callstack 0
  3702  000EDA                     _state8adc:
  3703                           	opt callstack 26
  3704                           
  3705                           ;newmain.c: 587:     ADCON2bits.ADFM = 1;
  3706                           
  3707                           ;incstack = 0
  3708  000EDA  8EC0               	bsf	4032,7,c	;volatile
  3709                           
  3710                           ;newmain.c: 588:     ADCON0bits.CHS = 0b00100;
  3711  000EDC  50C2               	movf	4034,w,c	;volatile
  3712  000EDE  0B83               	andlw	-125
  3713  000EE0  0910               	iorlw	16
  3714  000EE2  6EC2               	movwf	4034,c	;volatile
  3715                           
  3716                           ;newmain.c: 590:     LCD_ShowString(1, "State: ADC      ");
  3717  000EE4  0E68               	movlw	low STR_17
  3718  000EE6  6E07               	movwf	LCD_ShowString@textData,c
  3719  000EE8  0EFD               	movlw	high STR_17
  3720  000EEA  6E08               	movwf	LCD_ShowString@textData+1,c
  3721  000EEC  0E01               	movlw	1
  3722  000EEE  ECDA  F008         	call	_LCD_ShowString
  3723                           
  3724                           ;newmain.c: 591:     LCD_ShowString(2, "       bargraph ");
  3725  000EF2  0E23               	movlw	low STR_18
  3726  000EF4  6E07               	movwf	LCD_ShowString@textData,c
  3727  000EF6  0EFE               	movlw	high STR_18
  3728  000EF8  6E08               	movwf	LCD_ShowString@textData+1,c
  3729  000EFA  0E02               	movlw	2
  3730  000EFC  ECDA  F008         	call	_LCD_ShowString
  3731                           
  3732                           ;newmain.c: 593:     uint8_t led_state = 0;
  3733  000F00  0E00               	movlw	0
  3734  000F02  6E0E               	movwf	state8adc@led_state,c
  3735                           
  3736                           ;newmain.c: 595:     ADCON0bits.GODONE = 1;
  3737  000F04  82C2               	bsf	4034,1,c	;volatile
  3738                           
  3739                           ;newmain.c: 597:         if (pot1_val < 145) {
  3740  000F06  5021               	movf	_pot1_val+1,w,c	;volatile
  3741  000F08  E106               	bnz	l2527
  3742  000F0A  0E91               	movlw	145
  3743  000F0C  5C20               	subwf	_pot1_val,w,c	;volatile
  3744  000F0E  B0D8               	btfsc	status,0,c
  3745  000F10  D002               	goto	l2527
  3746                           
  3747                           ;newmain.c: 598:             led_state = 0;
  3748  000F12  0E00               	movlw	0
  3749  000F14  D04D               	goto	L6
  3750  000F16                     l2527:
  3751  000F16  5021               	movf	_pot1_val+1,w,c	;volatile
  3752  000F18  E104               	bnz	u1510
  3753  000F1A  0E91               	movlw	145
  3754  000F1C  5C20               	subwf	_pot1_val,w,c	;volatile
  3755  000F1E  A0D8               	btfss	status,0,c
  3756  000F20  D008               	goto	l2533
  3757  000F22                     u1510:
  3758  000F22  0E22               	movlw	34
  3759  000F24  5C20               	subwf	_pot1_val,w,c	;volatile
  3760  000F26  0E01               	movlw	1
  3761  000F28  5821               	subwfb	_pot1_val+1,w,c	;volatile
  3762  000F2A  B0D8               	btfsc	status,0,c
  3763  000F2C  D002               	goto	l2533
  3764                           
  3765                           ;newmain.c: 600:             led_state = 0b100000;
  3766  000F2E  0E20               	movlw	32
  3767  000F30  D03F               	goto	L6
  3768  000F32                     l2533:
  3769  000F32  0E22               	movlw	34
  3770  000F34  5C20               	subwf	_pot1_val,w,c	;volatile
  3771  000F36  0E01               	movlw	1
  3772  000F38  5821               	subwfb	_pot1_val+1,w,c	;volatile
  3773  000F3A  A0D8               	btfss	status,0,c
  3774  000F3C  D008               	goto	l2539
  3775  000F3E  0EB3               	movlw	179
  3776  000F40  5C20               	subwf	_pot1_val,w,c	;volatile
  3777  000F42  0E01               	movlw	1
  3778  000F44  5821               	subwfb	_pot1_val+1,w,c	;volatile
  3779  000F46  B0D8               	btfsc	status,0,c
  3780  000F48  D002               	goto	l2539
  3781                           
  3782                           ;newmain.c: 602:             led_state = 0b110000;
  3783  000F4A  0E30               	movlw	48
  3784  000F4C  D031               	goto	L6
  3785  000F4E                     l2539:
  3786  000F4E  0EB3               	movlw	179
  3787  000F50  5C20               	subwf	_pot1_val,w,c	;volatile
  3788  000F52  0E01               	movlw	1
  3789  000F54  5821               	subwfb	_pot1_val+1,w,c	;volatile
  3790  000F56  A0D8               	btfss	status,0,c
  3791  000F58  D008               	goto	l2545
  3792  000F5A  0E49               	movlw	73
  3793  000F5C  5C20               	subwf	_pot1_val,w,c	;volatile
  3794  000F5E  0E02               	movlw	2
  3795  000F60  5821               	subwfb	_pot1_val+1,w,c	;volatile
  3796  000F62  B0D8               	btfsc	status,0,c
  3797  000F64  D002               	goto	l2545
  3798                           
  3799                           ;newmain.c: 604:             led_state = 0b111000;
  3800  000F66  0E38               	movlw	56
  3801  000F68  D023               	goto	L6
  3802  000F6A                     l2545:
  3803  000F6A  0E49               	movlw	73
  3804  000F6C  5C20               	subwf	_pot1_val,w,c	;volatile
  3805  000F6E  0E02               	movlw	2
  3806  000F70  5821               	subwfb	_pot1_val+1,w,c	;volatile
  3807  000F72  A0D8               	btfss	status,0,c
  3808  000F74  D008               	goto	l2551
  3809  000F76  0EDA               	movlw	218
  3810  000F78  5C20               	subwf	_pot1_val,w,c	;volatile
  3811  000F7A  0E02               	movlw	2
  3812  000F7C  5821               	subwfb	_pot1_val+1,w,c	;volatile
  3813  000F7E  B0D8               	btfsc	status,0,c
  3814  000F80  D002               	goto	l2551
  3815                           
  3816                           ;newmain.c: 606:             led_state = 0b111100;
  3817  000F82  0E3C               	movlw	60
  3818  000F84  D015               	goto	L6
  3819  000F86                     l2551:
  3820  000F86  0EDA               	movlw	218
  3821  000F88  5C20               	subwf	_pot1_val,w,c	;volatile
  3822  000F8A  0E02               	movlw	2
  3823  000F8C  5821               	subwfb	_pot1_val+1,w,c	;volatile
  3824  000F8E  A0D8               	btfss	status,0,c
  3825  000F90  D008               	goto	l2557
  3826  000F92  0E6B               	movlw	107
  3827  000F94  5C20               	subwf	_pot1_val,w,c	;volatile
  3828  000F96  0E03               	movlw	3
  3829  000F98  5821               	subwfb	_pot1_val+1,w,c	;volatile
  3830  000F9A  B0D8               	btfsc	status,0,c
  3831  000F9C  D002               	goto	l2557
  3832                           
  3833                           ;newmain.c: 608:             led_state = 0b111110;
  3834  000F9E  0E3E               	movlw	62
  3835  000FA0  D007               	goto	L6
  3836  000FA2                     l2557:
  3837  000FA2  0E6B               	movlw	107
  3838  000FA4  5C20               	subwf	_pot1_val,w,c	;volatile
  3839  000FA6  0E03               	movlw	3
  3840  000FA8  5821               	subwfb	_pot1_val+1,w,c	;volatile
  3841  000FAA  A0D8               	btfss	status,0,c
  3842  000FAC  D002               	goto	l327
  3843                           
  3844                           ;newmain.c: 610:             led_state = 0b111111;
  3845  000FAE  0E3F               	movlw	63
  3846  000FB0                     L6:
  3847  000FB0  6E0E               	movwf	state8adc@led_state,c
  3848  000FB2                     l327:
  3849                           
  3850                           ;newmain.c: 613:         driveLED(led_state);
  3851  000FB2  500E               	movf	state8adc@led_state,w,c
  3852  000FB4  EC0E  F009         	call	_driveLED
  3853                           
  3854                           ;newmain.c: 614:         _delay((unsigned long)((50)*(8E6/4000.0)));
  3855  000FB8  0E82               	movlw	130
  3856  000FBA  6E0D               	movwf	??_state8adc& (0+255),c
  3857  000FBC  0EDE               	movlw	222
  3858  000FBE                     u2807:
  3859  000FBE  2EE8               	decfsz	wreg,f,c
  3860  000FC0  D7FE               	bra	u2807
  3861  000FC2  2E0D               	decfsz	??_state8adc& (0+255),f,c
  3862  000FC4  D7FC               	bra	u2807
  3863  000FC6  0012               	return		;funcret
  3864  000FC8                     __end_of_state8adc:
  3865                           	opt callstack 0
  3866                           
  3867 ;; *************** function _state7pwm *****************
  3868 ;; Defined at:
  3869 ;;		line 573 in file "newmain.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    3
  3890 ;; This function calls:
  3891 ;;		_LCD_ShowString
  3892 ;; This function is called by:
  3893 ;;		_FSM
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text6
  3898  00125E                     __ptext6:
  3899                           	opt callstack 0
  3900  00125E                     _state7pwm:
  3901                           	opt callstack 26
  3902                           
  3903                           ;newmain.c: 575:     ADCON2bits.ADFM = 0;
  3904                           
  3905                           ;incstack = 0
  3906  00125E  9EC0               	bcf	4032,7,c	;volatile
  3907                           
  3908                           ;newmain.c: 576:     ADCON0bits.CHS = 5;
  3909  001260  50C2               	movf	4034,w,c	;volatile
  3910  001262  0B83               	andlw	-125
  3911  001264  0914               	iorlw	20
  3912  001266  6EC2               	movwf	4034,c	;volatile
  3913                           
  3914                           ;newmain.c: 578:     LCD_ShowString(1, "State:motorSpeed");
  3915  001268  0ECC               	movlw	low STR_15
  3916  00126A  6E07               	movwf	LCD_ShowString@textData,c
  3917  00126C  0EFF               	movlw	high STR_15
  3918  00126E  6E08               	movwf	LCD_ShowString@textData+1,c
  3919  001270  0E01               	movlw	1
  3920  001272  ECDA  F008         	call	_LCD_ShowString
  3921                           
  3922                           ;newmain.c: 579:     LCD_ShowString(2, "State:motorSpeed");
  3923  001276  0ECC               	movlw	low STR_15
  3924  001278  6E07               	movwf	LCD_ShowString@textData,c
  3925  00127A  0EFF               	movlw	high STR_15
  3926  00127C  6E08               	movwf	LCD_ShowString@textData+1,c
  3927  00127E  0E02               	movlw	2
  3928  001280  ECDA  F008         	call	_LCD_ShowString
  3929                           
  3930                           ;newmain.c: 581:         GODONE = 1;
  3931  001284  82C2               	bsf	4034,1,c	;volatile
  3932  001286                     l314:
  3933  001286  B2C2               	btfsc	4034,1,c	;volatile
  3934  001288  D7FE               	goto	l314
  3935                           
  3936                           ;newmain.c: 583:         CCPR1L = ADRESH;
  3937  00128A  CFC4 FFBE          	movff	4036,4030	;volatile
  3938  00128E  0012               	return		;funcret
  3939  001290                     __end_of_state7pwm:
  3940                           	opt callstack 0
  3941                           
  3942 ;; *************** function _state6kal *****************
  3943 ;; Defined at:
  3944 ;;		line 493 in file "newmain.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  i               2   20[COMRAM] int 
  3949 ;;  i               2   18[COMRAM] int 
  3950 ;;  dekadicky       2   26[COMRAM] int 
  3951 ;;  druhy           2   24[COMRAM] int 
  3952 ;;  prvni           2   22[COMRAM] int 
  3953 ;;  zacatekPrvni    2   16[COMRAM] int 
  3954 ;;  aktualni        1   28[COMRAM] unsigned char 
  3955 ;;  operace         1   15[COMRAM] unsigned char 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;Total ram usage:       16 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    3
  3972 ;; This function calls:
  3973 ;;		_LCD_ShowString
  3974 ;;		___awdiv
  3975 ;;		___wmul
  3976 ;; This function is called by:
  3977 ;;		_FSM
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text7
  3982  000D1A                     __ptext7:
  3983                           	opt callstack 0
  3984  000D1A                     _state6kal:
  3985                           	opt callstack 26
  3986                           
  3987                           ;newmain.c: 495:     LCD_ShowString(1, "State:kalkulacka");
  3988                           
  3989                           ;incstack = 0
  3990  000D1A  0EBB               	movlw	low STR_13
  3991  000D1C  6E07               	movwf	LCD_ShowString@textData,c
  3992  000D1E  0EFF               	movlw	high STR_13
  3993  000D20  6E08               	movwf	LCD_ShowString@textData+1,c
  3994  000D22  0E01               	movlw	1
  3995  000D24  ECDA  F008         	call	_LCD_ShowString
  3996                           
  3997                           ;newmain.c: 496:     LCD_ShowString(2, "State:kalkulacka");
  3998  000D28  0EBB               	movlw	low STR_13
  3999  000D2A  6E07               	movwf	LCD_ShowString@textData,c
  4000  000D2C  0EFF               	movlw	high STR_13
  4001  000D2E  6E08               	movwf	LCD_ShowString@textData+1,c
  4002  000D30  0E02               	movlw	2
  4003  000D32  ECDA  F008         	call	_LCD_ShowString
  4004                           
  4005                           ;newmain.c: 500:     char operace, aktualni;;newmain.c: 502:     int zacatekPrvniho, dek
      +                          adicky = 1, prvni = 0, druhy = 0;
  4006  000D36  0E00               	movlw	0
  4007  000D38  6E1C               	movwf	state6kal@dekadicky+1,c
  4008  000D3A  0E01               	movlw	1
  4009  000D3C  6E1B               	movwf	state6kal@dekadicky,c
  4010  000D3E  0E00               	movlw	0
  4011  000D40  6E18               	movwf	state6kal@prvni+1,c
  4012  000D42  0E00               	movlw	0
  4013  000D44  6E17               	movwf	state6kal@prvni,c
  4014  000D46  0E00               	movlw	0
  4015  000D48  6E1A               	movwf	state6kal@druhy+1,c
  4016  000D4A  0E00               	movlw	0
  4017  000D4C  6E19               	movwf	state6kal@druhy,c
  4018  000D4E                     l2433:
  4019                           
  4020                           ;newmain.c: 527:         if (message.full){
  4021  000D4E  0100               	movlb	0	; () banked
  4022  000D50  51B1               	movf	(_message+81)& (0+255),w,b	;volatile
  4023  000D52  B4D8               	btfsc	status,2,c
  4024  000D54  D7FC               	goto	l2433
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;newmain.c: 528:             message.full = 0;
  4028  000D56  0E00               	movlw	0
  4029  000D58  6FB1               	movwf	(_message+81)& (0+255),b	;volatile
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;newmain.c: 529:             zacatekPrvniho = message.length;
  4033  000D5A  C0B0  F011         	movff	_message+80,state6kal@zacatekPrvniho	;volatile
  4034  000D5E  6A12               	clrf	state6kal@zacatekPrvniho+1,c
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;newmain.c: 530:             for(int i = message.length; i >= 0; i--){
  4038  000D60  C0B0  F013         	movff	_message+80,state6kal@i	;volatile
  4039  000D64  6A14               	clrf	state6kal@i+1,c
  4040  000D66  D042               	goto	L8
  4041  000D68                     l2445:
  4042                           
  4043                           ;newmain.c: 531:                 aktualni = message.data[i];
  4044  000D68  0E60               	movlw	low _message
  4045  000D6A  2413               	addwf	state6kal@i,w,c
  4046  000D6C  6ED9               	movwf	fsr2l,c
  4047  000D6E  0E00               	movlw	high _message
  4048  000D70  2014               	addwfc	state6kal@i+1,w,c
  4049  000D72  6EDA               	movwf	fsr2h,c
  4050  000D74  50DF               	movf	indf2,w,c
  4051  000D76  6E1D               	movwf	state6kal@aktualni,c
  4052                           
  4053                           ;newmain.c: 532:                 if((aktualni == '+') | (aktualni == '-') | (aktualni ==
      +                           '*') | (aktualni == '/')){
  4054  000D78  0E2B               	movlw	43
  4055  000D7A  181D               	xorwf	state6kal@aktualni,w,c
  4056  000D7C  B4D8               	btfsc	status,2,c
  4057  000D7E  D00C               	goto	u1460
  4058  000D80  0E2D               	movlw	45
  4059  000D82  181D               	xorwf	state6kal@aktualni,w,c
  4060  000D84  B4D8               	btfsc	status,2,c
  4061  000D86  D008               	goto	u1460
  4062  000D88  0E2A               	movlw	42
  4063  000D8A  181D               	xorwf	state6kal@aktualni,w,c
  4064  000D8C  B4D8               	btfsc	status,2,c
  4065  000D8E  D004               	goto	u1460
  4066  000D90  0E2F               	movlw	47
  4067  000D92  181D               	xorwf	state6kal@aktualni,w,c
  4068  000D94  A4D8               	btfss	status,2,c
  4069  000D96  D006               	goto	l2459
  4070  000D98                     u1460:
  4071                           
  4072                           ;newmain.c: 533:                     operace = aktualni;
  4073  000D98  C01D  F010         	movff	state6kal@aktualni,state6kal@operace
  4074                           
  4075                           ;newmain.c: 535:                     zacatekPrvniho--;
  4076  000D9C  0611               	decf	state6kal@zacatekPrvniho,f,c
  4077  000D9E  A0D8               	btfss	status,0,c
  4078  000DA0  0612               	decf	state6kal@zacatekPrvniho+1,f,c
  4079                           
  4080                           ;newmain.c: 536:                     break;
  4081  000DA2  D026               	goto	u1470
  4082  000DA4                     l2459:
  4083                           
  4084                           ;newmain.c: 538:                     aktualni = aktualni - '0';
  4085  000DA4  501D               	movf	state6kal@aktualni,w,c
  4086  000DA6  0FD0               	addlw	208
  4087  000DA8  6E1D               	movwf	state6kal@aktualni,c
  4088                           
  4089                           ;newmain.c: 539:                     druhy += dekadicky*aktualni;
  4090  000DAA  C01D  F006         	movff	state6kal@aktualni,___wmul@multiplier
  4091  000DAE  6A07               	clrf	___wmul@multiplier+1,c
  4092  000DB0  C01B  F008         	movff	state6kal@dekadicky,___wmul@multiplicand
  4093  000DB4  C01C  F009         	movff	state6kal@dekadicky+1,___wmul@multiplicand+1
  4094  000DB8  EC48  F009         	call	___wmul	;wreg free
  4095  000DBC  5006               	movf	?___wmul,w,c
  4096  000DBE  2619               	addwf	state6kal@druhy,f,c
  4097  000DC0  5007               	movf	?___wmul+1,w,c
  4098  000DC2  221A               	addwfc	state6kal@druhy+1,f,c
  4099                           
  4100                           ;newmain.c: 540:                     dekadicky *= 10;
  4101  000DC4  C01B  F006         	movff	state6kal@dekadicky,___wmul@multiplier
  4102  000DC8  C01C  F007         	movff	state6kal@dekadicky+1,___wmul@multiplier+1
  4103  000DCC  0E00               	movlw	0
  4104  000DCE  6E09               	movwf	___wmul@multiplicand+1,c
  4105  000DD0  0E0A               	movlw	10
  4106  000DD2  6E08               	movwf	___wmul@multiplicand,c
  4107  000DD4  EC48  F009         	call	___wmul	;wreg free
  4108  000DD8  C006  F01B         	movff	?___wmul,state6kal@dekadicky
  4109  000DDC  C007  F01C         	movff	?___wmul+1,state6kal@dekadicky+1
  4110                           
  4111                           ;newmain.c: 541:                     zacatekPrvniho--;
  4112  000DE0  0611               	decf	state6kal@zacatekPrvniho,f,c
  4113  000DE2  A0D8               	btfss	status,0,c
  4114  000DE4  0612               	decf	state6kal@zacatekPrvniho+1,f,c
  4115                           
  4116                           ;newmain.c: 543:             }
  4117  000DE6  0613               	decf	state6kal@i,f,c
  4118  000DE8  A0D8               	btfss	status,0,c
  4119  000DEA  0614               	decf	state6kal@i+1,f,c
  4120  000DEC                     L8:
  4121  000DEC  AE14               	btfss	state6kal@i+1,7,c
  4122  000DEE  D7BC               	goto	l2445
  4123  000DF0                     u1470:
  4124                           
  4125                           ;newmain.c: 544:             dekadicky = 1;
  4126  000DF0  0E00               	movlw	0
  4127  000DF2  6E1C               	movwf	state6kal@dekadicky+1,c
  4128  000DF4  0E01               	movlw	1
  4129  000DF6  6E1B               	movwf	state6kal@dekadicky,c
  4130                           
  4131                           ;newmain.c: 545:             for(int i = zacatekPrvniho; i >= 0; i--){
  4132  000DF8  C011  F015         	movff	state6kal@zacatekPrvniho,state6kal@i_1093
  4133  000DFC  C012  F016         	movff	state6kal@zacatekPrvniho+1,state6kal@i_1093+1
  4134  000E00                     l2473:
  4135  000E00  BE16               	btfsc	state6kal@i_1093+1,7,c
  4136  000E02  D055               	goto	l2497
  4137                           
  4138                           ;newmain.c: 546:                 aktualni = message.data[i] - '0';
  4139  000E04  0E60               	movlw	low _message
  4140  000E06  2415               	addwf	state6kal@i_1093,w,c
  4141  000E08  6ED9               	movwf	fsr2l,c
  4142  000E0A  0E00               	movlw	high _message
  4143  000E0C  2016               	addwfc	state6kal@i_1093+1,w,c
  4144  000E0E  6EDA               	movwf	fsr2h,c
  4145  000E10  50DF               	movf	indf2,w,c
  4146  000E12  0FD0               	addlw	208
  4147  000E14  6E1D               	movwf	state6kal@aktualni,c
  4148                           
  4149                           ;newmain.c: 547:                 prvni += dekadicky*aktualni;
  4150  000E16  C01D  F006         	movff	state6kal@aktualni,___wmul@multiplier
  4151  000E1A  6A07               	clrf	___wmul@multiplier+1,c
  4152  000E1C  C01B  F008         	movff	state6kal@dekadicky,___wmul@multiplicand
  4153  000E20  C01C  F009         	movff	state6kal@dekadicky+1,___wmul@multiplicand+1
  4154  000E24  EC48  F009         	call	___wmul	;wreg free
  4155  000E28  5006               	movf	?___wmul,w,c
  4156  000E2A  2617               	addwf	state6kal@prvni,f,c
  4157  000E2C  5007               	movf	?___wmul+1,w,c
  4158  000E2E  2218               	addwfc	state6kal@prvni+1,f,c
  4159                           
  4160                           ;newmain.c: 548:                 dekadicky *= 10;
  4161  000E30  C01B  F006         	movff	state6kal@dekadicky,___wmul@multiplier
  4162  000E34  C01C  F007         	movff	state6kal@dekadicky+1,___wmul@multiplier+1
  4163  000E38  0E00               	movlw	0
  4164  000E3A  6E09               	movwf	___wmul@multiplicand+1,c
  4165  000E3C  0E0A               	movlw	10
  4166  000E3E  6E08               	movwf	___wmul@multiplicand,c
  4167  000E40  EC48  F009         	call	___wmul	;wreg free
  4168  000E44  C006  F01B         	movff	?___wmul,state6kal@dekadicky
  4169  000E48  C007  F01C         	movff	?___wmul+1,state6kal@dekadicky+1
  4170                           
  4171                           ;newmain.c: 549:             }
  4172  000E4C  0615               	decf	state6kal@i_1093,f,c
  4173  000E4E  A0D8               	btfss	status,0,c
  4174  000E50  0616               	decf	state6kal@i_1093+1,f,c
  4175  000E52  D7D6               	goto	l2473
  4176  000E54                     l2487:
  4177                           
  4178                           ;newmain.c: 552:                     message.vysledek = prvni + druhy;
  4179  000E54  5019               	movf	state6kal@druhy,w,c
  4180  000E56  2417               	addwf	state6kal@prvni,w,c
  4181  000E58  0100               	movlb	0	; () banked
  4182  000E5A  6FB2               	movwf	(_message+82)& (0+255),b	;volatile
  4183  000E5C  501A               	movf	state6kal@druhy+1,w,c
  4184  000E5E  2018               	addwfc	state6kal@prvni+1,w,c
  4185  000E60  D006               	goto	L7
  4186  000E62                     l2489:
  4187                           
  4188                           ;newmain.c: 556:                     message.vysledek = prvni - druhy;
  4189  000E62  5019               	movf	state6kal@druhy,w,c
  4190  000E64  5C17               	subwf	state6kal@prvni,w,c
  4191  000E66  0100               	movlb	0	; () banked
  4192  000E68  6FB2               	movwf	(_message+82)& (0+255),b	;volatile
  4193  000E6A  501A               	movf	state6kal@druhy+1,w,c
  4194  000E6C  5818               	subwfb	state6kal@prvni+1,w,c
  4195  000E6E                     L7:
  4196  000E6E  6FB3               	movwf	(_message+83)& (0+255),b	;volatile
  4197                           
  4198                           ;newmain.c: 558:                     break;
  4199  000E70  D032               	goto	l305
  4200  000E72                     l2491:
  4201                           
  4202                           ;newmain.c: 560:                     message.vysledek = prvni * druhy;
  4203  000E72  C017  F006         	movff	state6kal@prvni,___wmul@multiplier
  4204  000E76  C018  F007         	movff	state6kal@prvni+1,___wmul@multiplier+1
  4205  000E7A  C019  F008         	movff	state6kal@druhy,___wmul@multiplicand
  4206  000E7E  C01A  F009         	movff	state6kal@druhy+1,___wmul@multiplicand+1
  4207  000E82  EC48  F009         	call	___wmul	;wreg free
  4208  000E86  C006  F0B2         	movff	?___wmul,_message+82	;volatile
  4209  000E8A  C007  F0B3         	movff	?___wmul+1,_message+83	;volatile
  4210                           
  4211                           ;newmain.c: 562:                     break;
  4212  000E8E  D023               	goto	l305
  4213  000E90                     l2493:
  4214                           
  4215                           ;newmain.c: 564:                     message.vysledek = prvni / druhy;
  4216  000E90  C017  F006         	movff	state6kal@prvni,___awdiv@dividend
  4217  000E94  C018  F007         	movff	state6kal@prvni+1,___awdiv@dividend+1
  4218  000E98  C019  F008         	movff	state6kal@druhy,___awdiv@divisor
  4219  000E9C  C01A  F009         	movff	state6kal@druhy+1,___awdiv@divisor+1
  4220  000EA0  EC98  F008         	call	___awdiv	;wreg free
  4221  000EA4  C006  F0B2         	movff	?___awdiv,_message+82	;volatile
  4222  000EA8  C007  F0B3         	movff	?___awdiv+1,_message+83	;volatile
  4223                           
  4224                           ;newmain.c: 566:                     break;
  4225  000EAC  D014               	goto	l305
  4226  000EAE                     l2497:
  4227  000EAE  5010               	movf	state6kal@operace,w,c
  4228  000EB0  6E0E               	movwf	??_state6kal& (0+255),c
  4229  000EB2  6A0F               	clrf	(??_state6kal+1)& (0+255),c
  4230                           
  4231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4232                           ; Switch size 1, requested type "simple"
  4233                           ; Number of cases is 1, Range of values is 0 to 0
  4234                           ; switch strategies available:
  4235                           ; Name         Instructions Cycles
  4236                           ; simple_byte            4     3 (average)
  4237                           ;	Chosen strategy is simple_byte
  4238  000EB4  500F               	movf	??_state6kal+1,w,c
  4239  000EB6  0A00               	xorlw	0	; case 0
  4240  000EB8  A4D8               	btfss	status,2,c
  4241  000EBA  D00D               	goto	l305
  4242                           
  4243                           ; Switch size 1, requested type "simple"
  4244                           ; Number of cases is 4, Range of values is 42 to 47
  4245                           ; switch strategies available:
  4246                           ; Name         Instructions Cycles
  4247                           ; simple_byte           13     7 (average)
  4248                           ;	Chosen strategy is simple_byte
  4249  000EBC  500E               	movf	??_state6kal,w,c
  4250  000EBE  0A2A               	xorlw	42	; case 42
  4251  000EC0  B4D8               	btfsc	status,2,c
  4252  000EC2  D7D7               	goto	l2491
  4253  000EC4  0A01               	xorlw	1	; case 43
  4254  000EC6  B4D8               	btfsc	status,2,c
  4255  000EC8  D7C5               	goto	l2487
  4256  000ECA  0A06               	xorlw	6	; case 45
  4257  000ECC  B4D8               	btfsc	status,2,c
  4258  000ECE  D7C9               	goto	l2489
  4259  000ED0  0A02               	xorlw	2	; case 47
  4260  000ED2  B4D8               	btfsc	status,2,c
  4261  000ED4  D7DD               	goto	l2493
  4262  000ED6                     l305:
  4263                           
  4264                           ;newmain.c: 569:             TX1IE = 1;
  4265  000ED6  889D               	bsf	3997,4,c	;volatile
  4266  000ED8  D73A               	goto	l2433
  4267  000EDA                     __end_of_state6kal:
  4268                           	opt callstack 0
  4269                           
  4270 ;; *************** function ___wmul *****************
  4271 ;; Defined at:
  4272 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  multiplier      2    5[COMRAM] unsigned int 
  4275 ;;  multiplicand    2    7[COMRAM] unsigned int 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  product         2    9[COMRAM] unsigned int 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  2    5[COMRAM] unsigned int 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0, prodl, prodh
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;Total ram usage:        6 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    1
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_state6kal
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text8
  4302  001290                     __ptext8:
  4303                           	opt callstack 0
  4304  001290                     ___wmul:
  4305                           	opt callstack 27
  4306                           
  4307                           ;incstack = 0
  4308  001290  5006               	movf	___wmul@multiplier,w,c
  4309  001292  0208               	mulwf	___wmul@multiplicand,c
  4310  001294  CFF3 F00A          	movff	prodl,___wmul@product
  4311  001298  CFF4 F00B          	movff	prodh,___wmul@product+1
  4312  00129C  5006               	movf	___wmul@multiplier,w,c
  4313  00129E  0209               	mulwf	___wmul@multiplicand+1,c
  4314  0012A0  50F3               	movf	prodl,w,c
  4315  0012A2  260B               	addwf	___wmul@product+1,f,c
  4316  0012A4  5007               	movf	___wmul@multiplier+1,w,c
  4317  0012A6  0208               	mulwf	___wmul@multiplicand,c
  4318  0012A8  50F3               	movf	prodl,w,c
  4319  0012AA  260B               	addwf	___wmul@product+1,f,c
  4320  0012AC  C00A  F006         	movff	___wmul@product,?___wmul
  4321  0012B0  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  4322  0012B4  0012               	return		;funcret
  4323  0012B6                     __end_of___wmul:
  4324                           	opt callstack 0
  4325                           
  4326 ;; *************** function ___awdiv *****************
  4327 ;; Defined at:
  4328 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  dividend        2    5[COMRAM] int 
  4331 ;;  divisor         2    7[COMRAM] int 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  quotient        2   11[COMRAM] int 
  4334 ;;  sign            1   10[COMRAM] unsigned char 
  4335 ;;  counter         1    9[COMRAM] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  2    5[COMRAM] int 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;Total ram usage:        8 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    1
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_state6kal
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text9
  4360  001130                     __ptext9:
  4361                           	opt callstack 0
  4362  001130                     ___awdiv:
  4363                           	opt callstack 27
  4364                           
  4365                           ;incstack = 0
  4366  001130  0E00               	movlw	0
  4367  001132  6E0B               	movwf	___awdiv@sign,c
  4368  001134  AE09               	btfss	___awdiv@divisor+1,7,c
  4369  001136  D006               	goto	l2285
  4370  001138  6C08               	negf	___awdiv@divisor,c
  4371  00113A  1E09               	comf	___awdiv@divisor+1,f,c
  4372  00113C  B0D8               	btfsc	status,0,c
  4373  00113E  2A09               	incf	___awdiv@divisor+1,f,c
  4374  001140  0E01               	movlw	1
  4375  001142  6E0B               	movwf	___awdiv@sign,c
  4376  001144                     l2285:
  4377  001144  AE07               	btfss	___awdiv@dividend+1,7,c
  4378  001146  D006               	goto	l2291
  4379  001148  6C06               	negf	___awdiv@dividend,c
  4380  00114A  1E07               	comf	___awdiv@dividend+1,f,c
  4381  00114C  B0D8               	btfsc	status,0,c
  4382  00114E  2A07               	incf	___awdiv@dividend+1,f,c
  4383  001150  0E01               	movlw	1
  4384  001152  1A0B               	xorwf	___awdiv@sign,f,c
  4385  001154                     l2291:
  4386  001154  0E00               	movlw	0
  4387  001156  6E0D               	movwf	___awdiv@quotient+1,c
  4388  001158  0E00               	movlw	0
  4389  00115A  6E0C               	movwf	___awdiv@quotient,c
  4390  00115C  5008               	movf	___awdiv@divisor,w,c
  4391  00115E  1009               	iorwf	___awdiv@divisor+1,w,c
  4392  001160  B4D8               	btfsc	status,2,c
  4393  001162  D01C               	goto	l2313
  4394  001164  0E01               	movlw	1
  4395  001166  6E0A               	movwf	___awdiv@counter,c
  4396  001168  D004               	goto	l2299
  4397  00116A                     l2297:
  4398  00116A  90D8               	bcf	status,0,c
  4399  00116C  3608               	rlcf	___awdiv@divisor,f,c
  4400  00116E  3609               	rlcf	___awdiv@divisor+1,f,c
  4401  001170  2A0A               	incf	___awdiv@counter,f,c
  4402  001172                     l2299:
  4403  001172  AE09               	btfss	___awdiv@divisor+1,7,c
  4404  001174  D7FA               	goto	l2297
  4405  001176                     u1330:
  4406  001176  90D8               	bcf	status,0,c
  4407  001178  360C               	rlcf	___awdiv@quotient,f,c
  4408  00117A  360D               	rlcf	___awdiv@quotient+1,f,c
  4409  00117C  5008               	movf	___awdiv@divisor,w,c
  4410  00117E  5C06               	subwf	___awdiv@dividend,w,c
  4411  001180  5009               	movf	___awdiv@divisor+1,w,c
  4412  001182  5807               	subwfb	___awdiv@dividend+1,w,c
  4413  001184  A0D8               	btfss	status,0,c
  4414  001186  D005               	goto	l2309
  4415  001188  5008               	movf	___awdiv@divisor,w,c
  4416  00118A  5E06               	subwf	___awdiv@dividend,f,c
  4417  00118C  5009               	movf	___awdiv@divisor+1,w,c
  4418  00118E  5A07               	subwfb	___awdiv@dividend+1,f,c
  4419  001190  800C               	bsf	___awdiv@quotient,0,c
  4420  001192                     l2309:
  4421  001192  90D8               	bcf	status,0,c
  4422  001194  3209               	rrcf	___awdiv@divisor+1,f,c
  4423  001196  3208               	rrcf	___awdiv@divisor,f,c
  4424  001198  2E0A               	decfsz	___awdiv@counter,f,c
  4425  00119A  D7ED               	goto	u1330
  4426  00119C                     l2313:
  4427  00119C  500B               	movf	___awdiv@sign,w,c
  4428  00119E  B4D8               	btfsc	status,2,c
  4429  0011A0  D004               	goto	l2317
  4430  0011A2  6C0C               	negf	___awdiv@quotient,c
  4431  0011A4  1E0D               	comf	___awdiv@quotient+1,f,c
  4432  0011A6  B0D8               	btfsc	status,0,c
  4433  0011A8  2A0D               	incf	___awdiv@quotient+1,f,c
  4434  0011AA                     l2317:
  4435  0011AA  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  4436  0011AE  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  4437  0011B2  0012               	return		;funcret
  4438  0011B4                     __end_of___awdiv:
  4439                           	opt callstack 0
  4440                           
  4441 ;; *************** function _state5tet *****************
  4442 ;; Defined at:
  4443 ;;		line 452 in file "newmain.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;		None
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  i               2   14[COMRAM] int 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      void 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;Total ram usage:        4 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    3
  4464 ;; This function calls:
  4465 ;;		_LCD_ShowString
  4466 ;;		_driveLED
  4467 ;; This function is called by:
  4468 ;;		_FSM
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text10
  4473  000B24                     __ptext10:
  4474                           	opt callstack 0
  4475  000B24                     _state5tet:
  4476                           	opt callstack 26
  4477                           
  4478                           ;newmain.c: 454:     LCD_ShowString(1, "State: Tetris      ");
  4479                           
  4480                           ;incstack = 0
  4481  000B24  0E43               	movlw	low STR_11
  4482  000B26  6E07               	movwf	LCD_ShowString@textData,c
  4483  000B28  0EFD               	movlw	high STR_11
  4484  000B2A  6E08               	movwf	LCD_ShowString@textData+1,c
  4485  000B2C  0E01               	movlw	1
  4486  000B2E  ECDA  F008         	call	_LCD_ShowString
  4487                           
  4488                           ;newmain.c: 455:     LCD_ShowString(2, "State: Tetris      ");
  4489  000B32  0E43               	movlw	low STR_11
  4490  000B34  6E07               	movwf	LCD_ShowString@textData,c
  4491  000B36  0EFD               	movlw	high STR_11
  4492  000B38  6E08               	movwf	LCD_ShowString@textData+1,c
  4493  000B3A  0E02               	movlw	2
  4494  000B3C  ECDA  F008         	call	_LCD_ShowString
  4495                           
  4496                           ;newmain.c: 458:     int i;;newmain.c: 459:     driveLED(0);
  4497  000B40  0E00               	movlw	0
  4498  000B42  EC0E  F009         	call	_driveLED
  4499                           
  4500                           ;newmain.c: 460:     _delay((unsigned long)((100)*(8E6/4000.0)));
  4501  000B46  0E02               	movlw	2
  4502  000B48  6E0E               	movwf	(??_state5tet+1)& (0+255),c
  4503  000B4A  0E04               	movlw	4
  4504  000B4C  6E0D               	movwf	??_state5tet& (0+255),c
  4505  000B4E  0EBA               	movlw	186
  4506  000B50                     u2817:
  4507  000B50  2EE8               	decfsz	wreg,f,c
  4508  000B52  D7FE               	bra	u2817
  4509  000B54  2E0D               	decfsz	??_state5tet& (0+255),f,c
  4510  000B56  D7FC               	bra	u2817
  4511  000B58  2E0E               	decfsz	(??_state5tet+1)& (0+255),f,c
  4512  000B5A  D7FA               	bra	u2817
  4513  000B5C  D000               	nop2	
  4514                           
  4515                           ;newmain.c: 461:     for(i = 1; i < 33; i = i<<1){
  4516  000B5E  0E00               	movlw	0
  4517  000B60  6E10               	movwf	state5tet@i+1,c
  4518  000B62  0E01               	movlw	1
  4519  000B64  6E0F               	movwf	state5tet@i,c
  4520  000B66                     l2343:
  4521                           
  4522                           ;newmain.c: 462:         driveLED(i);
  4523  000B66  500F               	movf	state5tet@i,w,c
  4524  000B68  EC0E  F009         	call	_driveLED
  4525                           
  4526                           ;newmain.c: 463:         _delay((unsigned long)((100)*(8E6/4000.0)));
  4527  000B6C  0E02               	movlw	2
  4528  000B6E  6E0E               	movwf	(??_state5tet+1)& (0+255),c
  4529  000B70  0E04               	movlw	4
  4530  000B72  6E0D               	movwf	??_state5tet& (0+255),c
  4531  000B74  0EBA               	movlw	186
  4532  000B76                     u2827:
  4533  000B76  2EE8               	decfsz	wreg,f,c
  4534  000B78  D7FE               	bra	u2827
  4535  000B7A  2E0D               	decfsz	??_state5tet& (0+255),f,c
  4536  000B7C  D7FC               	bra	u2827
  4537  000B7E  2E0E               	decfsz	(??_state5tet+1)& (0+255),f,c
  4538  000B80  D7FA               	bra	u2827
  4539  000B82  D000               	nop2	
  4540                           
  4541                           ;newmain.c: 464:     }
  4542  000B84  90D8               	bcf	status,0,c
  4543  000B86  340F               	rlcf	state5tet@i,w,c
  4544  000B88  6E0F               	movwf	state5tet@i,c
  4545  000B8A  3410               	rlcf	state5tet@i+1,w,c
  4546  000B8C  6E10               	movwf	state5tet@i+1,c
  4547  000B8E  BE10               	btfsc	state5tet@i+1,7,c
  4548  000B90  D7EA               	goto	l2343
  4549  000B92  5010               	movf	state5tet@i+1,w,c
  4550  000B94  E104               	bnz	u1360
  4551  000B96  0E21               	movlw	33
  4552  000B98  5C0F               	subwf	state5tet@i,w,c
  4553  000B9A  A0D8               	btfss	status,0,c
  4554  000B9C  D7E4               	goto	l2343
  4555  000B9E                     u1360:
  4556                           
  4557                           ;newmain.c: 465:     for(i = 1; i < 17; i = i<<1){
  4558  000B9E  0E00               	movlw	0
  4559  000BA0  6E10               	movwf	state5tet@i+1,c
  4560  000BA2  0E01               	movlw	1
  4561  000BA4  6E0F               	movwf	state5tet@i,c
  4562  000BA6                     l2357:
  4563                           
  4564                           ;newmain.c: 466:         i = i + 32;
  4565  000BA6  0E20               	movlw	32
  4566  000BA8  240F               	addwf	state5tet@i,w,c
  4567  000BAA  6E0F               	movwf	state5tet@i,c
  4568  000BAC  0E00               	movlw	0
  4569  000BAE  2010               	addwfc	state5tet@i+1,w,c
  4570  000BB0  6E10               	movwf	state5tet@i+1,c
  4571                           
  4572                           ;newmain.c: 467:         driveLED(i);
  4573  000BB2  500F               	movf	state5tet@i,w,c
  4574  000BB4  EC0E  F009         	call	_driveLED
  4575                           
  4576                           ;newmain.c: 468:         i = i - 32;
  4577  000BB8  0EE0               	movlw	224
  4578  000BBA  240F               	addwf	state5tet@i,w,c
  4579  000BBC  6E0F               	movwf	state5tet@i,c
  4580  000BBE  0EFF               	movlw	255
  4581  000BC0  2010               	addwfc	state5tet@i+1,w,c
  4582  000BC2  6E10               	movwf	state5tet@i+1,c
  4583                           
  4584                           ;newmain.c: 469:         _delay((unsigned long)((100)*(8E6/4000.0)));
  4585  000BC4  0E02               	movlw	2
  4586  000BC6  6E0E               	movwf	(??_state5tet+1)& (0+255),c
  4587  000BC8  0E04               	movlw	4
  4588  000BCA  6E0D               	movwf	??_state5tet& (0+255),c
  4589  000BCC  0EBA               	movlw	186
  4590  000BCE                     u2837:
  4591  000BCE  2EE8               	decfsz	wreg,f,c
  4592  000BD0  D7FE               	bra	u2837
  4593  000BD2  2E0D               	decfsz	??_state5tet& (0+255),f,c
  4594  000BD4  D7FC               	bra	u2837
  4595  000BD6  2E0E               	decfsz	(??_state5tet+1)& (0+255),f,c
  4596  000BD8  D7FA               	bra	u2837
  4597  000BDA  D000               	nop2	
  4598                           
  4599                           ;newmain.c: 470:     }
  4600  000BDC  90D8               	bcf	status,0,c
  4601  000BDE  340F               	rlcf	state5tet@i,w,c
  4602  000BE0  6E0F               	movwf	state5tet@i,c
  4603  000BE2  3410               	rlcf	state5tet@i+1,w,c
  4604  000BE4  6E10               	movwf	state5tet@i+1,c
  4605  000BE6  BE10               	btfsc	state5tet@i+1,7,c
  4606  000BE8  D7DE               	goto	l2357
  4607  000BEA  5010               	movf	state5tet@i+1,w,c
  4608  000BEC  E104               	bnz	u1370
  4609  000BEE  0E11               	movlw	17
  4610  000BF0  5C0F               	subwf	state5tet@i,w,c
  4611  000BF2  A0D8               	btfss	status,0,c
  4612  000BF4  D7D8               	goto	l2357
  4613  000BF6                     u1370:
  4614                           
  4615                           ;newmain.c: 471:     for(i = 1; i < 9; i = i<<1){
  4616  000BF6  0E00               	movlw	0
  4617  000BF8  6E10               	movwf	state5tet@i+1,c
  4618  000BFA  0E01               	movlw	1
  4619  000BFC  6E0F               	movwf	state5tet@i,c
  4620  000BFE                     l2375:
  4621                           
  4622                           ;newmain.c: 472:         i = i + 48;
  4623  000BFE  0E30               	movlw	48
  4624  000C00  240F               	addwf	state5tet@i,w,c
  4625  000C02  6E0F               	movwf	state5tet@i,c
  4626  000C04  0E00               	movlw	0
  4627  000C06  2010               	addwfc	state5tet@i+1,w,c
  4628  000C08  6E10               	movwf	state5tet@i+1,c
  4629                           
  4630                           ;newmain.c: 473:         driveLED(i);
  4631  000C0A  500F               	movf	state5tet@i,w,c
  4632  000C0C  EC0E  F009         	call	_driveLED
  4633                           
  4634                           ;newmain.c: 474:         i = i - 48;
  4635  000C10  0ED0               	movlw	208
  4636  000C12  240F               	addwf	state5tet@i,w,c
  4637  000C14  6E0F               	movwf	state5tet@i,c
  4638  000C16  0EFF               	movlw	255
  4639  000C18  2010               	addwfc	state5tet@i+1,w,c
  4640  000C1A  6E10               	movwf	state5tet@i+1,c
  4641                           
  4642                           ;newmain.c: 475:         _delay((unsigned long)((100)*(8E6/4000.0)));
  4643  000C1C  0E02               	movlw	2
  4644  000C1E  6E0E               	movwf	(??_state5tet+1)& (0+255),c
  4645  000C20  0E04               	movlw	4
  4646  000C22  6E0D               	movwf	??_state5tet& (0+255),c
  4647  000C24  0EBA               	movlw	186
  4648  000C26                     u2847:
  4649  000C26  2EE8               	decfsz	wreg,f,c
  4650  000C28  D7FE               	bra	u2847
  4651  000C2A  2E0D               	decfsz	??_state5tet& (0+255),f,c
  4652  000C2C  D7FC               	bra	u2847
  4653  000C2E  2E0E               	decfsz	(??_state5tet+1)& (0+255),f,c
  4654  000C30  D7FA               	bra	u2847
  4655  000C32  D000               	nop2	
  4656                           
  4657                           ;newmain.c: 476:     }
  4658  000C34  90D8               	bcf	status,0,c
  4659  000C36  340F               	rlcf	state5tet@i,w,c
  4660  000C38  6E0F               	movwf	state5tet@i,c
  4661  000C3A  3410               	rlcf	state5tet@i+1,w,c
  4662  000C3C  6E10               	movwf	state5tet@i+1,c
  4663  000C3E  BE10               	btfsc	state5tet@i+1,7,c
  4664  000C40  D7DE               	goto	l2375
  4665  000C42  5010               	movf	state5tet@i+1,w,c
  4666  000C44  E104               	bnz	u1380
  4667  000C46  0E09               	movlw	9
  4668  000C48  5C0F               	subwf	state5tet@i,w,c
  4669  000C4A  A0D8               	btfss	status,0,c
  4670  000C4C  D7D8               	goto	l2375
  4671  000C4E                     u1380:
  4672                           
  4673                           ;newmain.c: 477:     for(i = 1; i < 5; i = i<<1){
  4674  000C4E  0E00               	movlw	0
  4675  000C50  6E10               	movwf	state5tet@i+1,c
  4676  000C52  0E01               	movlw	1
  4677  000C54  6E0F               	movwf	state5tet@i,c
  4678  000C56                     l2393:
  4679                           
  4680                           ;newmain.c: 478:         i = i + 56;
  4681  000C56  0E38               	movlw	56
  4682  000C58  240F               	addwf	state5tet@i,w,c
  4683  000C5A  6E0F               	movwf	state5tet@i,c
  4684  000C5C  0E00               	movlw	0
  4685  000C5E  2010               	addwfc	state5tet@i+1,w,c
  4686  000C60  6E10               	movwf	state5tet@i+1,c
  4687                           
  4688                           ;newmain.c: 479:         driveLED(i);
  4689  000C62  500F               	movf	state5tet@i,w,c
  4690  000C64  EC0E  F009         	call	_driveLED
  4691                           
  4692                           ;newmain.c: 480:         i = i - 56;
  4693  000C68  0EC8               	movlw	200
  4694  000C6A  240F               	addwf	state5tet@i,w,c
  4695  000C6C  6E0F               	movwf	state5tet@i,c
  4696  000C6E  0EFF               	movlw	255
  4697  000C70  2010               	addwfc	state5tet@i+1,w,c
  4698  000C72  6E10               	movwf	state5tet@i+1,c
  4699                           
  4700                           ;newmain.c: 481:         _delay((unsigned long)((100)*(8E6/4000.0)));
  4701  000C74  0E02               	movlw	2
  4702  000C76  6E0E               	movwf	(??_state5tet+1)& (0+255),c
  4703  000C78  0E04               	movlw	4
  4704  000C7A  6E0D               	movwf	??_state5tet& (0+255),c
  4705  000C7C  0EBA               	movlw	186
  4706  000C7E                     u2857:
  4707  000C7E  2EE8               	decfsz	wreg,f,c
  4708  000C80  D7FE               	bra	u2857
  4709  000C82  2E0D               	decfsz	??_state5tet& (0+255),f,c
  4710  000C84  D7FC               	bra	u2857
  4711  000C86  2E0E               	decfsz	(??_state5tet+1)& (0+255),f,c
  4712  000C88  D7FA               	bra	u2857
  4713  000C8A  D000               	nop2	
  4714                           
  4715                           ;newmain.c: 482:     }
  4716  000C8C  90D8               	bcf	status,0,c
  4717  000C8E  340F               	rlcf	state5tet@i,w,c
  4718  000C90  6E0F               	movwf	state5tet@i,c
  4719  000C92  3410               	rlcf	state5tet@i+1,w,c
  4720  000C94  6E10               	movwf	state5tet@i+1,c
  4721  000C96  BE10               	btfsc	state5tet@i+1,7,c
  4722  000C98  D7DE               	goto	l2393
  4723  000C9A  5010               	movf	state5tet@i+1,w,c
  4724  000C9C  E104               	bnz	u1390
  4725  000C9E  0E05               	movlw	5
  4726  000CA0  5C0F               	subwf	state5tet@i,w,c
  4727  000CA2  A0D8               	btfss	status,0,c
  4728  000CA4  D7D8               	goto	l2393
  4729  000CA6                     u1390:
  4730                           
  4731                           ;newmain.c: 483:     for(i = 1; i < 3; i = i<<1){
  4732  000CA6  0E00               	movlw	0
  4733  000CA8  6E10               	movwf	state5tet@i+1,c
  4734  000CAA  0E01               	movlw	1
  4735  000CAC  6E0F               	movwf	state5tet@i,c
  4736  000CAE                     l2411:
  4737                           
  4738                           ;newmain.c: 484:         i = i + 60;
  4739  000CAE  0E3C               	movlw	60
  4740  000CB0  240F               	addwf	state5tet@i,w,c
  4741  000CB2  6E0F               	movwf	state5tet@i,c
  4742  000CB4  0E00               	movlw	0
  4743  000CB6  2010               	addwfc	state5tet@i+1,w,c
  4744  000CB8  6E10               	movwf	state5tet@i+1,c
  4745                           
  4746                           ;newmain.c: 485:         driveLED(i);
  4747  000CBA  500F               	movf	state5tet@i,w,c
  4748  000CBC  EC0E  F009         	call	_driveLED
  4749                           
  4750                           ;newmain.c: 486:         i = i - 60;
  4751  000CC0  0EC4               	movlw	196
  4752  000CC2  240F               	addwf	state5tet@i,w,c
  4753  000CC4  6E0F               	movwf	state5tet@i,c
  4754  000CC6  0EFF               	movlw	255
  4755  000CC8  2010               	addwfc	state5tet@i+1,w,c
  4756  000CCA  6E10               	movwf	state5tet@i+1,c
  4757                           
  4758                           ;newmain.c: 487:         _delay((unsigned long)((100)*(8E6/4000.0)));
  4759  000CCC  0E02               	movlw	2
  4760  000CCE  6E0E               	movwf	(??_state5tet+1)& (0+255),c
  4761  000CD0  0E04               	movlw	4
  4762  000CD2  6E0D               	movwf	??_state5tet& (0+255),c
  4763  000CD4  0EBA               	movlw	186
  4764  000CD6                     u2867:
  4765  000CD6  2EE8               	decfsz	wreg,f,c
  4766  000CD8  D7FE               	bra	u2867
  4767  000CDA  2E0D               	decfsz	??_state5tet& (0+255),f,c
  4768  000CDC  D7FC               	bra	u2867
  4769  000CDE  2E0E               	decfsz	(??_state5tet+1)& (0+255),f,c
  4770  000CE0  D7FA               	bra	u2867
  4771  000CE2  D000               	nop2	
  4772                           
  4773                           ;newmain.c: 488:     }
  4774  000CE4  90D8               	bcf	status,0,c
  4775  000CE6  340F               	rlcf	state5tet@i,w,c
  4776  000CE8  6E0F               	movwf	state5tet@i,c
  4777  000CEA  3410               	rlcf	state5tet@i+1,w,c
  4778  000CEC  6E10               	movwf	state5tet@i+1,c
  4779  000CEE  BE10               	btfsc	state5tet@i+1,7,c
  4780  000CF0  D7DE               	goto	l2411
  4781  000CF2  5010               	movf	state5tet@i+1,w,c
  4782  000CF4  E104               	bnz	u1400
  4783  000CF6  0E03               	movlw	3
  4784  000CF8  5C0F               	subwf	state5tet@i,w,c
  4785  000CFA  A0D8               	btfss	status,0,c
  4786  000CFC  D7D8               	goto	l2411
  4787  000CFE                     u1400:
  4788                           
  4789                           ;newmain.c: 489:     LATD2 = 0;
  4790  000CFE  948C               	bcf	3980,2,c	;volatile
  4791                           
  4792                           ;newmain.c: 490:     _delay((unsigned long)((100)*(8E6/4000.0)));
  4793  000D00  0E02               	movlw	2
  4794  000D02  6E0E               	movwf	(??_state5tet+1)& (0+255),c
  4795  000D04  0E04               	movlw	4
  4796  000D06  6E0D               	movwf	??_state5tet& (0+255),c
  4797  000D08  0EBA               	movlw	186
  4798  000D0A                     u2877:
  4799  000D0A  2EE8               	decfsz	wreg,f,c
  4800  000D0C  D7FE               	bra	u2877
  4801  000D0E  2E0D               	decfsz	??_state5tet& (0+255),f,c
  4802  000D10  D7FC               	bra	u2877
  4803  000D12  2E0E               	decfsz	(??_state5tet+1)& (0+255),f,c
  4804  000D14  D7FA               	bra	u2877
  4805  000D16  D000               	nop2	
  4806  000D18  0012               	return		;funcret
  4807  000D1A                     __end_of_state5tet:
  4808                           	opt callstack 0
  4809                           
  4810 ;; *************** function _driveLED *****************
  4811 ;; Defined at:
  4812 ;;		line 826 in file "newmain.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  in              1    wreg     unsigned char 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  in              1    5[COMRAM] unsigned char 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;Total ram usage:        1 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_FSM
  4837 ;;		_state5tet
  4838 ;;		_state8adc
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text11
  4843  00121C                     __ptext11:
  4844                           	opt callstack 0
  4845  00121C                     _driveLED:
  4846                           	opt callstack 27
  4847                           
  4848                           ;incstack = 0
  4849                           ;driveLED@in stored from wreg
  4850  00121C  6E06               	movwf	driveLED@in,c
  4851                           
  4852                           ;newmain.c: 827:         in = ~in;
  4853  00121E  1E06               	comf	driveLED@in,f,c
  4854                           
  4855                           ;newmain.c: 828:         LATD2 = in & 1;
  4856  001220  A006               	btfss	driveLED@in,0,c
  4857  001222  D002               	goto	u30
  4858  001224  848C               	bsf	3980,2,c	;volatile
  4859  001226  D001               	goto	u45
  4860  001228                     u30:
  4861  001228  948C               	bcf	3980,2,c	;volatile
  4862  00122A                     u45:
  4863                           
  4864                           ;newmain.c: 829:         LATD3 = in & 2 ? 1 : 0;
  4865  00122A  A206               	btfss	driveLED@in,1,c
  4866  00122C  D002               	goto	u50
  4867  00122E  868C               	bsf	3980,3,c	;volatile
  4868  001230  D001               	goto	u65
  4869  001232                     u50:
  4870  001232  968C               	bcf	3980,3,c	;volatile
  4871  001234                     u65:
  4872                           
  4873                           ;newmain.c: 830:         LATC4 = in & 4 ? 1 : 0;
  4874  001234  A406               	btfss	driveLED@in,2,c
  4875  001236  D002               	goto	u70
  4876  001238  888B               	bsf	3979,4,c	;volatile
  4877  00123A  D001               	goto	u85
  4878  00123C                     u70:
  4879  00123C  988B               	bcf	3979,4,c	;volatile
  4880  00123E                     u85:
  4881                           
  4882                           ;newmain.c: 831:         LATD4 = in & 8 ? 1 : 0;
  4883  00123E  A606               	btfss	driveLED@in,3,c
  4884  001240  D002               	goto	u90
  4885  001242  888C               	bsf	3980,4,c	;volatile
  4886  001244  D001               	goto	u105
  4887  001246                     u90:
  4888  001246  988C               	bcf	3980,4,c	;volatile
  4889  001248                     u105:
  4890                           
  4891                           ;newmain.c: 832:         LATD5 = in & 16 ? 1 : 0;
  4892  001248  A806               	btfss	driveLED@in,4,c
  4893  00124A  D002               	goto	u110
  4894  00124C  8A8C               	bsf	3980,5,c	;volatile
  4895  00124E  D001               	goto	u125
  4896  001250                     u110:
  4897  001250  9A8C               	bcf	3980,5,c	;volatile
  4898  001252                     u125:
  4899                           
  4900                           ;newmain.c: 833:         LATD6 = in & 32 ? 1 : 0;
  4901  001252  AA06               	btfss	driveLED@in,5,c
  4902  001254  D002               	goto	u130
  4903  001256  8C8C               	bsf	3980,6,c	;volatile
  4904  001258  0012               	return	
  4905  00125A                     u130:
  4906  00125A  9C8C               	bcf	3980,6,c	;volatile
  4907  00125C  0012               	return		;funcret
  4908  00125E                     __end_of_driveLED:
  4909                           	opt callstack 0
  4910                           
  4911 ;; *************** function _state4obrhra *****************
  4912 ;; Defined at:
  4913 ;;		line 446 in file "newmain.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;Total ram usage:        0 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    3
  4934 ;; This function calls:
  4935 ;;		_LCD_ShowString
  4936 ;; This function is called by:
  4937 ;;		_FSM
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text12
  4942  0012DA                     __ptext12:
  4943                           	opt callstack 0
  4944  0012DA                     _state4obrhra:
  4945                           	opt callstack 26
  4946                           
  4947                           ;newmain.c: 448:     LCD_ShowString(1, "-4: 1D Pong     ");
  4948                           
  4949                           ;incstack = 0
  4950  0012DA  0E9B               	movlw	low STR_9
  4951  0012DC  6E07               	movwf	LCD_ShowString@textData,c
  4952  0012DE  0EFD               	movlw	high STR_9
  4953  0012E0  6E08               	movwf	LCD_ShowString@textData+1,c
  4954  0012E2  0E01               	movlw	1
  4955  0012E4  ECDA  F008         	call	_LCD_ShowString
  4956                           
  4957                           ;newmain.c: 449:     LCD_ShowString(2, "                ");
  4958  0012E8  0E57               	movlw	low STR_10
  4959  0012EA  6E07               	movwf	LCD_ShowString@textData,c
  4960  0012EC  0EFD               	movlw	high STR_10
  4961  0012EE  6E08               	movwf	LCD_ShowString@textData+1,c
  4962  0012F0  0E02               	movlw	2
  4963  0012F2  ECDA  F008         	call	_LCD_ShowString
  4964  0012F6  0012               	return		;funcret
  4965  0012F8                     __end_of_state4obrhra:
  4966                           	opt callstack 0
  4967                           
  4968 ;; *************** function _state3obradc *****************
  4969 ;; Defined at:
  4970 ;;		line 440 in file "newmain.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;Total ram usage:        0 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    3
  4991 ;; This function calls:
  4992 ;;		_LCD_ShowString
  4993 ;; This function is called by:
  4994 ;;		_FSM
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text13
  4999  0012F8                     __ptext13:
  5000                           	opt callstack 0
  5001  0012F8                     _state3obradc:
  5002                           	opt callstack 26
  5003                           
  5004                           ;newmain.c: 442:     LCD_ShowString(1, " 2: PWM motor   ");
  5005                           
  5006                           ;incstack = 0
  5007  0012F8  0EBD               	movlw	low STR_7
  5008  0012FA  6E07               	movwf	LCD_ShowString@textData,c
  5009  0012FC  0EFD               	movlw	high STR_7
  5010  0012FE  6E08               	movwf	LCD_ShowString@textData+1,c
  5011  001300  0E01               	movlw	1
  5012  001302  ECDA  F008         	call	_LCD_ShowString
  5013                           
  5014                           ;newmain.c: 443:     LCD_ShowString(2, "-3: ADC bargraph");
  5015  001306  0EEE               	movlw	low STR_8
  5016  001308  6E07               	movwf	LCD_ShowString@textData,c
  5017  00130A  0EFF               	movlw	high STR_8
  5018  00130C  6E08               	movwf	LCD_ShowString@textData+1,c
  5019  00130E  0E02               	movlw	2
  5020  001310  ECDA  F008         	call	_LCD_ShowString
  5021  001314  0012               	return		;funcret
  5022  001316                     __end_of_state3obradc:
  5023                           	opt callstack 0
  5024                           
  5025 ;; *************** function _state2obrpwm *****************
  5026 ;; Defined at:
  5027 ;;		line 434 in file "newmain.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;Total ram usage:        0 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    3
  5048 ;; This function calls:
  5049 ;;		_LCD_ShowString
  5050 ;; This function is called by:
  5051 ;;		_FSM
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text14
  5056  001316                     __ptext14:
  5057                           	opt callstack 0
  5058  001316                     _state2obrpwm:
  5059                           	opt callstack 26
  5060                           
  5061                           ;newmain.c: 436:     LCD_ShowString(1, "-2: PWM motor   ");
  5062                           
  5063                           ;incstack = 0
  5064  001316  0ECE               	movlw	low STR_5
  5065  001318  6E07               	movwf	LCD_ShowString@textData,c
  5066  00131A  0EFD               	movlw	high STR_5
  5067  00131C  6E08               	movwf	LCD_ShowString@textData+1,c
  5068  00131E  0E01               	movlw	1
  5069  001320  ECDA  F008         	call	_LCD_ShowString
  5070                           
  5071                           ;newmain.c: 437:     LCD_ShowString(2, " 3: ADC bargraph");
  5072  001324  0EDD               	movlw	low STR_6
  5073  001326  6E07               	movwf	LCD_ShowString@textData,c
  5074  001328  0EFF               	movlw	high STR_6
  5075  00132A  6E08               	movwf	LCD_ShowString@textData+1,c
  5076  00132C  0E02               	movlw	2
  5077  00132E  ECDA  F008         	call	_LCD_ShowString
  5078  001332  0012               	return		;funcret
  5079  001334                     __end_of_state2obrpwm:
  5080                           	opt callstack 0
  5081                           
  5082 ;; *************** function _state1obrkal *****************
  5083 ;; Defined at:
  5084 ;;		line 428 in file "newmain.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    3
  5105 ;; This function calls:
  5106 ;;		_LCD_ShowString
  5107 ;; This function is called by:
  5108 ;;		_FSM
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text15
  5113  001334                     __ptext15:
  5114                           	opt callstack 0
  5115  001334                     _state1obrkal:
  5116                           	opt callstack 26
  5117                           
  5118                           ;newmain.c: 430:     LCD_ShowString(1, " 0. Tetris      ");
  5119                           
  5120                           ;incstack = 0
  5121  001334  0E79               	movlw	low STR_3
  5122  001336  6E07               	movwf	LCD_ShowString@textData,c
  5123  001338  0EFD               	movlw	high STR_3
  5124  00133A  6E08               	movwf	LCD_ShowString@textData+1,c
  5125  00133C  0E01               	movlw	1
  5126  00133E  ECDA  F008         	call	_LCD_ShowString
  5127                           
  5128                           ;newmain.c: 431:     LCD_ShowString(2, "-1. Kalkulacka  ");
  5129  001342  0EF0               	movlw	low STR_4
  5130  001344  6E07               	movwf	LCD_ShowString@textData,c
  5131  001346  0EFD               	movlw	high STR_4
  5132  001348  6E08               	movwf	LCD_ShowString@textData+1,c
  5133  00134A  0E02               	movlw	2
  5134  00134C  ECDA  F008         	call	_LCD_ShowString
  5135  001350  0012               	return		;funcret
  5136  001352                     __end_of_state1obrkal:
  5137                           	opt callstack 0
  5138                           
  5139 ;; *************** function _state0obrtet *****************
  5140 ;; Defined at:
  5141 ;;		line 422 in file "newmain.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;		None
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      void 
  5148 ;; Registers used:
  5149 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;Total ram usage:        0 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:    3
  5162 ;; This function calls:
  5163 ;;		_LCD_ShowString
  5164 ;; This function is called by:
  5165 ;;		_FSM
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text16
  5170  001352                     __ptext16:
  5171                           	opt callstack 0
  5172  001352                     _state0obrtet:
  5173                           	opt callstack 26
  5174                           
  5175                           ;newmain.c: 424:     LCD_ShowString(1, "-0. Tetris      ");
  5176                           
  5177                           ;incstack = 0
  5178  001352  0E8A               	movlw	low STR_1
  5179  001354  6E07               	movwf	LCD_ShowString@textData,c
  5180  001356  0EFD               	movlw	high STR_1
  5181  001358  6E08               	movwf	LCD_ShowString@textData+1,c
  5182  00135A  0E01               	movlw	1
  5183  00135C  ECDA  F008         	call	_LCD_ShowString
  5184                           
  5185                           ;newmain.c: 425:     LCD_ShowString(2, " 1. Kalkulacka  ");
  5186  001360  0EDF               	movlw	low STR_2
  5187  001362  6E07               	movwf	LCD_ShowString@textData,c
  5188  001364  0EFD               	movlw	high STR_2
  5189  001366  6E08               	movwf	LCD_ShowString@textData+1,c
  5190  001368  0E02               	movlw	2
  5191  00136A  ECDA  F008         	call	_LCD_ShowString
  5192  00136E  0012               	return		;funcret
  5193  001370                     __end_of_state0obrtet:
  5194                           	opt callstack 0
  5195                           
  5196 ;; *************** function _LCD_ShowString *****************
  5197 ;; Defined at:
  5198 ;;		line 58 in file "lcd.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  lineNum         1    wreg     unsigned char 
  5201 ;;  textData        2    6[COMRAM] PTR unsigned char 
  5202 ;;		 -> STR_78(17), STR_77(17), STR_76(17), STR_75(17), 
  5203 ;;		 -> STR_74(17), STR_73(17), STR_72(17), STR_71(17), 
  5204 ;;		 -> STR_70(17), STR_69(17), STR_68(17), STR_67(17), 
  5205 ;;		 -> STR_66(17), STR_65(17), STR_64(17), STR_63(17), 
  5206 ;;		 -> STR_62(17), STR_61(17), STR_60(17), STR_59(17), 
  5207 ;;		 -> STR_58(17), STR_57(17), STR_56(17), STR_55(17), 
  5208 ;;		 -> STR_54(17), STR_53(17), STR_52(17), STR_51(17), 
  5209 ;;		 -> STR_50(17), STR_49(17), STR_48(17), STR_47(17), 
  5210 ;;		 -> STR_46(17), STR_45(17), STR_44(17), STR_43(17), 
  5211 ;;		 -> STR_42(17), STR_41(17), STR_40(17), STR_39(17), 
  5212 ;;		 -> STR_38(17), STR_37(17), STR_36(17), STR_35(17), 
  5213 ;;		 -> STR_34(17), STR_33(17), STR_32(17), STR_31(17), 
  5214 ;;		 -> STR_30(17), STR_29(17), STR_28(17), STR_27(17), 
  5215 ;;		 -> STR_26(17), STR_25(17), STR_24(17), STR_23(17), 
  5216 ;;		 -> STR_22(17), STR_21(17), STR_20(17), STR_19(17), 
  5217 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(17), 
  5218 ;;		 -> STR_14(17), STR_13(17), STR_12(20), STR_11(20), 
  5219 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
  5220 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  5221 ;;		 -> STR_2(17), STR_1(17), 
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;  lineNum         1   10[COMRAM] unsigned char 
  5224 ;;  i               1   11[COMRAM] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;Total ram usage:        6 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    2
  5241 ;; This function calls:
  5242 ;;		_LCD_Send
  5243 ;; This function is called by:
  5244 ;;		_state0obrtet
  5245 ;;		_state1obrkal
  5246 ;;		_state2obrpwm
  5247 ;;		_state3obradc
  5248 ;;		_state4obrhra
  5249 ;;		_state5tet
  5250 ;;		_state6kal
  5251 ;;		_state7pwm
  5252 ;;		_state8adc
  5253 ;;		_state9hra
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text17
  5258  0011B4                     __ptext17:
  5259                           	opt callstack 0
  5260  0011B4                     _LCD_ShowString:
  5261                           	opt callstack 26
  5262                           
  5263                           ;incstack = 0
  5264                           ;LCD_ShowString@lineNum stored from wreg
  5265  0011B4  6E0B               	movwf	LCD_ShowString@lineNum,c
  5266                           
  5267                           ;lcd.c: 63:     SSP2CON2bits.SEN = 1;
  5268  0011B6  806B               	bsf	3947,0,c	;volatile
  5269  0011B8                     l449:
  5270  0011B8  B06B               	btfsc	3947,0,c	;volatile
  5271  0011BA  D7FE               	goto	l449
  5272                           
  5273                           ;lcd.c: 65:     SSP2IF = 0;
  5274  0011BC  9EA4               	bcf	4004,7,c	;volatile
  5275                           
  5276                           ;lcd.c: 67:     LCD_Send(0x7c);
  5277  0011BE  0E7C               	movlw	124
  5278  0011C0  ECC4  F009         	call	_LCD_Send
  5279                           
  5280                           ;lcd.c: 69:     LCD_Send(0x80);
  5281  0011C4  0E80               	movlw	128
  5282  0011C6  ECC4  F009         	call	_LCD_Send
  5283                           
  5284                           ;lcd.c: 71:     if(lineNum == 1){
  5285  0011CA  040B               	decf	LCD_ShowString@lineNum,w,c
  5286  0011CC  A4D8               	btfss	status,2,c
  5287  0011CE  D004               	goto	l2255
  5288                           
  5289                           ;lcd.c: 72:         LCD_Send(0x80);
  5290  0011D0  0E80               	movlw	128
  5291  0011D2  ECC4  F009         	call	_LCD_Send
  5292                           
  5293                           ;lcd.c: 73:     }
  5294  0011D6  D007               	goto	l453
  5295  0011D8                     l2255:
  5296  0011D8  0E02               	movlw	2
  5297  0011DA  180B               	xorwf	LCD_ShowString@lineNum,w,c
  5298  0011DC  A4D8               	btfss	status,2,c
  5299  0011DE  D003               	goto	l453
  5300                           
  5301                           ;lcd.c: 75:         LCD_Send(0xC0);
  5302  0011E0  0EC0               	movlw	192
  5303  0011E2  ECC4  F009         	call	_LCD_Send
  5304  0011E6                     l453:
  5305                           
  5306                           ;lcd.c: 78:     LCD_Send(0x40);
  5307  0011E6  0E40               	movlw	64
  5308  0011E8  ECC4  F009         	call	_LCD_Send
  5309                           
  5310                           ;lcd.c: 80:     for (i = 0; i<16; i++){
  5311  0011EC  0E00               	movlw	0
  5312  0011EE  6E0C               	movwf	LCD_ShowString@i,c
  5313  0011F0                     l2265:
  5314                           
  5315                           ;lcd.c: 81:         LCD_Send(textData[i]);
  5316  0011F0  500C               	movf	LCD_ShowString@i,w,c
  5317  0011F2  2407               	addwf	LCD_ShowString@textData,w,c
  5318  0011F4  6E09               	movwf	??_LCD_ShowString& (0+255),c
  5319  0011F6  0E00               	movlw	0
  5320  0011F8  2008               	addwfc	LCD_ShowString@textData+1,w,c
  5321  0011FA  6E0A               	movwf	(??_LCD_ShowString+1)& (0+255),c
  5322  0011FC  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
  5323  001200  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
  5324  001204                     	if	0	;tblptru may be non-zero
  5325  001204                     	endif
  5326  001204                     	if	0	;tblptru may be non-zero
  5327  001204                     	endif
  5328  001204  0008               	tblrd		*
  5329  001206  50F5               	movf	tablat,w,c
  5330  001208  ECC4  F009         	call	_LCD_Send
  5331                           
  5332                           ;lcd.c: 82:     }
  5333  00120C  2A0C               	incf	LCD_ShowString@i,f,c
  5334  00120E  0E0F               	movlw	15
  5335  001210  640C               	cpfsgt	LCD_ShowString@i,c
  5336  001212  D7EE               	goto	l2265
  5337                           
  5338                           ;lcd.c: 84:     SSP2CON2bits.PEN = 1;
  5339  001214  846B               	bsf	3947,2,c	;volatile
  5340  001216                     l457:
  5341  001216  A46B               	btfss	3947,2,c	;volatile
  5342  001218  0012               	return	
  5343  00121A  D7FD               	goto	l457
  5344  00121C                     __end_of_LCD_ShowString:
  5345                           	opt callstack 0
  5346                           
  5347 ;; *************** function _LCD_Send *****************
  5348 ;; Defined at:
  5349 ;;		line 88 in file "lcd.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  data            1    wreg     unsigned char 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  data            1    5[COMRAM] unsigned char 
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      void 
  5356 ;; Registers used:
  5357 ;;		wreg
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;Total ram usage:        1 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    1
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_LCD_Init
  5374 ;;		_LCD_ShowString
  5375 ;;		_LCD_Clear
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text18
  5380  001388                     __ptext18:
  5381                           	opt callstack 0
  5382  001388                     _LCD_Send:
  5383                           	opt callstack 28
  5384                           
  5385                           ;incstack = 0
  5386                           ;LCD_Send@data stored from wreg
  5387  001388  6E06               	movwf	LCD_Send@data,c
  5388                           
  5389                           ;lcd.c: 90:     SSP2BUF = data;
  5390  00138A  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
  5391  00138E                     l463:
  5392  00138E  B06D               	btfsc	3949,0,c	;volatile
  5393  001390  D7FE               	goto	l463
  5394  001392                     u1230:
  5395  001392  AEA4               	btfss	4004,7,c	;volatile
  5396  001394  D7FE               	goto	u1230
  5397                           
  5398                           ;lcd.c: 93:     SSP2IF = 0;
  5399  001396  9EA4               	bcf	4004,7,c	;volatile
  5400  001398  0012               	return		;funcret
  5401  00139A                     __end_of_LCD_Send:
  5402                           	opt callstack 0
  5403                           
  5404 ;; *************** function _ISR *****************
  5405 ;; Defined at:
  5406 ;;		line 92 in file "newmain.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  aktualni        1    4[COMRAM] unsigned char 
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;Total ram usage:        5 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		Interrupt level 2
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	intcode
  5434  000008                     __pintcode:
  5435                           	opt callstack 0
  5436  000008                     _ISR:
  5437                           	opt callstack 26
  5438                           
  5439                           ;incstack = 0
  5440  000008  8225               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5441  00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
  5442  00000E  CFDA F004          	movff	fsr2h,??_ISR+3
  5443                           
  5444                           ;newmain.c: 93:     char aktualni;;newmain.c: 94:     static uint8_t rx_i = 0;;newmain.c
      +                          : 96:     if(TMR1IE & TMR1IF){
  5445  000012  0E01               	movlw	1
  5446  000014  A09D               	btfss	3997,0,c	;volatile
  5447  000016  0E00               	movlw	0
  5448  000018  A09E               	btfss	3998,0,c	;volatile
  5449  00001A  0E00               	movlw	0
  5450  00001C  A0E8               	btfss	wreg,0,c
  5451  00001E  D007               	goto	i2l2963
  5452                           
  5453                           ;newmain.c: 97:         TMR1 = 0xFFFF - 50000;
  5454  000020  0E3C               	movlw	60
  5455  000022  6ECF               	movwf	4047,c	;volatile
  5456  000024  0EAF               	movlw	175
  5457  000026  6ECE               	movwf	4046,c	;volatile
  5458                           
  5459                           ;newmain.c: 98:         gFlag = 1;
  5460  000028  0E01               	movlw	1
  5461  00002A  6E24               	movwf	_gFlag,c	;volatile
  5462                           
  5463                           ;newmain.c: 99:         TMR1IF = 0;
  5464  00002C  909E               	bcf	3998,0,c	;volatile
  5465  00002E                     i2l2963:
  5466                           
  5467                           ;newmain.c: 101:     if (ADIE && ADIF) {
  5468  00002E  BC9D               	btfsc	3997,6,c	;volatile
  5469  000030  AC9E               	btfss	3998,6,c	;volatile
  5470  000032  D00C               	goto	i2l2971
  5471                           
  5472                           ;newmain.c: 102:         pot1_val = (ADRESH << 8) | ADRESL;
  5473  000034  50C3               	movf	4035,w,c	;volatile
  5474  000036  CFC4 F001          	movff	4036,??_ISR	;volatile
  5475  00003A  6A02               	clrf	(??_ISR+1)& (0+255),c
  5476  00003C  C001  F002         	movff	??_ISR,??_ISR+1
  5477  000040  6A01               	clrf	??_ISR,c
  5478  000042  1001               	iorwf	??_ISR,w,c
  5479  000044  6E20               	movwf	_pot1_val,c	;volatile
  5480  000046  5002               	movf	??_ISR+1,w,c
  5481  000048  6E21               	movwf	_pot1_val+1,c	;volatile
  5482                           
  5483                           ;newmain.c: 103:         ADIF = 0;
  5484  00004A  9C9E               	bcf	3998,6,c	;volatile
  5485  00004C                     i2l2971:
  5486                           
  5487                           ;newmain.c: 117:     if(RC1IE && RC1IF) {
  5488  00004C  BA9D               	btfsc	3997,5,c	;volatile
  5489  00004E  AA9E               	btfss	3998,5,c	;volatile
  5490  000050  D017               	goto	i2l2987
  5491                           
  5492                           ;newmain.c: 118:         aktualni = RCREG1;
  5493  000052  CFAE F005          	movff	4014,ISR@aktualni	;volatile
  5494                           
  5495                           ;newmain.c: 119:         if (aktualni == '=') {
  5496  000056  0E3D               	movlw	61
  5497  000058  1805               	xorwf	ISR@aktualni,w,c
  5498  00005A  A4D8               	btfss	status,2,c
  5499  00005C  D008               	goto	i2l2983
  5500                           
  5501                           ;newmain.c: 120:             message.length = rx_i;
  5502  00005E  C023  F0B0         	movff	ISR@rx_i,_message+80	;volatile
  5503                           
  5504                           ;newmain.c: 121:             rx_i = 0;
  5505  000062  0E00               	movlw	0
  5506  000064  6E23               	movwf	ISR@rx_i,c
  5507                           
  5508                           ;newmain.c: 122:             message.full = 1;
  5509  000066  0E01               	movlw	1
  5510  000068  0100               	movlb	0	; () banked
  5511  00006A  6FB1               	movwf	(_message+81)& (0+255),b	;volatile
  5512                           
  5513                           ;newmain.c: 123:         } else {
  5514  00006C  D009               	goto	i2l2987
  5515  00006E                     i2l2983:
  5516                           
  5517                           ;newmain.c: 124:             message.data[rx_i] = aktualni;
  5518  00006E  0E60               	movlw	low _message
  5519  000070  2423               	addwf	ISR@rx_i,w,c
  5520  000072  6ED9               	movwf	fsr2l,c
  5521  000074  6ADA               	clrf	fsr2h,c
  5522  000076  0E00               	movlw	high _message
  5523  000078  22DA               	addwfc	fsr2h,f,c
  5524  00007A  C005  FFDF         	movff	ISR@aktualni,indf2
  5525                           
  5526                           ;newmain.c: 125:             rx_i++;
  5527  00007E  2A23               	incf	ISR@rx_i,f,c
  5528  000080                     i2l2987:
  5529                           
  5530                           ;newmain.c: 129:     if(TX1IE && TX1IF){
  5531  000080  B89D               	btfsc	3997,4,c	;volatile
  5532  000082  A89E               	btfss	3998,4,c	;volatile
  5533  000084  D003               	goto	i2l145
  5534                           
  5535                           ;newmain.c: 130:         TXREG1 = message.vysledek;
  5536  000086  C0B2  FFAD         	movff	_message+82,4013	;volatile
  5537                           
  5538                           ;newmain.c: 132:         TX1IE = 0;
  5539  00008A  989D               	bcf	3997,4,c	;volatile
  5540  00008C                     i2l145:
  5541  00008C  C004  FFDA         	movff	??_ISR+3,fsr2h
  5542  000090  C003  FFD9         	movff	??_ISR+2,fsr2l
  5543  000094  9225               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5544  000096  0011               	retfie		f
  5545  000098                     __end_of_ISR:
  5546                           	opt callstack 0
  5547                           
  5548                           	psect	rparam
  5549  0000                     
  5550                           	psect	temp
  5551  000025                     btemp:
  5552                           	opt callstack 0
  5553  000025                     	ds	1
  5554  0000                     int$flags	set	btemp
  5555  0000                     wtemp8	set	btemp+1
  5556  0000                     ttemp5	set	btemp+1
  5557  0000                     ttemp6	set	btemp+4
  5558  0000                     ttemp7	set	btemp+8
  5559                           tosu	equ	0xFFF
  5560                           tosh	equ	0xFFE
  5561                           tosl	equ	0xFFD
  5562                           stkptr	equ	0xFFC
  5563                           pclatu	equ	0xFFB
  5564                           pclath	equ	0xFFA
  5565                           pcl	equ	0xFF9
  5566                           tblptru	equ	0xFF8
  5567                           tblptrh	equ	0xFF7
  5568                           tblptrl	equ	0xFF6
  5569                           tablat	equ	0xFF5
  5570                           prodh	equ	0xFF4
  5571                           prodl	equ	0xFF3
  5572                           indf0	equ	0xFEF
  5573                           postinc0	equ	0xFEE
  5574                           postdec0	equ	0xFED
  5575                           preinc0	equ	0xFEC
  5576                           plusw0	equ	0xFEB
  5577                           fsr0h	equ	0xFEA
  5578                           fsr0l	equ	0xFE9
  5579                           wreg	equ	0xFE8
  5580                           indf1	equ	0xFE7
  5581                           postinc1	equ	0xFE6
  5582                           postdec1	equ	0xFE5
  5583                           preinc1	equ	0xFE4
  5584                           plusw1	equ	0xFE3
  5585                           fsr1h	equ	0xFE2
  5586                           fsr1l	equ	0xFE1
  5587                           bsr	equ	0xFE0
  5588                           indf2	equ	0xFDF
  5589                           postinc2	equ	0xFDE
  5590                           postdec2	equ	0xFDD
  5591                           preinc2	equ	0xFDC
  5592                           plusw2	equ	0xFDB
  5593                           fsr2h	equ	0xFDA
  5594                           fsr2l	equ	0xFD9
  5595                           status	equ	0xFD8


Data Sizes:
    Strings     700
    Constant    0
    Data        0
    BSS         89
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      36
    BANK0           160      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 20
		 -> STR_78(CODE[17]), STR_77(CODE[17]), STR_76(CODE[17]), STR_75(CODE[17]), 
		 -> STR_74(CODE[17]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[17]), 
		 -> STR_70(CODE[17]), STR_69(CODE[17]), STR_68(CODE[17]), STR_67(CODE[17]), 
		 -> STR_66(CODE[17]), STR_65(CODE[17]), STR_64(CODE[17]), STR_63(CODE[17]), 
		 -> STR_62(CODE[17]), STR_61(CODE[17]), STR_60(CODE[17]), STR_59(CODE[17]), 
		 -> STR_58(CODE[17]), STR_57(CODE[17]), STR_56(CODE[17]), STR_55(CODE[17]), 
		 -> STR_54(CODE[17]), STR_53(CODE[17]), STR_52(CODE[17]), STR_51(CODE[17]), 
		 -> STR_50(CODE[17]), STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[17]), 
		 -> STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), STR_43(CODE[17]), 
		 -> STR_42(CODE[17]), STR_41(CODE[17]), STR_40(CODE[17]), STR_39(CODE[17]), 
		 -> STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), STR_35(CODE[17]), 
		 -> STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), STR_31(CODE[17]), 
		 -> STR_30(CODE[17]), STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[17]), STR_23(CODE[17]), 
		 -> STR_22(CODE[17]), STR_21(CODE[17]), STR_20(CODE[17]), STR_19(CODE[17]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[20]), STR_11(CODE[20]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_FSM
    _LCD_Init->_LCD_Send
    _FSM->_state6kal
    _state9hra->_LCD_ShowString
    _state8adc->_LCD_ShowString
    _state7pwm->_LCD_ShowString
    _state6kal->___awdiv
    _state5tet->_LCD_ShowString
    _state4obrhra->_LCD_ShowString
    _state3obradc->_LCD_ShowString
    _state2obrpwm->_LCD_ShowString
    _state1obrkal->_LCD_ShowString
    _state0obrtet->_LCD_ShowString
    _LCD_ShowString->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   64090
                                _FSM
                           _LCD_Init
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _FSM                                                  2     2      0   64068
                                             29 COMRAM     2     2      0
                           _driveLED
                       _state0obrtet
                       _state1obrkal
                       _state2obrpwm
                       _state3obradc
                       _state4obrhra
                          _state5tet
                          _state6kal
                          _state7pwm
                          _state8adc
                          _state9hra
 ---------------------------------------------------------------------------------
 (2) _state9hra                                           10     8      2    6318
                                             12 COMRAM    10     8      2
                     _LCD_ShowString
 ---------------------------------------------------------------------------------
 (2) _state8adc                                            2     2      0    6220
                                             12 COMRAM     2     2      0
                     _LCD_ShowString
                           _driveLED
 ---------------------------------------------------------------------------------
 (2) _state7pwm                                            0     0      0    6085
                     _LCD_ShowString
 ---------------------------------------------------------------------------------
 (2) _state6kal                                           16    16      0    8091
                                             13 COMRAM    16    16      0
                     _LCD_ShowString
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     919
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _state5tet                                            4     4      0    6824
                                             12 COMRAM     4     4      0
                     _LCD_ShowString
                           _driveLED
 ---------------------------------------------------------------------------------
 (3) _driveLED                                             1     1      0     105
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _state4obrhra                                         0     0      0    6085
                     _LCD_ShowString
 ---------------------------------------------------------------------------------
 (2) _state3obradc                                         0     0      0    6085
                     _LCD_ShowString
 ---------------------------------------------------------------------------------
 (2) _state2obrpwm                                         0     0      0    6085
                     _LCD_ShowString
 ---------------------------------------------------------------------------------
 (2) _state1obrkal                                         0     0      0    6085
                     _LCD_ShowString
 ---------------------------------------------------------------------------------
 (2) _state0obrtet                                         0     0      0    6085
                     _LCD_ShowString
 ---------------------------------------------------------------------------------
 (3) _LCD_ShowString                                       6     4      2    6085
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Send                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FSM
     _driveLED
     _state0obrtet
       _LCD_ShowString
         _LCD_Send
     _state1obrkal
       _LCD_ShowString
         _LCD_Send
     _state2obrpwm
       _LCD_ShowString
         _LCD_Send
     _state3obradc
       _LCD_ShowString
         _LCD_Send
     _state4obrhra
       _LCD_ShowString
         _LCD_Send
     _state5tet
       _LCD_ShowString
         _LCD_Send
       _driveLED
     _state6kal
       _LCD_ShowString
         _LCD_Send
       ___awdiv
       ___wmul
     _state7pwm
       _LCD_ShowString
         _LCD_Send
     _state8adc
       _LCD_ShowString
         _LCD_Send
       _driveLED
     _state9hra
       _LCD_ShowString
         _LCD_Send
   _LCD_Init
     _LCD_Send
   _init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      54       5       52.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      24       1       38.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      78      12        0.0%
DATA                 0      0      78       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 10 23:23:34 2020

                     u30 1228                       u50 1232                       u45 122A  
                     u70 123C                       u65 1234                       u90 1246  
                     u85 123E             ___awdiv@sign 000B      ___wmul@multiplicand 0008  
                    l210 0994                      l202 0968                      l213 09AE  
                    l223 09EA                      l207 0986                      l240 0A56  
                    l305 0ED6                      l314 1286                      l234 0A32  
                    l226 09FA                      l218 09CC                      l243 0A60  
                    l252 0A9E                      l148 1128                      l237 0A3C  
                    l229 0A14                      l181 08EA                      l246 0A7A  
                    l174 08C0                      l166 0888                      l327 0FB2  
                    l255 0AA8                      l191 0926                      l440 0FF4  
                    l249 0A84                      l169 08A2                      l258 0AC2  
                    l194 0930                      l186 0908                      l178 08D0  
                    l443 107A                      l453 11E6                      l197 094A  
                    l463 138E                      l457 1216                      l449 11B8  
                    _GIE 007F97                      u110 1250                      u105 1248  
                    u130 125A                      _FSM 0886                      u125 1252  
                    _PR2 000FBB                      _ISR 0008        state6kal@aktualni 001D  
                    wreg 000FE8               _TXSTA1bits 000FAC       state6kal@dekadicky 001B  
                   ?_FSM 0001                     ?_ISR 0001                     l2313 119C  
                   l2411 0CAE                     l2317 11AA                     l2309 1192  
                   l2255 11D8                     l2343 0B66                     l2265 11F0  
                   l2433 0D4E                     l2601 01E2                     l2291 1154  
                   l2357 0BA6                     l2285 1144                     l2445 0D68  
                   l2533 0F32                     l2701 05D2                     l2621 0296  
                   l2375 0BFE                     l2551 0F86                     l2527 0F16  
                   l2607 0200                     l2615 024A                     l2393 0C56  
                   l2297 116A                     l2473 0E00                     l2545 0F6A  
                   l2609 022C                     l2617 0274                     l2299 1172  
                   l2491 0E72                     l2459 0DA4                     l2539 0F4E  
                   l2707 05F0                     l2715 063A                     l2571 00D6  
                   l2493 0E90                     l2557 0FA2                     l2709 061C  
                   l2717 0664                     l2581 0138                     l2573 00E6  
                   l2487 0E54                     l2671 04C6                     l2583 0148  
                   l2575 0102                     l2567 00B6                     l2489 0E62  
                   l2497 0EAE                     l2681 0528                     l2673 04D6  
                   l2665 049E                     l2593 0186                     l2585 0158  
                   l2569 00C6                     l2683 0538                     l2675 04F2  
                   l2667 04A6                     l2595 01B2                     l2587 0168  
                   l2579 010C                     l2765 0874                     l2693 0576  
                   l2685 0548                     l2669 04B6                     l2597 01C2  
                   l2695 05A2                     l2687 0558                     l2679 04FC  
                   l2767 087C                     l2599 01D2                     l2951 0AD6  
                   l2697 05B2                     l2699 05C2                     l2947 0ACC  
                   l2997 1378                     _ADIE 007CEE                     _ADIF 007CF6  
                   STR_1 FD8A                     STR_2 FDDF                     STR_3 FD79  
                   STR_4 FDF0                     STR_5 FDCE                     STR_6 FFDD  
                   STR_7 FDBD                     STR_8 FFEE                     STR_9 FD9B  
                   u2000 09EE                     u1230 1392                     u2030 0A18  
                   u1400 0CFE                     u2120 0A7E                     u1330 1176  
                   u2060 0A36                     u1510 0F22                     u2150 0AA2  
                   u1360 0B9E                     u1370 0BF6                     u2090 0A5A  
                   u2307 0FEA                     u1380 0C4E                     u1460 0D98  
                   u1620 027C                     u2180 0AC6                     u1700 08A6  
                   u2317 1084                     u1390 0CA6                     u1470 0DF0  
                   u2407 099E                     u2327 0892                     u2417 09BC  
                   u2337 08B0                     u1730 08C4                     u2507 029C  
                   u2427 09DA                     u2347 08DA                     u1820 092A  
                   u2517 02BC                     u2437 0A04                     u2357 08F8  
                   u1910 098A                     u2607 0412                     u2527 02E2  
                   u2447 0A22                     u2367 0916                     u1760 08EE  
                   u2617 0438                     u2537 0308                     u2457 0A46  
                   u2377 093A                     u1850 094E                     u2707 072A  
                   u2627 045E                     u2547 032E                     u2467 0A6A  
                   u2387 0958                     u1940 09B2                     u2717 0750  
                   u2637 0480                     u2557 0354                     u2477 0A8E  
                   u2397 0976                     u1790 090C                     u2807 0FBE  
                   u2727 0776                     u2647 0492                     u2567 037A  
                   u2487 0AB2                     u1880 096C                     u2817 0B50  
                   u2737 079C                     u2657 0672                     u2577 03A0  
                   u2497 0286                     u1970 09D0                     u2827 0B76  
                   u2747 07C2                     u2667 0692                     u2587 03C6  
                   _PEIE 007F96                     u2837 0BCE                     u2757 07E8  
                   u2677 06B8                     u2597 03EC                     u2847 0C26  
                   u2767 080E                     u2687 06DE                     u2857 0C7E  
                   u2777 0834                     u2697 0704                     u2867 0CD6  
                   u2787 0856                     u2877 0D0A                     u2797 0868  
                   _TMR1 000FCE                     _main 1370                     _init 108E  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
                   btemp 0025                     prodh 000FF4                     prodl 000FF3  
                   start 0098             ___param_bank 000000                    ??_FSM 001E  
                  ??_ISR 0001           _LCD_ShowString 11B4         __end_of_LCD_Init 108E  
       __end_of_LCD_Send 139A                    ?_main 0001                    ?_init 0001  
        __end_of___awdiv 11B4                    STR_10 FD57                    STR_11 FD43  
                  STR_12 FD43                    STR_20 FE89                    STR_13 FFBB  
                  STR_21 FE56                    STR_14 FFBB                    STR_30 FE67  
                  STR_22 FDAC                    STR_15 FFCC                    STR_31 FE34  
                  STR_23 FE01                    STR_32 FDAC                    STR_16 FFCC  
                  STR_40 FF22                    STR_24 FEAB                    STR_33 FE01  
                  STR_41 FF33                    STR_25 FE78                    STR_17 FD68  
                  STR_34 FDAC                    STR_50 FE89                    STR_42 FF44  
                  STR_26 FE45                    STR_18 FE23                    STR_27 FDAC  
                  STR_51 FE56                    STR_43 FF55                    STR_19 FEBC  
                  STR_35 FE12                    STR_52 FDAC                    STR_28 FE01  
                  STR_60 FE67                    STR_44 FF66                    STR_36 FEDE  
                  STR_53 FE01                    STR_61 FE34                    STR_45 FF77  
                  STR_37 FEEF                    STR_29 FE9A                    STR_62 FDAC  
                  STR_54 FEAB                    STR_70 FF55                    STR_46 FF88  
                  STR_38 FF00                    STR_63 FE01                    STR_55 FE78  
                  STR_71 FF44                    STR_47 FF99                    STR_39 FF11  
                  STR_64 FDAC                    STR_56 FE45                    STR_72 FF33  
                  STR_48 FFAA                    STR_57 FDAC                    STR_65 FE12  
                  STR_49 FEBC                    STR_73 FF22                    STR_58 FE01  
                  STR_74 FF11                    STR_66 FF99                    STR_59 FE9A  
                  STR_75 FF00                    STR_67 FF88                    STR_76 FEEF  
                  STR_68 FF77                    STR_77 FEDE                    STR_69 FF66  
                  STR_78 FECD          ___awdiv@divisor 0008                    _LATD2 007C62  
                  _LATC4 007C5C                    _RC1IE 007CED                    _LATD3 007C63  
                  _RC1IF 007CF5                    _LATD4 007C64                    _LATD5 007C65  
                  _LATD6 007C66                    i2l145 008C          ___awdiv@counter 000A  
                  _TX1IE 007CEC                    _TX1IF 007CF4                    _TRISD 000F95  
                  _gFlag 0024                    tablat 000FF5                    ttemp5 0026  
                  ttemp6 0029                    ttemp7 002D                    status 000FD8  
                  wtemp8 0026           __CFG_FOSC$HSMP 000000          __initialization 12B6  
 __end_of_LCD_ShowString 121C             __end_of_main 1388             __end_of_init 1130  
           LCD_Send@data 0006                   ??_main 0020                   ??_init 0006  
          __activetblptr 000002                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR1L 000FBE         ___awdiv@dividend 0006                   _ANSELA 000F38  
                 _ANSELC 000F3A                   _ANSELE 000F3C                   _GODONE 007E11  
         __CFG_WDTEN$OFF 000000                   i2l2971 004C                   i2l2963 002E  
                 i2l2983 006E                   i2l2987 0080                   _RCREG1 000FAE  
                 _SPBRG1 000FAF                   _TMR1IE 007CE8                   _TMR1IF 007CF0  
                 _TMR2IF 007CF1                   _TMR2ON 007DD2                   _TX1REG 000FAD  
                 _SSP2IF 007D27                   _TXREG1 000FAD             _CCPTMRS0bits 000F49  
        ?_LCD_ShowString 0007         __end_of_driveLED 125E                   ___wmul 1290  
              ??___awdiv 000A                   clear_0 12BC         ___awdiv@quotient 000C  
           __mediumconst FD42                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 12CC  
              ?_LCD_Init 0001                ?_LCD_Send 0001            ___rparam_used 000001  
         __pcstackCOMRAM 0001              ISR@aktualni 0005               __pbssBANK0 0060  
        __CFG_PLLCFG$OFF 000000               ??_LCD_Init 0007               ??_LCD_Send 0006  
                ISR@rx_i 0023                  ?___wmul 0006       __size_of_state8adc 00EE  
     __size_of_state6kal 01C0       __size_of_state9hra 07EA       __size_of_state5tet 01F6  
     __size_of_state7pwm 0032                  _SSP2ADD 000F6E                  _SSP2BUF 000F6F  
              ?_driveLED 0001           state6kal@druhy 0019          LCD_ShowString@i 000C  
         state6kal@prvni 0017                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 1130          __size_of___wmul 0026                  __pcinit 12B6  
                __ramtop 1000           state9hra@konec 0013                  __ptext0 1370  
                __ptext1 108E                  __ptext2 0FC8                  __ptext3 0886  
                __ptext4 009C                  __ptext5 0EDA                  __ptext6 125E  
                __ptext7 0D1A                  __ptext8 1290                  __ptext9 1130  
           __size_of_FSM 029E             __size_of_ISR 0090                _T1CONbits 000FCD  
              _T2CONbits 000FBA                  _message 0060     end_of_initialization 12CC  
             ??_driveLED 0006            __Lmediumconst FD42         ??_LCD_ShowString 0009  
  LCD_ShowString@lineNum 000B        __end_of_state8adc 0FC8        __end_of_state6kal 0EDA  
      __end_of_state9hra 0886        __end_of_state5tet 0D1A        __end_of_state7pwm 1290  
                postinc0 000FEE                _PORTAbits 000F80                _PORTCbits 000F82  
              _TRISAbits 000F92                _TRISCbits 000F94                _TRISDbits 000F95  
          ?_state0obrtet 0001            ?_state1obrkal 0001            ?_state3obradc 0001  
          ?_state2obrpwm 0001            ?_state4obrhra 0001              _CCP1CONbits 000FBD  
       state6kal@operace 0010        __size_of_LCD_Init 00C6        __size_of_LCD_Send 0012  
             driveLED@in 0006           __end_of___wmul 12B6      start_initialization 12B6  
            __end_of_FSM 0B24              __end_of_ISR 0098           ??_state0obrtet 000D  
         ??_state1obrkal 000D           ??_state3obradc 000D  state6kal@zacatekPrvniho 0011  
         ??_state2obrpwm 000D           ??_state4obrhra 000D       state8adc@led_state 000E  
               ??___wmul 000A              __pbssCOMRAM 0020                 FSM@state 0022  
      __size_of_driveLED 0042                __pintcode 0008            __pmediumconst FD42  
       state9hra@player1 0011         state9hra@player2 0015                 ?___awdiv 0006  
       __CFG_PRICLKEN$ON 000000                 _LCD_Init 0FC8                 _LCD_Send 1388  
         ___wmul@product 000A                 _LATAbits 000F89                 _PSTR1CON 000FB9  
        state6kal@i_1093 0015     __end_of_state0obrtet 1370     __end_of_state1obrkal 1352  
   __end_of_state3obradc 1316     __end_of_state2obrpwm 1334                _state8adc 0EDA  
              _state6kal 0D1A     __end_of_state4obrhra 12F8                _state9hra 009C  
              _state5tet 0B24                _state7pwm 125E               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0        ___wmul@multiplier 0006  
             state6kal@i 0013               state5tet@i 000F                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 0084               ?_state8adc 0001  
             ?_state6kal 0001               ?_state9hra 000D               ?_state5tet 0001  
             ?_state7pwm 0001               _ANSELAbits 000F38               _ANSELDbits 000F3B  
               __ptext10 0B24                 __ptext11 121C                 __ptext12 12DA  
               __ptext13 12F8                 __ptext14 1316                 __ptext15 1334  
               __ptext16 1352                 __ptext17 11B4                 __ptext18 1388  
           _SSP2CON1bits 000F6C             _SSP2CON2bits 000F6B                 _driveLED 121C  
          __size_of_main 0018            __size_of_init 00A2                 _pot1_val 0020  
               int$flags 0025  __size_of_LCD_ShowString 0068             _SSP2STATbits 000F6D  
               intlevel2 0000               _RCSTA1bits 000FAB    __size_of_state0obrtet 001E  
  __size_of_state1obrkal 001E    __size_of_state3obradc 001E    __size_of_state2obrpwm 001E  
  __size_of_state4obrhra 001E              ??_state8adc 000D              ??_state6kal 000E  
 LCD_ShowString@textData 0007              ??_state9hra 000F              ??_state5tet 000D  
            ??_state7pwm 000D             _state0obrtet 1352             _state1obrkal 1334  
           _state3obradc 12F8             _state2obrpwm 1316             _state4obrhra 12DA  
